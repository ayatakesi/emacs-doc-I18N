# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-06 05:53+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: top
#: ../../../../../doc/misc/vhdl-mode.texi:4 ../../../../../doc/misc/vhdl-mode.texi:55
#, no-wrap
msgid "VHDL Mode, an Emacs mode for editing VHDL code"
msgstr ""

#. type: include
#: ../../../../../doc/misc/vhdl-mode.texi:5
#, no-wrap
msgid "docstyle.texi"
msgstr ""

#. type: copying
#: ../../../../../doc/misc/vhdl-mode.texi:12
msgid "This file documents VHDL Mode, an Emacs mode for editing VHDL code."
msgstr ""

#. type: copying
#: ../../../../../doc/misc/vhdl-mode.texi:15
msgid ""
"Copyright @copyright{} 1995--2008, 2010, 2012, 2015--2021 Free Software "
"Foundation, Inc."
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:23
msgid ""
"Permission is granted to copy, distribute and/or modify this document under "
"the terms of the GNU Free Documentation License, Version 1.3 or any later "
"version published by the Free Software Foundation; with no Invariant "
"Sections, with the Front-Cover texts being ``A GNU Manual,'' and with the "
"Back-Cover Texts as in (a) below.  A copy of the license is included in the "
"section entitled ``GNU Free Documentation License.''"
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:26
msgid ""
"(a) The FSF's Back-Cover Text is: ``You have the freedom to copy and modify "
"this GNU manual.''"
msgstr ""

#. type: dircategory
#: ../../../../../doc/misc/vhdl-mode.texi:29
#, no-wrap
msgid "Emacs editing modes"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:32
msgid "VHDL Mode: (vhdl-mode)"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:32
msgid "Emacs mode for editing VHDL code."
msgstr ""

#. type: title
#: ../../../../../doc/misc/vhdl-mode.texi:37
#, no-wrap
msgid "VHDL Mode"
msgstr ""

#. type: subtitle
#: ../../../../../doc/misc/vhdl-mode.texi:39
#, no-wrap
msgid "A GNU Emacs mode for editing VHDL code."
msgstr ""

#. type: author
#: ../../../../../doc/misc/vhdl-mode.texi:41
#, no-wrap
msgid "Reto Zimmermann"
msgstr ""

#. type: email{#1}
#: ../../../../../doc/misc/vhdl-mode.texi:42
#, no-wrap
msgid "reto@@gnu.org"
msgstr ""

#. type: author
#: ../../../../../doc/misc/vhdl-mode.texi:43
#, no-wrap
msgid "Rod Whitby"
msgstr ""

#. type: email{#1}
#: ../../../../../doc/misc/vhdl-mode.texi:44
#, no-wrap
msgid "software.vhdl-mode@@rwhitby.net"
msgstr ""

#. type: node
#: ../../../../../doc/misc/vhdl-mode.texi:54
#, no-wrap
msgid "Top"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "Introduction::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "Getting Connected::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "New Indentation Engine::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "Customizing Indentation::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "Syntactic Symbols::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "Frequently Asked Questions::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "Getting the latest VHDL Mode release::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "Sample Init File::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "Limitations and Known Bugs::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "Mailing Lists and Submitting Bug Reports::"
msgstr ""

#. type: appendix
#: ../../../../../doc/misc/vhdl-mode.texi:76 ../../../../../doc/misc/vhdl-mode.texi:982 ../../../../../doc/misc/vhdl-mode.texi:983
#, no-wrap
msgid "GNU Free Documentation License"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "The license for this documentation."
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:76
msgid "Concept Index::"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/vhdl-mode.texi:76 ../../../../../doc/misc/vhdl-mode.texi:993 ../../../../../doc/misc/vhdl-mode.texi:994
#, no-wrap
msgid "Command Index"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/vhdl-mode.texi:76 ../../../../../doc/misc/vhdl-mode.texi:1005 ../../../../../doc/misc/vhdl-mode.texi:1006
#, no-wrap
msgid "Key Index"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/vhdl-mode.texi:76 ../../../../../doc/misc/vhdl-mode.texi:1011 ../../../../../doc/misc/vhdl-mode.texi:1012
#, no-wrap
msgid "Variable Index"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:78 ../../../../../doc/misc/vhdl-mode.texi:79 ../../../../../doc/misc/vhdl-mode.texi:80
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:84
msgid ""
"Welcome to VHDL Mode. This is a GNU Emacs mode for editing files containing "
"VHDL code."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:86
msgid "This manual will describe the following:"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/vhdl-mode.texi:90
msgid "How to get started using VHDL Mode."
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/vhdl-mode.texi:93
msgid "How the indentation engine works."
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/vhdl-mode.texi:96
msgid "How to customize the indentation engine."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:99
#, no-wrap
msgid "vhdl-version"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:104
msgid ""
"The major version number was incremented to 3 with the addition of many new "
"features for editing VHDL code to the new indentation engine, which was "
"introduced in major version 2. To find the minor revision number of this "
"release, use @kbd{M-x vhdl-version @key{RET}}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:109
msgid ""
"A special word of thanks goes to Rod Whitby, who wrote the VHDL Mode "
"indentation engine, and to Barry Warsaw, who wrote the CC Mode indentation "
"engine that formed the basis thereof. Their manuals were also the basis for "
"this manual."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:116
msgid ""
"This manual is not very up-to-date. It basically contains the indentation "
"machine documentation by Rod Whitby with only minor adaptions. A short "
"documentation of the entire VHDL Mode is available within the mode itself by "
"typing @kbd{C-c C-h}. Also, all commands and customization of most variables "
"are available through the menu, which makes everything highly "
"self-explaining."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:117 ../../../../../doc/misc/vhdl-mode.texi:118 ../../../../../doc/misc/vhdl-mode.texi:119
#, no-wrap
msgid "Getting Connected"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:123
msgid ""
"To get started, simply visit a @file{.vhd} file in Emacs; or type @kbd{M-x "
"vhdl-mode @key{RET}}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:124 ../../../../../doc/misc/vhdl-mode.texi:125 ../../../../../doc/misc/vhdl-mode.texi:126
#, no-wrap
msgid "New Indentation Engine"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:134
msgid ""
"VHDL Mode has a new indentation engine, providing a simplified, yet flexible "
"and general mechanism for customizing indentation. It breaks indentation "
"calculation into two steps. First for the line of code being indented, VHDL "
"Mode analyzes what kind of language construct it's looking at, then it "
"applies user defined offsets to the current line based on this analysis."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:139
msgid ""
"This section will briefly cover how indentation is calculated in VHDL "
"Mode. It is important to understand the indentation model being used so that "
"you will know how to customize VHDL Mode for your personal coding style."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:143 ../../../../../doc/misc/vhdl-mode.texi:145 ../../../../../doc/misc/vhdl-mode.texi:146 ../../../../../doc/misc/vhdl-mode.texi:147
#, no-wrap
msgid "Syntactic Analysis"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:143
msgid "Step 1 -- Syntactic Analysis"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:143 ../../../../../doc/misc/vhdl-mode.texi:239 ../../../../../doc/misc/vhdl-mode.texi:240 ../../../../../doc/misc/vhdl-mode.texi:241
#, no-wrap
msgid "Indentation Calculation"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:143
msgid "Step 2 -- Indentation Calculation"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:149 ../../../../../doc/misc/vhdl-mode.texi:243 ../../../../../doc/misc/vhdl-mode.texi:627 ../../../../../doc/misc/vhdl-mode.texi:767 ../../../../../doc/misc/vhdl-mode.texi:795
#, no-wrap
msgid "vhdl-offsets-alist"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:150 ../../../../../doc/misc/vhdl-mode.texi:244 ../../../../../doc/misc/vhdl-mode.texi:628 ../../../../../doc/misc/vhdl-mode.texi:768
#, no-wrap
msgid "offsets-alist @r{(vhdl-)}"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:151 ../../../../../doc/misc/vhdl-mode.texi:155
#, no-wrap
msgid "relative buffer position"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:152
#, no-wrap
msgid "syntactic symbol"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:153
#, no-wrap
msgid "syntactic component"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:154
#, no-wrap
msgid "syntactic component list"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:167
msgid ""
"The first thing VHDL Mode does when indenting a line of code, is to analyze "
"the line, determining the @dfn{syntactic component list} of the construct on "
"that line.  A @dfn{syntactic component} consists of a pair of information "
"(in lisp parlance, a @emph{cons cell}), where the first part is a "
"@dfn{syntactic symbol}, and the second part is a @dfn{relative buffer "
"position}.  Syntactic symbols describe elements of VHDL code, e.g., "
"@code{statement}, @code{comment}, @code{block-open}, @code{block-close}, "
"etc.  @xref{Syntactic Symbols}, for a complete list of currently recognized "
"syntactic symbols and their semantics.  Also, the variable "
"@code{vhdl-offsets-alist} contains the list of currently supported syntactic "
"symbols."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:171
msgid ""
"Conceptually, a line of VHDL code is always indented relative to the "
"indentation of some line higher up in the buffer.  This is represented by "
"the relative buffer position in the syntactic component."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:175
msgid ""
"It might help to see an example. Suppose we had the following code as the "
"only thing in a VHDL Mode buffer @footnote{The line numbers in this and "
"future examples don't actually appear in the buffer.}:"
msgstr ""

#. type: group
#: ../../../../../doc/misc/vhdl-mode.texi:183 ../../../../../doc/misc/vhdl-mode.texi:270 ../../../../../doc/misc/vhdl-mode.texi:402
#, no-wrap
msgid ""
"  1: inverter : process\n"
"  2: begin\n"
"  3:   q <= not d;\n"
"  4:   wait on d;\n"
"  5: end inverter;\n"
"\n"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/vhdl-mode.texi:187
#, no-wrap
msgid "C-c C-x"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:188
#, no-wrap
msgid "vhdl-show-syntactic-information"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:189
#, no-wrap
msgid "show-syntactic-information @r{(vhdl-)}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:194
msgid ""
"We can use the command @kbd{C-c C-x} "
"(@code{vhdl-show-syntactic-information}) to simply report what the syntactic "
"analysis is for the current line.  Running this command on line 4 of example "
"1, we'd see in the echo area:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/vhdl-mode.texi:197
#, no-wrap
msgid ""
"((statement . 28))\n"
"\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:203
msgid ""
"This tells us that the line is a statement and it is indented relative to "
"buffer position 28, which happens to be the @samp{q} on line 3.  If you were "
"to move point to line 3 and hit @kbd{C-c C-x}, you would see:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/vhdl-mode.texi:206 ../../../../../doc/misc/vhdl-mode.texi:281 ../../../../../doc/misc/vhdl-mode.texi:427
#, no-wrap
msgid ""
"((statement-block-intro . 20))\n"
"\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:212
msgid ""
"This indicates that line 3 is the first statement in a block, and is "
"indented relative to buffer position 20, which is the @samp{b} in the "
"@code{begin} keyword on line 2."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:213
#, no-wrap
msgid "comment only line"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:218
msgid ""
"Syntactic component lists can contain more than one component, and "
"individual syntactic components need not have relative buffer positions.  "
"The most common example of this is a line that contains a @dfn{comment only "
"line}."
msgstr ""

#. type: group
#: ../../../../../doc/misc/vhdl-mode.texi:222 ../../../../../doc/misc/vhdl-mode.texi:678 ../../../../../doc/misc/vhdl-mode.texi:763
#, no-wrap
msgid ""
"%%% TBD %%%\n"
"\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:228
msgid "Hitting @kbd{C-c C-x} on line 3 of the example gives us:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/vhdl-mode.texi:231
#, no-wrap
msgid ""
"((comment-intro) (block-intro . 46))\n"
"\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:238
msgid ""
"so you can see that the syntactic component list contains two syntactic "
"components.  Also notice that the first component, @samp{(comment-intro)} "
"has no relative buffer position."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:249
msgid ""
"Indentation for the current line is calculated using the syntactic component "
"list derived in step 1 above (see @ref{Syntactic Analysis}).  Each component "
"contributes to the final total indentation of the line in two ways."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:254
msgid ""
"First, the syntactic symbols are looked up in the @code{vhdl-offsets-alist} "
"variable, which is an association list of syntactic symbols and the offsets "
"to apply for those symbols.  These offsets are added to the running total."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:259
msgid ""
"Second, if the component has a relative buffer position, VHDL Mode adds the "
"column number of that position to the running total.  By adding up the "
"offsets and columns for every syntactic component on the list, the final "
"total indentation for the current line is computed."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:262
msgid ""
"Let's use our code example above to see how this works.  Here is our example "
"again."
msgstr ""

#. type: key{#1}
#: ../../../../../doc/misc/vhdl-mode.texi:274 ../../../../../doc/misc/vhdl-mode.texi:305
#, no-wrap
msgid "TAB"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:278
msgid ""
"Let's say point is on line 3 and we hit the @key{TAB} key to re-indent the "
"line.  Remember that the syntactic component list for that line is:"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:289
msgid ""
"VHDL Mode looks up @code{statement-block-intro} in the "
"@code{vhdl-offsets-alist} variable.  Let's say it finds the value @samp{2}; "
"it adds this to the running total (initialized to zero), yielding a running "
"total indentation of 2 spaces."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:297
msgid ""
"Next VHDL Mode goes to buffer position 20 and asks for the current column.  "
"Since the @code{begin} keyword at buffer position 20 is in column zero, it "
"adds @samp{0} to the running total.  Since there is only one syntactic "
"component on the list for this line, indentation calculation is complete, "
"and the total indentation for the line is 2 spaces.  Simple, huh?"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:302
msgid ""
"Actually, the mode usually just does The Right Thing without you having to "
"think about it in this much detail.  But when customizing indentation, it's "
"helpful to understand the general indentation model being used."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:303
#, no-wrap
msgid "vhdl-echo-syntactic-information-p"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:304
#, no-wrap
msgid "echo-syntactic-information-p @r{(vhdl-)}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:310
msgid ""
"To help you configure VHDL Mode, you can set the variable "
"@code{vhdl-echo-syntactic-information-p} to non-@code{nil} so that the "
"syntactic component list and calculated offset will always be echoed in the "
"minibuffer when you hit @kbd{@key{TAB}}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:313 ../../../../../doc/misc/vhdl-mode.texi:314 ../../../../../doc/misc/vhdl-mode.texi:315
#, no-wrap
msgid "Indentation Commands"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:321 ../../../../../doc/misc/vhdl-mode.texi:322 ../../../../../doc/misc/vhdl-mode.texi:323
#, no-wrap
msgid "Customizing Indentation"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:325 ../../../../../doc/misc/vhdl-mode.texi:430 ../../../../../doc/misc/vhdl-mode.texi:629
#, no-wrap
msgid "vhdl-set-offset"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:326
#, no-wrap
msgid "set-offset (vhdl-)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:336
msgid ""
"The @code{vhdl-offsets-alist} variable is where you customize all your "
"indentations.  You simply need to decide what additional offset you want to "
"add for every syntactic symbol.  You can use the command @kbd{C-c O} "
"(@code{vhdl-set-offset}) as the way to set offsets, both interactively and "
"from your mode hook.  Also, you can set up @emph{styles} of indentation.  "
"Most likely, you'll find one of the pre-defined styles will suit your needs, "
"but if not, this section will describe how to set up basic editing "
"configurations.  @xref{Styles}, for an explanation of how to set up named "
"styles."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:337 ../../../../../doc/misc/vhdl-mode.texi:646
#, no-wrap
msgid "vhdl-basic-offset"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:338
#, no-wrap
msgid "basic-offset (vhdl-)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:345
msgid ""
"As mentioned previously, the variable @code{vhdl-offsets-alist} is an "
"association list between syntactic symbols and the offsets to be applied for "
"those symbols.  In fact, these offset values can be an integer, a function "
"or variable name, or one of the following symbols: @code{+}, @code{-}, "
"@code{++}, @code{--}, @code{*}, or @code{/}.  The symbol values have the "
"following meanings:"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/vhdl-mode.texi:350
msgid "@code{+} -- 1 x @code{vhdl-basic-offset}"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/vhdl-mode.texi:352
msgid "@code{-} -- -1 x @code{vhdl-basic-offset}"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/vhdl-mode.texi:354
msgid "@code{++} -- 2 x @code{vhdl-basic-offset}"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/vhdl-mode.texi:356
msgid "@code{--} -- -2 x @code{vhdl-basic-offset}"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/vhdl-mode.texi:358
msgid "@code{*} -- 0.5 x @code{vhdl-basic-offset}"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/vhdl-mode.texi:360
msgid "@code{/} -- -0.5 x @code{vhdl-basic-offset}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:369
msgid ""
"So, for example, because most of the default offsets are defined in terms of "
"@code{+}, @code{-}, and @code{0}, if you like the general indentation style, "
"but you use 2 spaces instead of 4 spaces per level, you can probably achieve "
"your style just by changing @code{vhdl-basic-offset} like so (in your "
"@file{.emacs} file):"
msgstr ""

#. type: example
#: ../../../../../doc/misc/vhdl-mode.texi:372
#, no-wrap
msgid ""
"(setq vhdl-basic-offset 2)\n"
"\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:380
msgid ""
"To change indentation styles more radically, you will want to change the "
"value associated with the syntactic symbols in the @code{vhdl-offsets-alist} "
"variable.  First, I'll show you how to do that interactively, then I'll "
"describe how to make changes to your @file{.emacs} file so that your changes "
"are more permanent."
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:386
msgid "Interactive Customization::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:386
msgid "Permanent Customization::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:386
msgid "Styles::"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:386 ../../../../../doc/misc/vhdl-mode.texi:640 ../../../../../doc/misc/vhdl-mode.texi:641 ../../../../../doc/misc/vhdl-mode.texi:642
#, no-wrap
msgid "Advanced Customizations"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:388 ../../../../../doc/misc/vhdl-mode.texi:389 ../../../../../doc/misc/vhdl-mode.texi:390
#, no-wrap
msgid "Interactive Customization"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:394
msgid ""
"As an example of how to customize indentation, let's change the style of the "
"example above from:"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:407
msgid "to:"
msgstr ""

#. type: group
#: ../../../../../doc/misc/vhdl-mode.texi:415 ../../../../../doc/misc/vhdl-mode.texi:461
#, no-wrap
msgid ""
"  1: inverter : process\n"
"  2: begin\n"
"  3:     q <= not d;\n"
"  4:     wait on d;\n"
"  5: end inverter;\n"
"\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:424
msgid ""
"In other words, we want to change the indentation of the statements inside "
"the inverter process.  Notice that the construct we want to change starts on "
"line 3.  To change the indentation of a line, we need to see which syntactic "
"component affect the offset calculations for that line.  Hitting @kbd{C-c "
"C-x} on line 3 yields:"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:431 ../../../../../doc/misc/vhdl-mode.texi:630
#, no-wrap
msgid "set-offset @r{(vhdl-)}"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/vhdl-mode.texi:432
#, no-wrap
msgid "C-c O"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:441
msgid ""
"So we know that to change the offset of the first signal assignment, we need "
"to change the indentation for the @code{statement-block-intro} syntactic "
"symbol.  To do this interactively, just hit @kbd{C-c O} "
"(@code{vhdl-set-offset}).  This prompts you for the syntactic symbol to "
"change, providing a reasonable default.  In this case, the default is "
"@code{statement-block-intro}, which is just the syntactic symbol we want to "
"change!"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:448
msgid ""
"After you hit return, VHDL Mode will then prompt you for the new offset "
"value, with the old value as the default.  The default in this case is "
"@samp{+}, so hit backspace to delete the @samp{+}, then hit @samp{++} and "
"@kbd{RET}.  This will associate an offset of twice the basic indent with the "
"syntactic symbol @code{statement-block-intro} in the "
"@code{vhdl-offsets-alist} variable."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:449 ../../../../../doc/misc/vhdl-mode.texi:756
#, no-wrap
msgid "vhdl-indent-defun"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:450
#, no-wrap
msgid "indent-defun @r{(vhdl-)}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:453
msgid ""
"To check your changes quickly, just enter @kbd{M-x vhdl-indent-defun} to "
"reindent the entire function.  The example should now look like:"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:471
msgid ""
"Notice how just changing the offset on line 3 is all we needed to do.  Since "
"the other affected lines are indented relative to line 3, they are "
"automatically indented the way you'd expect.  For more complicated examples, "
"this may not always work.  The general approach to take is to always start "
"adjusting offsets for lines higher up in the file, then re-indent and see if "
"any following lines need further adjustments."
msgstr ""

#. type: node
#: ../../../../../doc/misc/vhdl-mode.texi:472
#, no-wrap
msgid "Permanent Customization"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:473 ../../../../../doc/misc/vhdl-mode.texi:474
#, no-wrap
msgid "Permanent Indentation"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:476
#, no-wrap
msgid "vhdl-mode-hook"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:477
#, no-wrap
msgid "hooks"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:482
msgid ""
"To make this change permanent, you need to add some lisp code to your "
"@file{.emacs} file.  VHDL Mode provides a @code{vhdl-mode-hook} that you can "
"use to customize your language editing styles.  This hook gets run as the "
"last thing when you enter VHDL Mode."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:488
msgid ""
"Here's a simplified example of what you can add to your @file{.emacs} file "
"to make the changes described in the previous section (@ref{Interactive "
"Customization}) more permanent.  See the Emacs manuals for more information "
"on customizing Emacs via hooks.  @xref{Sample Init File}, for a more "
"complete sample @file{.emacs} file."
msgstr ""

#. type: group
#: ../../../../../doc/misc/vhdl-mode.texi:498
#, no-wrap
msgid ""
"(defun my-vhdl-mode-hook ()\n"
"  ;; my customizations for all of vhdl-mode\n"
"  (vhdl-set-offset 'statement-block-intro '++)\n"
"  ;; other customizations can go here\n"
"  )\n"
"(add-hook 'vhdl-mode-hook 'my-vhdl-mode-hook)\n"
"\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:505
msgid ""
"For complex customizations, you will probably want to set up a @emph{style} "
"that groups all your customizations under a single name.  @xref{Styles}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:509
msgid ""
"The offset value can also be a function, and this is how power users gain "
"enormous flexibility in customizing indentation.  @xref{Advanced "
"Customizations}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:510 ../../../../../doc/misc/vhdl-mode.texi:511 ../../../../../doc/misc/vhdl-mode.texi:512
#, no-wrap
msgid "Styles"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:525
msgid ""
"Most people only need to edit code formatted in just a few well-defined and "
"consistent styles.  For example, their organization might impose a "
"``blessed'' style that all its programmers must conform to.  Similarly, "
"people who work on GNU software will have to use the GNU coding style on C "
"code.  Some shops are more lenient, allowing some variety of coding styles, "
"and as programmers come and go, there could be a number of styles in use.  "
"For this reason, VHDL Mode makes it convenient for you to set up logical "
"groupings of customizations called @dfn{styles}, associate a single name for "
"any particular style, and pretty easily start editing new or existing code "
"using these styles.  This chapter describes how to set up styles and how to "
"edit your C code using styles."
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:530
msgid "Built-in Styles::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:530
msgid "Adding Styles::"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:530 ../../../../../doc/misc/vhdl-mode.texi:605 ../../../../../doc/misc/vhdl-mode.texi:606 ../../../../../doc/misc/vhdl-mode.texi:607
#, no-wrap
msgid "File Styles"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:533 ../../../../../doc/misc/vhdl-mode.texi:534 ../../../../../doc/misc/vhdl-mode.texi:535
#, no-wrap
msgid "Built-in Styles"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:540
msgid ""
"If you're lucky, one of VHDL Mode's built-in styles might be just what "
"you're looking for.  Some of the most common VHDL styles are already "
"built-in.  These include:"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:543
#, no-wrap
msgid "IEEE style"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/vhdl-mode.texi:545
msgid "@code{GNU} -- the coding style in the IEEE Language Reference Manual."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:548
#, no-wrap
msgid "vhdl-set-style"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:549
#, no-wrap
msgid "set-style @r{(vhdl-)}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:552
msgid ""
"If you'd like to experiment with these built-in styles you can simply type "
"@kbd{M-x vhdl-set-style @key{RET}} in a VHDL Mode buffer."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:556
msgid ""
"You will be prompted for one of the above styles (with completion).  Enter "
"one of the styles and hit @kbd{RET}.  Note however that setting a style in "
"this way does @emph{not} automatically re-indent your file."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:565
msgid ""
"Once you find a built-in style you like, you can make the change permanent "
"by adding a call to your @file{.emacs} file.  Let's say for example that you "
"want to use the @code{IEEE} style in all your files.  You would add this:"
msgstr ""

#. type: group
#: ../../../../../doc/misc/vhdl-mode.texi:574
#, no-wrap
msgid ""
"(defun my-vhdl-mode-hook ()\n"
"  ;; use IEEE style for all VHDL code\n"
"  (vhdl-set-style \"IEEE\")\n"
"  ;; other customizations can go here\n"
"  )\n"
"(add-hook 'vhdl-mode-hook 'my-vhdl-mode-hook)\n"
"\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:580
msgid "@xref{Permanent Customization}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:581 ../../../../../doc/misc/vhdl-mode.texi:582 ../../../../../doc/misc/vhdl-mode.texi:583
#, no-wrap
msgid "Adding Styles"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:585 ../../../../../doc/misc/vhdl-mode.texi:644
#, no-wrap
msgid "vhdl-style-alist"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:586 ../../../../../doc/misc/vhdl-mode.texi:645
#, no-wrap
msgid "style-alist @r{(vhdl-)}"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:587
#, no-wrap
msgid "vhdl-add-style"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:588
#, no-wrap
msgid "add-style @r{(vhdl-)}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:601
msgid ""
"If none of the built-in styles is appropriate, you'll probably want to add a "
"new style definition.  Styles are kept in the @code{vhdl-style-alist} "
"variable, but you probably won't want to modify this variable directly.  "
"VHDL Mode provides a function, called @code{vhdl-add-style}, that you can "
"use to easily add new styles or update existing styles.  This function takes "
"two arguments, a @var{stylename} string, and an association list "
"@var{description} of style customizations.  If @var{stylename} is not "
"already in @code{vhdl-style-alist}, the new style is added, otherwise the "
"style already associated with @var{stylename} is changed to the new "
"@var{description}.  This function also takes an optional third argument, "
"which if non-@code{nil}, automatically institutes the new style in the "
"current buffer."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:604
msgid ""
"The sample @file{.emacs} file provides a concrete example of how a new style "
"can be added and automatically set.  @xref{Sample Init File}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:609
#, no-wrap
msgid "local variables"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:616
msgid ""
"The Emacs manual describes how you can customize certain variables on a "
"per-file basis by including a @dfn{Local Variable} block at the end of the "
"file.  So far, you've only seen a functional interface to VHDL Mode, which "
"is highly inconvenient for use in a Local Variable block.  VHDL Mode "
"provides two variables that make it easier for you to customize your style "
"on a per-file basis."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:617
#, no-wrap
msgid "vhdl-file-style"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:618
#, no-wrap
msgid "file-style @r{(vhdl-)}"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:619
#, no-wrap
msgid "vhdl-file-offsets"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:620
#, no-wrap
msgid "file-offsets @r{(vhdl-)}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:626
msgid ""
"The variable @code{vhdl-file-style} can be set to a style name string as "
"described in @ref{Built-in Styles}.  When the file is visited, VHDL Mode "
"will automatically set the file's style to this style using "
"@code{vhdl-set-style}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:635
msgid ""
"Another variable, @code{vhdl-file-offsets}, takes an association list "
"similar to what is allowed in @code{vhdl-offsets-alist}.  When the file is "
"visited, VHDL Mode will automatically institute these offsets using "
"@code{vhdl-set-offset}.  @xref{Customizing Indentation}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:638
msgid ""
"Note that file style settings (i.e., @code{vhdl-file-style}) are applied "
"before file offset settings (i.e., @code{vhdl-file-offsets})."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:647
#, no-wrap
msgid "basic-offset @r{(vhdl-)}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:658
msgid ""
"For most users, VHDL Mode will support their coding styles with very little "
"need for customizations.  Usually, one of the standard styles defined in "
"@code{vhdl-style-alist} will do the trick.  Sometimes, one of the syntactic "
"symbol offsets will need to be tweaked slightly, or perhaps "
"@code{vhdl-basic-offset} will need to be changed.  However, some styles "
"require a more advanced ability for customization, and one of the real "
"strengths of VHDL Mode is that the syntactic analysis model provides a very "
"flexible framework for customizing indentation. This allows you to perform "
"special indentation calculations for situations not handled by the mode "
"directly."
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/vhdl-mode.texi:662
msgid "Custom Indentation Functions::"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:662 ../../../../../doc/misc/vhdl-mode.texi:775 ../../../../../doc/misc/vhdl-mode.texi:776 ../../../../../doc/misc/vhdl-mode.texi:777
#, no-wrap
msgid "Other Special Indentations"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:664 ../../../../../doc/misc/vhdl-mode.texi:665 ../../../../../doc/misc/vhdl-mode.texi:666
#, no-wrap
msgid "Custom Indentation Functions"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:668
#, no-wrap
msgid "custom indentation functions"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:674
msgid ""
"One of the most common ways to customize VHDL Mode is by writing @dfn{custom "
"indentation functions} and associating them with specific syntactic symbols "
"(see @ref{Syntactic Symbols}).  VHDL Mode itself uses custom indentation "
"functions to provide more sophisticated indentation, for example when lining "
"up selected signal assignments:"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:691
msgid ""
"In this example, the @code{statement-cont} syntactic symbol has an offset of "
"@code{+}, and @code{vhdl-basic-offset} is 2, so lines 4 through 6 are simply "
"indented two spaces to the right of line 3.  But perhaps we'd like VHDL Mode "
"to be a little more intelligent so that it offsets the waveform descriptions "
"relative to the signal assignment operator in line 3.  To do this, we have "
"to write a custom indentation function which finds the column of signal "
"assignment operator on the first line of the statement.  Here is the lisp "
"code (from the @file{vhdl-mode.el} source file) that implements this:"
msgstr ""

#. type: group
#: ../../../../../doc/misc/vhdl-mode.texi:730
#, no-wrap
msgid ""
"(defun vhdl-lineup-statement-cont (langelem)\n"
"  ;; line up statement-cont after the assignment operator\n"
"  (save-excursion\n"
"    (let* ((relpos (cdr langelem))\n"
"\t   (assignp (save-excursion\n"
"\t\t     (goto-char (vhdl-point 'boi))\n"
"\t\t     (and (re-search-forward \"\\\\(<\\\\|:\\\\)=\"\n"
"\t\t\t\t\t     (vhdl-point 'eol) t)\n"
"\t\t\t  (- (point) (vhdl-point 'boi)))))\n"
"\t   (curcol (progn\n"
"\t\t     (goto-char relpos)\n"
"\t\t     (current-column)))\n"
"\t   foundp)\n"
"      (while (and (not foundp)\n"
"\t\t  (< (point) (vhdl-point 'eol)))\n"
"\t(re-search-forward \"\\\\(<\\\\|:\\\\)=\\\\|(\" (vhdl-point 'eol) 'move)\n"
"\t(if (vhdl-in-literal (cdr langelem))\n"
"\t    (forward-char)\n"
"\t  (if (= (preceding-char) ?\\()\n"
"\t      ;; skip over any parenthesized expressions\n"
"\t      (goto-char (min (vhdl-point 'eol)\n"
"\t\t\t      (scan-lists (point) 1 1)))\n"
"\t    ;; found an assignment operator (not at eol)\n"
"\t    (setq foundp (not (looking-at \"\\\\s-*$\"))))))\n"
"      (if (not foundp)\n"
"\t  ;; there's no assignment operator on the line\n"
"\t  vhdl-basic-offset\n"
"\t;; calculate indentation column after assign and ws, unless\n"
"\t;; our line contains an assignment operator\n"
"\t(if (not assignp)\n"
"\t    (progn\n"
"\t      (forward-char)\n"
"\t      (skip-chars-forward \" \\t\")\n"
"\t      (setq assignp 0)))\n"
"\t(- (current-column) assignp curcol))\n"
"      )))\n"
"\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:743
msgid ""
"Custom indent functions take a single argument, which is a syntactic "
"component cons cell (see @ref{Syntactic Analysis}).  The function returns an "
"integer offset value that will be added to the running total indentation for "
"the line.  Note that what actually gets returned is the difference between "
"the column that the signal assignment operator is on, and the column of the "
"buffer relative position passed in the function's argument.  Remember that "
"VHDL Mode automatically adds in the column of the component's relative "
"buffer position and we don't want that value added into the final total "
"twice."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:744
#, no-wrap
msgid "statement-cont syntactic symbol"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:745
#, no-wrap
msgid "vhdl-lineup-statement-cont"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:746
#, no-wrap
msgid "lineup-statement-cont @r{(vhdl-)}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:750
msgid ""
"Now, to associate the function @code{vhdl-lineup-statement-cont} with the "
"@code{statement-cont} syntactic symbol, we can add something like the "
"following to our @code{vhdl-mode-hook}:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/vhdl-mode.texi:753
#, no-wrap
msgid ""
"(vhdl-set-offset 'statement-cont 'vhdl-lineup-statement-cont)\n"
"\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:759
msgid ""
"Now the function looks like this after re-indenting (using @kbd{M-x "
"vhdl-indent-defun}):"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:774
msgid ""
"Custom indentation functions can be as simple or as complex as you like, and "
"any syntactic symbol that appears in @code{vhdl-offsets-alist} can have a "
"custom indentation function associated with it.  Note however that using "
"many custom indentation functions may have a performance impact on VHDL "
"Mode."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:779
#, no-wrap
msgid "vhdl-special-indent-hook"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/vhdl-mode.texi:780
#, no-wrap
msgid "special-indent-hook @r{(vhdl-)}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:789
msgid ""
"One other variable is available for you to customize VHDL Mode: "
"@code{vhdl-special-indent-hook}.  This is a standard hook variable that is "
"called after every line is indented by VHDL Mode.  You can use it to do any "
"special indentation or line adjustments your style dictates, such as adding "
"extra indentation to the port map clause in a component instantiation, etc.  "
"Note however, that you should not change @code{point} or @code{mark} inside "
"your @code{vhdl-special-indent-hook} functions."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:791 ../../../../../doc/misc/vhdl-mode.texi:792 ../../../../../doc/misc/vhdl-mode.texi:793
#, no-wrap
msgid "Syntactic Symbols"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:799
msgid ""
"The complete list of recognized syntactic symbols is described in the "
"@code{vhdl-offsets-alist} variable.  This chapter will provide some examples "
"to help clarify these symbols."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:800
#, no-wrap
msgid "-open syntactic symbols"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:801
#, no-wrap
msgid "-close syntactic symbols"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:806
msgid ""
"Most syntactic symbol names follow a general naming convention.  When a line "
"begins with a @code{begin} or @code{end} keyword, the syntactic symbol will "
"contain the suffix @code{-open} or @code{-close} respectively."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:807
#, no-wrap
msgid "-intro syntactic symbols"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:808
#, no-wrap
msgid "-cont syntactic symbols"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:809
#, no-wrap
msgid "-block-intro syntactic symbols"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:816
msgid ""
"Usually, a distinction is made between the first line that introduces a "
"construct and lines that continue a construct, and the syntactic symbols "
"that represent these lines will contain the suffix @code{-intro} or "
"@code{-cont} respectively.  As a sub-classification of this scheme, a line "
"which is the first of a particular block construct will contain the suffix "
"@code{-block-intro}."
msgstr ""

#. type: strong{#1}
#: ../../../../../doc/misc/vhdl-mode.texi:819
msgid ""
"<TBD> include the name and a brief example of every syntactic symbol "
"currently recognized"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:820 ../../../../../doc/misc/vhdl-mode.texi:821 ../../../../../doc/misc/vhdl-mode.texi:822
#, no-wrap
msgid "Frequently Asked Questions"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/vhdl-mode.texi:824
#, no-wrap
msgid "C-x h"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/vhdl-mode.texi:825
#, no-wrap
msgid "ESC C-\\"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/vhdl-mode.texi:826
#, no-wrap
msgid "ESC C-q"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/vhdl-mode.texi:827
#, no-wrap
msgid "ESC C-u"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/vhdl-mode.texi:828
#, no-wrap
msgid "RET"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/vhdl-mode.texi:829
#, no-wrap
msgid "LFD"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:830
#, no-wrap
msgid "newline-and-indent"
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:834
msgid "@strong{Q.} @emph{How do I re-indent the whole file?}"
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:838
msgid ""
"@strong{A.} Visit the file and hit @kbd{C-x h} to mark the whole "
"buffer. Then hit @kbd{@key{ESC} C-\\} to re-indent the entire region which "
"you've just marked. Or just enter @kbd{M-x vhdl-indent-buffer}."
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:841
msgid "@strong{Q.} @emph{How do I re-indent the entire function?}"
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:845
msgid ""
"@strong{A.} Hit @kbd{@key{ESC} C-h} to mark the entire function. Then hit "
"@kbd{@key{ESC} C-\\} to re-indent the entire region which you've just "
"marked."
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:848
msgid "@strong{Q.} @emph{How do I re-indent the current block?}"
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:852
msgid ""
"@strong{A.} First move to the brace which opens the block with "
"@kbd{@key{ESC} C-u}, then re-indent that expression with @kbd{@key{ESC} "
"C-q}."
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:855
msgid "@strong{Q.} @emph{How do I re-indent the current statement?}"
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:859
msgid ""
"@strong{A.} First move to the beginning of the statement with @kbd{@key{ESC} "
"a}, then re-indent that expression with @kbd{@key{ESC} C-q}."
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:864
msgid ""
"@strong{Q.} @emph{I put @code{(vhdl-set-offset 'statement-cont 0)} in my "
"@file{.emacs} file but I get an error saying that @code{vhdl-set-offset}'s "
"function definition is void.}"
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:871
msgid ""
"@strong{A.} This means that VHDL Mode wasn't loaded into your Emacs session "
"by the time the @code{vhdl-set-offset} call was reached, mostly likely "
"because VHDL Mode is being autoloaded.  Instead of putting the "
"@code{vhdl-set-offset} line in your top-level @file{.emacs} file, put it in "
"your @code{vhdl-mode-hook}, or simply add the following to the top of your "
"@file{.emacs} file:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/vhdl-mode.texi:874
#, no-wrap
msgid ""
"(require 'vhdl-mode)\n"
"\n"
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/vhdl-mode.texi:879
msgid "See the sample @file{.emacs} file @ref{Sample Init File} for details."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:883 ../../../../../doc/misc/vhdl-mode.texi:884 ../../../../../doc/misc/vhdl-mode.texi:885
#, no-wrap
msgid "Getting the latest VHDL Mode release"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:893
msgid ""
"The best way to be sure you always have the latest VHDL Mode release is to "
"join the @code{vhdl-mode-announce} mailing list.  If you are a brave soul, "
"and wish to participate in beta testing of new releases of VHDL Mode, you "
"may also join the @code{vhdl-mode-victims} mailing list.  Send email to the "
"maintainer @email{reto@@gnu.org} to join either of these lists."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:896
msgid ""
"The official Emacs VHDL Mode Home Page can be found at "
"@uref{http://www.iis.ee.ethz.ch/~zimmi/emacs/vhdl-mode.html}."
msgstr ""

#. type: chapter
#: ../../../../../doc/misc/vhdl-mode.texi:897 ../../../../../doc/misc/vhdl-mode.texi:898
#, no-wrap
msgid "Sample Init File"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:899
#, no-wrap
msgid "Sample init file"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:904
msgid ""
"Most customizations can be done using the ``Customize'' entry in the VHDL "
"Mode menu, which requires no editing of the .emacs file.  If you want to "
"customize indentation, here you go:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/vhdl-mode.texi:909
#, no-wrap
msgid ""
";; Here's a sample .emacs file that might help you along the way.  Just\n"
";; copy this region and paste it into your .emacs file.  You may want to\n"
";; change some of the actual values.\n"
"\n"
msgstr ""

#. type: example
#: ../../../../../doc/misc/vhdl-mode.texi:920
#, no-wrap
msgid ""
"(defconst my-vhdl-style\n"
"  '((vhdl-tab-always-indent        . t)\n"
"    (vhdl-comment-only-line-offset . 4)\n"
"    (vhdl-offsets-alist            . ((arglist-close    "
". vhdl-lineup-arglist)\n"
"                                      (statement-cont   . 0)\n"
"                                      (case-alternative . 4)\n"
"                                      (block-open       . 0)))\n"
"    (vhdl-echo-syntactic-information-p . t)\n"
"    )\n"
"  \"My VHDL Programming Style\")\n"
"\n"
msgstr ""

#. type: example
#: ../../../../../doc/misc/vhdl-mode.texi:934
#, no-wrap
msgid ""
";; Customizations for vhdl-mode\n"
"(defun my-vhdl-mode-hook ()\n"
"  ;; add my personal style and set it for the current buffer\n"
"  (vhdl-add-style \"PERSONAL\" my-vhdl-style t)\n"
"  ;; offset customizations not in my-vhdl-style\n"
"  (vhdl-set-offset 'statement-case-intro '++)\n"
"  ;; other customizations\n"
"  (setq tab-width 8\n"
"        ;; this will make sure spaces are used instead of tabs\n"
"        indent-tabs-mode nil)\n"
"  ;; keybindings for VHDL are put in vhdl-mode-map\n"
"  (define-key vhdl-mode-map \"\\C-m\" 'newline-and-indent)\n"
"  )\n"
"\n"
msgstr ""

#. type: example
#: ../../../../../doc/misc/vhdl-mode.texi:936
#, no-wrap
msgid "(add-hook 'vhdl-mode-hook 'my-vhdl-mode-hook)\n"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:938 ../../../../../doc/misc/vhdl-mode.texi:939 ../../../../../doc/misc/vhdl-mode.texi:940
#, no-wrap
msgid "Limitations and Known Bugs"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/vhdl-mode.texi:945
msgid "Re-indenting large regions or expressions can be slow."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:953 ../../../../../doc/misc/vhdl-mode.texi:954 ../../../../../doc/misc/vhdl-mode.texi:955
#, no-wrap
msgid "Mailing Lists and Submitting Bug Reports"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/vhdl-mode.texi:957
#, no-wrap
msgid "C-c C-b"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:958
#, no-wrap
msgid "vhdl-submit-bug-report"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/vhdl-mode.texi:959
#, no-wrap
msgid "submit-bug-report @r{(vhdl-)}"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:960
#, no-wrap
msgid "beta testers mailing list"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/vhdl-mode.texi:961
#, no-wrap
msgid "announcement mailing list"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:969
msgid ""
"To report bugs, use the @kbd{C-c C-b} (@code{vhdl-submit-bug-report})  "
"command.  This provides vital information I need to reproduce your problem.  "
"Make sure you include a concise, but complete code example.  Please try to "
"boil your example down to just the essential code needed to reproduce the "
"problem, and include an exact recipe of steps needed to expose the bug.  Be "
"especially sure to include any code that appears @emph{before} your bug "
"example."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:971
msgid "For other help or suggestions, send a message to @email{reto@@gnu.org}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:976
msgid ""
"Send an add message to @email{reto@@gnu.org} to get on the "
"@code{vhdl-mode-victims} beta testers list where beta releases of VHDL Mode "
"are posted.  Note that you shouldn't expect beta releases to be as stable as "
"public releases."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:980
msgid ""
"There is also an announce only list where the latest public releases of VHDL "
"Mode are posted.  Send an add message to @email{reto@@gnu.org} to be added "
"to this list."
msgstr ""

#. type: include
#: ../../../../../doc/misc/vhdl-mode.texi:984
#, no-wrap
msgid "doclicense.texi"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/vhdl-mode.texi:987 ../../../../../doc/misc/vhdl-mode.texi:988
#, no-wrap
msgid "Concept Index"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:999
msgid ""
"Since all VHDL Mode commands are prepended with the string @samp{vhdl-}, "
"each appears under its @code{vhdl-<thing>} name and its @code{<thing> "
"(vhdl-)} name."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/vhdl-mode.texi:1017
msgid ""
"Since all VHDL Mode variables are prepended with the string @samp{vhdl-}, "
"each appears under its @code{vhdl-<thing>} name and its @code{<thing> "
"(vhdl-)} name."
msgstr ""
