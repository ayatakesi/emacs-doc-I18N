# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-17 05:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: menuentry
#: ../../../../../doc/misc/eww.texi:4 ../../../../../doc/misc/eww.texi:29
#, no-wrap
msgid "Emacs Web Wowser"
msgstr ""

#. type: include
#: ../../../../../doc/misc/eww.texi:5
#, no-wrap
msgid "docstyle.texi"
msgstr ""

#. type: copying
#: ../../../../../doc/misc/eww.texi:10
msgid "This file documents the GNU Emacs Web Wowser (EWW) package."
msgstr ""

#. type: copying
#: ../../../../../doc/misc/eww.texi:12
msgid "Copyright @copyright{} 2014--2021 Free Software Foundation, Inc."
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/eww.texi:20
msgid "Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, with the Front-Cover Texts being ``A GNU Manual,'' and with the Back-Cover Texts as in (a) below.  A copy of the license is included in the section entitled ``GNU Free Documentation License.''"
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/eww.texi:23
msgid "(a) The FSF's Back-Cover Text is: ``You have the freedom to copy and modify this GNU manual.''"
msgstr ""

#. type: dircategory
#: ../../../../../doc/misc/eww.texi:26
#, no-wrap
msgid "Emacs misc features"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/eww.texi:29
msgid "EWW: (eww)"
msgstr ""

#. type: title
#: ../../../../../doc/misc/eww.texi:34
#, no-wrap
msgid "Emacs Web Wowser (EWW)"
msgstr ""

#. type: subtitle
#: ../../../../../doc/misc/eww.texi:35
#, no-wrap
msgid "A web browser for GNU Emacs."
msgstr ""

#. type: node
#: ../../../../../doc/misc/eww.texi:45
#, no-wrap
msgid "Top"
msgstr ""

#. type: top
#: ../../../../../doc/misc/eww.texi:46
#, no-wrap
msgid "EWW"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/eww.texi:55
msgid "Overview::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/eww.texi:55
msgid "Basics::"
msgstr ""

#. type: chapter
#: ../../../../../doc/misc/eww.texi:55 ../../../../../doc/misc/eww.texi:215
#: ../../../../../doc/misc/eww.texi:216
#, no-wrap
msgid "Advanced"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/eww.texi:59
msgid "Appendices"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/eww.texi:59
msgid "History and Acknowledgments::"
msgstr ""

#. type: chapter
#: ../../../../../doc/misc/eww.texi:59 ../../../../../doc/misc/eww.texi:349
#: ../../../../../doc/misc/eww.texi:350
#, no-wrap
msgid "GNU Free Documentation License"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/eww.texi:59
msgid "The license for this documentation."
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/eww.texi:65
msgid "Indices"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/eww.texi:65
msgid "Key Index::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/eww.texi:65
msgid "Variable Index::"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/eww.texi:65
msgid "Lisp Function Index::"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/eww.texi:65 ../../../../../doc/misc/eww.texi:373
#: ../../../../../doc/misc/eww.texi:374
#, no-wrap
msgid "Concept Index"
msgstr ""

#. type: chapter
#: ../../../../../doc/misc/eww.texi:67 ../../../../../doc/misc/eww.texi:68
#, no-wrap
msgid "Overview"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:72
msgid "@dfn{EWW}, the Emacs Web Wowser, is a web browser for GNU Emacs.  It can load, parse, and display various web pages using @dfn{shr.el}.  However a GNU Emacs with @code{libxml2} support is required."
msgstr ""

#. type: node
#: ../../../../../doc/misc/eww.texi:73
#, no-wrap
msgid "Basics"
msgstr ""

#. type: chapter
#: ../../../../../doc/misc/eww.texi:74
#, no-wrap
msgid "Basic Usage"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:76 ../../../../../doc/misc/eww.texi:79
#, no-wrap
msgid "eww"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:77
#, no-wrap
msgid "eww-open-file"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:78
#, no-wrap
msgid "eww-search-prefix"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:80
#, no-wrap
msgid "Web Browsing"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:87
msgid "You can open a URL or search the web with the command @kbd{M-x eww}.  If the input doesn't look like a URL or domain name the web will be searched via @code{eww-search-prefix}.  The default search engine is @url{https://duckduckgo.com, DuckDuckGo}.  If you want to open a file either prefix the file name with @code{file://} or use the command @kbd{M-x eww-open-file}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:91
msgid "If you invoke @code{eww} with a prefix argument, as in @w{@kbd{C-u M-x eww}}, it will create a new EWW buffer instead of reusing the default one, which is normally called @file{*eww*}."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:92
#, no-wrap
msgid "eww-quit"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:93
#, no-wrap
msgid "eww-reload"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:94
#, no-wrap
msgid "eww-copy-page-url"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:95
#, no-wrap
msgid "shr-maybe-probe-and-copy-url"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:96
#, no-wrap
msgid "q"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:97
#, no-wrap
msgid "w"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:98
#, no-wrap
msgid "g"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:103
msgid "If loading the URL was successful the buffer @file{*eww*} is opened and the web page is rendered in it.  You can leave EWW by pressing @kbd{q} or exit the browser by calling @kbd{eww-quit}.  To reload the web page hit @kbd{g} (@code{eww-reload})."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:109
msgid "Pressing @kbd{w} when point is on a link will call @code{shr-maybe-probe-and-copy-url}, which copies this link's @acronym{URL} to the kill ring.  If point is not on a link, pressing @kbd{w} calls @code{eww-copy-page-url}, which will copy the current page's URL to the kill ring instead."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:110
#, no-wrap
msgid "eww-open-in-new-buffer"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:111
#, no-wrap
msgid "M-RET"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:118
msgid "The @kbd{M-@key{RET}} command (@code{eww-open-in-new-buffer}) opens the URL at point in a new EWW buffer, akin to opening a link in a new ``tab'' in other browsers.  When @code{global-tab-line-mode} is enabled, this buffer is displayed in the tab on the window tab line.  When @code{tab-bar-mode} is enabled, a new tab is created on the frame tab bar."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:119
#, no-wrap
msgid "eww-readable"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:120
#, no-wrap
msgid "R"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:124
msgid "The @kbd{R} command (@code{eww-readable}) will attempt to determine which part of the document contains the ``readable'' text, and will only display this part.  This usually gets rid of menus and the like."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:125
#, no-wrap
msgid "eww-toggle-fonts"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:126
#, no-wrap
msgid "shr-use-fonts"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:127 ../../../../../doc/misc/eww.texi:133
#, no-wrap
msgid "F"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:130
msgid "The @kbd{F} command (@code{eww-toggle-fonts}) toggles whether to use variable-pitch fonts or not.  This sets the @code{shr-use-fonts} variable."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:131
#, no-wrap
msgid "eww-toggle-colors"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:132
#, no-wrap
msgid "shr-use-colors"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:136
msgid "The @kbd{M-C} command (@code{eww-toggle-colors}) toggles whether to use HTML-specified colors or not.  This sets the @code{shr-use-colors} variable."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:137
#, no-wrap
msgid "eww-download"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:138
#, no-wrap
msgid "eww-download-directory"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:139
#, no-wrap
msgid "d"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:140
#, no-wrap
msgid "Download"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:145
msgid "A URL can be downloaded with @kbd{d} (@code{eww-download}).  This will download the link under point if there is one, or else the URL of the current page.  The file will be written to the directory specified in @code{eww-download-directory} (default: @file{~/Downloads/})."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:146
#, no-wrap
msgid "eww-back-url"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:147
#, no-wrap
msgid "eww-forward-url"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:148
#, no-wrap
msgid "eww-list-histories"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:149
#, no-wrap
msgid "r"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:150
#, no-wrap
msgid "l"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:151
#, no-wrap
msgid "H"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:152
#, no-wrap
msgid "History"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:160
msgid "EWW remembers the URLs you have visited to allow you to go back and forth between them.  By pressing @kbd{l} (@code{eww-back-url}) you go to the previous URL@.  You can go forward again with @kbd{r} (@code{eww-forward-url}).  If you want an overview of your browsing history press @kbd{H} (@code{eww-list-histories}) to open the history buffer @file{*eww history*}.  The history is lost when EWW is quit.  If you want to remember websites you can use bookmarks."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:161
#, no-wrap
msgid "eww-history-limit"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:169
msgid "Along with the URLs visited, EWW also remembers both the rendered page (as it appears in the buffer) and its source.  This can take a considerable amount of memory, so EWW discards the history entries to keep their number within a set limit, as specified by @code{eww-history-limit}; the default being 50.  This variable could also be set to @code{nil} to allow for the history list to grow indefinitely."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:170
#, no-wrap
msgid "PDF"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:175
msgid "PDFs are viewed inline, by default, with @code{doc-view-mode}, but this can be customized by using the mailcap (@pxref{mailcap,,, emacs-mime, Emacs MIME Manual})  mechanism, in particular @code{mailcap-mime-data}."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:176
#, no-wrap
msgid "eww-add-bookmark"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:177
#, no-wrap
msgid "eww-list-bookmarks"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:178
#, no-wrap
msgid "b"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:179
#, no-wrap
msgid "B"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:180
#, no-wrap
msgid "Bookmarks"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:186
msgid "EWW allows you to @dfn{bookmark} URLs.  Simply hit @kbd{b} (@code{eww-add-bookmark}) to store a bookmark for the current website.  You can view stored bookmarks with @kbd{B} (@code{eww-list-bookmarks}).  This will open the bookmark buffer @file{*eww bookmarks*}."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:187
#, no-wrap
msgid "eww-switch-to-buffer"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:188
#, no-wrap
msgid "eww-list-buffers"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:189
#, no-wrap
msgid "s"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:190
#, no-wrap
msgid "S"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:191
#, no-wrap
msgid "Multiple Buffers"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:197
msgid "To get summary of currently opened EWW buffers, press @kbd{S} (@code{eww-list-buffers}).  The @file{*eww buffers*} buffer allows you to quickly kill, flip through and switch to specific EWW buffer.  To switch EWW buffers through a minibuffer prompt, press @kbd{s} (@code{eww-switch-to-buffer})."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:198
#, no-wrap
msgid "eww-browse-with-external-browser"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:199
#, no-wrap
msgid "browse-url-secondary-browser-function"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:200
#, no-wrap
msgid "eww-use-external-browser-for-content-type"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:201
#, no-wrap
msgid "&"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:202
#, no-wrap
msgid "External Browser"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:214
msgid "Although EWW and shr.el do their best to render webpages in GNU Emacs some websites use features which can not be properly represented or are not implemented (E.g., JavaScript).  If you have trouble viewing a website with EWW then hit @kbd{&} (@code{eww-browse-with-external-browser}) inside the EWW buffer to open the website in the external browser specified by @code{browse-url-secondary-browser-function}.  Some content types, such as video or audio content, do not make sense to display in GNU Emacs at all.  You can tell EWW to open specific content automatically in an external browser by customizing @code{eww-use-external-browser-for-content-type}."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:218
#, no-wrap
msgid "eww-view-source"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:219
#, no-wrap
msgid "v"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:220
#, no-wrap
msgid "Viewing Source"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:225
msgid "You can view the source of a website with @kbd{v} (@code{eww-view-source}).  This will open a new buffer @file{*eww-source*} and insert the source.  The buffer will be set to @code{html-mode} if available."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:226
#, no-wrap
msgid "url-cookie-list"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/eww.texi:227
#, no-wrap
msgid "C"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:228
#, no-wrap
msgid "Cookies"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:233
msgid "EWW handles cookies through the @ref{Top, url package, ,url} package.  You can list existing cookies with @kbd{C} (@code{url-cookie-list}).  For details about the Cookie handling @xref{Cookies,,,url}."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:234
#, no-wrap
msgid "shr-cookie-policy"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:245
msgid "Many @acronym{HTML} pages have images embedded in them, and EWW will download most of these by default.  When fetching images, cookies can be sent and received, and these can be used to track users.  To control when to send cookies when retrieving these images, the @code{shr-cookie-policy} variable can be used.  The default value, @code{same-origin}, means that EWW will only send cookies when fetching images that originate from the same source as the @acronym{HTML} page.  @code{nil} means ``never send cookies when retrieving these images'' and @code{t} means ``always send cookies when retrieving these images''."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:246
#, no-wrap
msgid "eww-header-line-format"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:247
#, no-wrap
msgid "Header"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:251
msgid "The header line of the EWW buffer can be changed by customizing @code{eww-header-line-format}.  The format replaces @code{%t} with the title of the website and @code{%u} with the URL."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/eww.texi:252
#, no-wrap
msgid "eww-toggle-paragraph-direction"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:253
#, no-wrap
msgid "paragraph direction"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:259
msgid "The @kbd{D} command (@code{eww-toggle-paragraph-direction}) toggles the paragraphs direction between left-to-right and right-to-left text.  This can be useful on web pages that display right-to-left test (like Arabic and Hebrew), but where the web pages don't explicitly state the directionality."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:272
#, no-wrap
msgid "shr-max-image-proportion"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:273
#, no-wrap
msgid "shr-blocked-images"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:274
#, no-wrap
msgid "Image Display"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:282
msgid "Loading random images from the web can be problematic due to their size or content.  By customizing @code{shr-max-image-proportion} you can set the maximal image proportion in relation to the window they are displayed in.  E.g., 0.7 means an image is allowed to take up 70% of the width and height.  If Emacs supports image scaling (ImageMagick support required) then larger images are scaled down.  You can block specific images completely by customizing @code{shr-blocked-images}."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:283
#, no-wrap
msgid "shr-color-visible-distance-min"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:284
#, no-wrap
msgid "shr-color-visible-luminance-min"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:285
#, no-wrap
msgid "Contrast"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:291
msgid "EWW (or rather its HTML renderer @code{shr}) uses the colors declared in the HTML page, but adjusts them if needed to keep a certain minimum contrast.  If that is still too low for you, you can customize the variables @code{shr-color-visible-distance-min} and @code{shr-color-visible-luminance-min} to get a better contrast."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:292
#, no-wrap
msgid "shr-discard-aria-hidden"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:293
#, no-wrap
msgid "@code{aria-hidden}, HTML attribute"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:301
msgid "The HTML attribute @code{aria-hidden} is meant to tell screen readers to ignore a tag's contents.  You can customize the variable @code{shr-discard-aria-hidden} to tell @code{shr} to ignore such tags.  This can be useful when using a screen reader on the output of @code{shr} (e.g., on EWW buffer text).  It can be useful even when not using a screen reader, since web authors often put this attribute on non-essential decorative elements."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:302
#, no-wrap
msgid "Desktop Support"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/eww.texi:303
#, no-wrap
msgid "Saving Sessions"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:308
msgid "In addition to maintaining the history at run-time, EWW will also save the partial state of its buffers (the URIs and the titles of the pages visited) in the desktop file if one is used.  @xref{Saving Emacs Sessions,,, emacs, The GNU Emacs Manual}."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:309
#, no-wrap
msgid "eww-desktop-remove-duplicates"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:318
msgid "EWW history may sensibly contain multiple entries for the same page URI@.  At run-time, these entries may still have different associated point positions or the actual Web page contents.  The latter, however, tend to be overly large to preserve in the desktop file, so they get omitted, thus rendering the respective entries entirely equivalent.  By default, such duplicate entries are not saved.  Setting @code{eww-desktop-remove-duplicates} to nil will force EWW to save them anyway."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:319
#, no-wrap
msgid "eww-restore-desktop"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:326
msgid "Restoring EWW buffers' contents may prove to take too long to finish.  When the @code{eww-restore-desktop} variable is set to @code{nil} (the default), EWW will not try to reload the last visited Web page when the buffer is restored from the desktop file, thus allowing for faster Emacs start-up times.  When set to @code{t}, restoring the buffers will also initiate the reloading of such pages."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:327
#, no-wrap
msgid "eww-restore-reload-prompt"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:335
msgid "The EWW buffer restored from the desktop file but not yet reloaded will contain a prompt, as specified by the @code{eww-restore-reload-prompt} variable.  The value of this variable will be passed through @code{substitute-command-keys} upon each use, thus allowing for the use of the usual substitutions, such as @code{\\[eww-reload]} for the current key binding of the @code{eww-reload} command."
msgstr ""

#. type: appendix
#: ../../../../../doc/misc/eww.texi:336 ../../../../../doc/misc/eww.texi:337
#, no-wrap
msgid "History and Acknowledgments"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:345
msgid "EWW was originally written by Lars Ingebrigtsen, known for his work on Gnus.  He started writing an Emacs HTML rendering library, @code{shr.el}, to read blogs in Gnus.  He eventually added a web browser front end and HTML form support.  Which resulted in EWW, the Emacs Web Wowser.  EWW was announced on 16 June 2013: @url{https://lars.ingebrigtsen.no/2013/06/16/eww/}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:348
msgid "EWW was then moved from the Gnus repository to GNU Emacs and several developers started contributing to it as well."
msgstr ""

#. type: include
#: ../../../../../doc/misc/eww.texi:351
#, no-wrap
msgid "doclicense.texi"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/eww.texi:353 ../../../../../doc/misc/eww.texi:354
#, no-wrap
msgid "Key Index"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/eww.texi:358 ../../../../../doc/misc/eww.texi:359
#, no-wrap
msgid "Variable Index"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/eww.texi:361
#, no-wrap
msgid "eww-after-render-hook"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/eww.texi:365
msgid "After eww has rendered the data in the buffer, @code{eww-after-render-hook} is called.  It can be used to alter the contents, for instance."
msgstr ""

#. type: node
#: ../../../../../doc/misc/eww.texi:368
#, no-wrap
msgid "Lisp Function Index"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/eww.texi:369
#, no-wrap
msgid "Function Index"
msgstr ""
