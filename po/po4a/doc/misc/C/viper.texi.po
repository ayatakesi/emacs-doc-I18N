# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-17 05:45+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2
msgid "% -*-texinfo-*-"
msgstr ""

#. type: include
#: ../../../../../doc/misc/viper.texi:8
#, no-wrap
msgid "docstyle.texi"
msgstr ""

#. type: copying
#: ../../../../../doc/misc/viper.texi:13
msgid "Copyright @copyright{} 1995--1997, 2001--2021 Free Software Foundation, Inc."
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/viper.texi:21
msgid "Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no Invariant Sections, with the Front-Cover Texts being ``A GNU Manual'', and with the Back-Cover Texts as in (a) below.  A copy of the license is included in the section entitled ``GNU Free Documentation License''."
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/viper.texi:24
msgid "(a) The FSF's Back-Cover Text is: ``You have the freedom to copy and modify this GNU manual.''"
msgstr ""

#. type: dircategory
#: ../../../../../doc/misc/viper.texi:27
#, no-wrap
msgid "Emacs misc features"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:30
msgid "VIPER: (viper)"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:30
msgid "A VI-emulation mode for Emacs."
msgstr ""

#. type: title
#: ../../../../../doc/misc/viper.texi:35
#, no-wrap
msgid "Viper Is a Package for Emacs Rebels"
msgstr ""

#. type: subtitle
#: ../../../../../doc/misc/viper.texi:36
#, no-wrap
msgid "a Vi emulator for Emacs"
msgstr ""

#. type: subtitle
#: ../../../../../doc/misc/viper.texi:37
#, no-wrap
msgid "November 2008, Viper Version 3.11.2"
msgstr ""

#. type: author
#: ../../../../../doc/misc/viper.texi:39
#, no-wrap
msgid "Michael Kifer (Viper)"
msgstr ""

#. type: author
#: ../../../../../doc/misc/viper.texi:40
#, no-wrap
msgid "Aamod Sane (VIP 4.4)"
msgstr ""

#. type: author
#: ../../../../../doc/misc/viper.texi:41
#, no-wrap
msgid "Masahiko Sato (VIP 3.5)"
msgstr ""

#. type: node
#: ../../../../../doc/misc/viper.texi:51
#, no-wrap
msgid "Top"
msgstr ""

#. type: top
#: ../../../../../doc/misc/viper.texi:52
#, no-wrap
msgid "Viper"
msgstr ""

#. type: iftex
#: ../../../../../doc/misc/viper.texi:56 ../../../../../doc/misc/viper.texi:116
msgid "We believe that one or more of the following statements are adequate descriptions of Viper:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:61 ../../../../../doc/misc/viper.texi:121
#, no-wrap
msgid ""
"Viper Is a Package for Emacs Rebels;\n"
"it is a VI Plan for Emacs Rescue\n"
"and/or a venomous VI PERil.\n"
msgstr ""

#. type: ifnottex
#: ../../../../../doc/misc/viper.texi:67
msgid "Technically speaking, Viper is a Vi emulation package for Emacs.  It implements all Vi and Ex commands, occasionally improving on them and adding many new features.  It gives the user the best of both worlds: Vi keystrokes for editing combined with the power of the Emacs environment."
msgstr ""

#. type: ifnottex
#: ../../../../../doc/misc/viper.texi:74
msgid "Viper emulates Vi at several levels, from the one that closely follows Vi conventions to the one that departs from many of them.  It has many customizable options, which can be used to tailor Viper to the work habits of various users.  This manual describes Viper, concentrating on the differences from Vi and new features of Viper."
msgstr ""

#. type: ifnottex
#: ../../../../../doc/misc/viper.texi:78
msgid "Viper, formerly known as VIP-19, was written by Michael Kifer.  It is based on VIP version 3.5 by Masahiko Sato and VIP version 4.4 by Aamod Sane.  About 15% of the code still comes from those older packages."
msgstr ""

#. type: ifnottex
#: ../../../../../doc/misc/viper.texi:84
msgid "Viper is intended to be usable without reading this manual; the defaults are set to make Viper as close to Vi as possible.  At startup, Viper will try to set the most appropriate default environment for you, based on your familiarity with Emacs.  It will also tell you the basic GNU Emacs window management commands to help you start immediately."
msgstr ""

#. type: iftex
#: ../../../../../doc/misc/viper.texi:87 ../../../../../doc/misc/viper.texi:142
msgid "Although this manual explains how to customize Viper, some basic familiarity with Emacs Lisp is a plus."
msgstr ""

#. type: ifnottex
#: ../../../../../doc/misc/viper.texi:90
msgid "It is recommended that you read the Overview node.  The other nodes may be visited as needed."
msgstr ""

#. type: iftex
#: ../../../../../doc/misc/viper.texi:94 ../../../../../doc/misc/viper.texi:153
msgid "Comments and bug reports are welcome.  @code{kifer@@cs.stonybrook.edu} is the current address for Viper bug reports.  Please use the Ex command @kbd{:submitReport} for this purpose."
msgstr ""

#. type: node
#: ../../../../../doc/misc/viper.texi:110
#: ../../../../../doc/misc/viper.texi:156
#, no-wrap
msgid "Overview"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:110
msgid "Read for a smoother start"
msgstr ""

#. type: chapter
#: ../../../../../doc/misc/viper.texi:110
#: ../../../../../doc/misc/viper.texi:905
#: ../../../../../doc/misc/viper.texi:906
#, no-wrap
msgid "Improvements over Vi"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:110
msgid "New features, Improvements"
msgstr ""

#. type: chapter
#: ../../../../../doc/misc/viper.texi:110
#: ../../../../../doc/misc/viper.texi:1570
#: ../../../../../doc/misc/viper.texi:1571
#, no-wrap
msgid "Customization"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:110
msgid "How to customize Viper"
msgstr ""

#. type: chapter
#: ../../../../../doc/misc/viper.texi:110
#: ../../../../../doc/misc/viper.texi:3000
#: ../../../../../doc/misc/viper.texi:3001
#, no-wrap
msgid "Commands"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:110
msgid "Vi and Ex Commands"
msgstr ""

#. type: appendix
#: ../../../../../doc/misc/viper.texi:110
#: ../../../../../doc/misc/viper.texi:4453
#: ../../../../../doc/misc/viper.texi:4454
#, no-wrap
msgid "GNU Free Documentation License"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:110
msgid "The license for this documentation."
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:110
msgid "Acknowledgments::"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/viper.texi:110
#: ../../../../../doc/misc/viper.texi:4531
#: ../../../../../doc/misc/viper.texi:4532
#, no-wrap
msgid "Key Index"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:110
msgid "Index of Vi and Ex Commands"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/viper.texi:110
#: ../../../../../doc/misc/viper.texi:4536
#: ../../../../../doc/misc/viper.texi:4537
#, no-wrap
msgid "Function Index"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:110
msgid "Index of Viper Functions"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/viper.texi:110
#: ../../../../../doc/misc/viper.texi:4541
#: ../../../../../doc/misc/viper.texi:4542
#, no-wrap
msgid "Variable Index"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:110
msgid "Index of Viper Variables"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/viper.texi:110
#: ../../../../../doc/misc/viper.texi:4546
#: ../../../../../doc/misc/viper.texi:4547
#, no-wrap
msgid "Package Index"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:110
msgid "Index of Packages Mentioned in this Document"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/viper.texi:110
#: ../../../../../doc/misc/viper.texi:4551
#: ../../../../../doc/misc/viper.texi:4552
#, no-wrap
msgid "Concept Index"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:110
msgid "Vi, Ex and Emacs concepts"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/viper.texi:112
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: iftex
#: ../../../../../doc/misc/viper.texi:129
msgid "Viper is a Vi emulation package for Emacs.  Viper contains virtually all of Vi and Ex functionality and much more.  It gives you the best of both worlds: Vi keystrokes for editing combined with the GNU Emacs environment.  Viper also fixes some common complaints with Vi commands.  This manual describes Viper, concentrating on the differences from Vi and on the new features of Viper."
msgstr ""

#. type: iftex
#: ../../../../../doc/misc/viper.texi:133
msgid "Viper was written by Michael Kifer.  It is based on VIP version 3.5 by Masahiko Sato and VIP version 4.4 by Aamod Sane.  About 15% of the code still comes from those older packages."
msgstr ""

#. type: iftex
#: ../../../../../doc/misc/viper.texi:139
msgid "Viper is intended to be usable out of the box, without reading this manual; the defaults are set to make Viper as close to Vi as possible.  At startup, Viper will attempt to set the most appropriate default environment for you, based on your familiarity with Emacs.  It will also tell you the basic GNU Emacs window management commands to help you start immediately."
msgstr ""

#. type: iftex
#: ../../../../../doc/misc/viper.texi:145
msgid "It is recommended that you read the chapter Overview.  The other chapters will be useful for customization and advanced usage."
msgstr ""

#. type: iftex
#: ../../../../../doc/misc/viper.texi:149
msgid "You should also learn to use the Info on-line hypertext manual system that comes with Emacs.  This manual can be read as an Info file.  Try the command @kbd{@key{ESC} x info} with vanilla Emacs sometime."
msgstr ""

#. type: chapter
#: ../../../../../doc/misc/viper.texi:157
#, no-wrap
msgid "Overview of Viper"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:164
msgid "Viper is a Vi emulation on top of Emacs.  At the same time, Viper provides a virtually unrestricted access to Emacs facilities.  Perfect compatibility with Vi is possible but not desirable.  This chapter tells you about the Emacs ideas that you should know about, how to use Viper within Emacs and some incompatibilities."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:175
msgid "This manual is written with the assumption that you are an experienced Vi user who wants to switch to Emacs while retaining the ability to edit files Vi style. Incredible as it might seem, there are experienced Emacs users who use Viper as a backdoor into the superior (as every Vi user already knows)  world of Vi! These users are well familiar with Emacs bindings and prefer them in some cases, especially in the Vi Insert state. John Hawkins <jshawkin@@eecs.umich.edu> has provided a set of customizations, which enables additional Emacs bindings under Viper.  These customizations can be included in your @file{~/.emacs.d/viper} file and are found at the following URL: @file{http://traeki.freeshell.org/files/viper-sample}."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:184
#: ../../../../../doc/misc/viper.texi:186
#: ../../../../../doc/misc/viper.texi:187
#, no-wrap
msgid "Emacs Preliminaries"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:184
msgid "Basic concepts in Emacs."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:184
#: ../../../../../doc/misc/viper.texi:314
#: ../../../../../doc/misc/viper.texi:315
#, no-wrap
msgid "Loading Viper"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:184
msgid "Loading and Preliminary Configuration."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:184
#: ../../../../../doc/misc/viper.texi:369
#: ../../../../../doc/misc/viper.texi:370
#, no-wrap
msgid "States in Viper"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:184
msgid "Viper has four states orthogonal to Emacs modes."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:184
#: ../../../../../doc/misc/viper.texi:758
#: ../../../../../doc/misc/viper.texi:759
#, no-wrap
msgid "The Minibuffer"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:184
msgid "Command line in Emacs."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:184
#: ../../../../../doc/misc/viper.texi:808
#: ../../../../../doc/misc/viper.texi:809
#, no-wrap
msgid "Multiple Files in Viper"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:184
msgid "True multiple file handling."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:184
#: ../../../../../doc/misc/viper.texi:884
#: ../../../../../doc/misc/viper.texi:885
#, no-wrap
msgid "Unimplemented Features"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:184
msgid "That are unlikely to be implemented."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:189
#, no-wrap
msgid "buffer"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:190
#, no-wrap
msgid "point"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:191
#, no-wrap
msgid "mark"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:192
#, no-wrap
msgid "text"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:193
#, no-wrap
msgid "looking at"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:194
#, no-wrap
msgid "end (of buffer)"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:195
#, no-wrap
msgid "end (of line)"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:196
#: ../../../../../doc/misc/viper.texi:954
#, no-wrap
msgid "region"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:203
msgid "Emacs can edit several files at once.  A file in Emacs is placed in a @dfn{buffer} that usually has the same name as the file.  Buffers are also used for other purposes, such as shell interfaces, directory editing, etc.  @xref{Dired,,Directory Editor,emacs,The GNU Emacs Manual}, for an example."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:210
msgid "A buffer has a distinguished position called the @dfn{point}.  A @dfn{point} is always between 2 characters, and is @dfn{looking at} the right hand character.  The cursor is positioned on the right hand character.  Thus, when the @dfn{point} is looking at the end-of-line, the cursor is on the end-of-line character, i.e., beyond the last character on the line.  This is the default Emacs behavior."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:217
msgid "The default settings of Viper try to mimic the behavior of Vi, preventing the cursor from going beyond the last character on the line.  By using Emacs commands directly (such as those bound to arrow keys), it is possible to get the cursor beyond the end-of-line.  However, this won't (or shouldn't) happen if you restrict yourself to standard Vi keys, unless you modify the default editing style.  @xref{Customization}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:229
msgid "In addition to the @dfn{point}, there is another distinguished buffer position called the @dfn{mark}.  @xref{Mark,,Mark,emacs,The GNU Emacs manual}, for more info on the mark.  The text between the @dfn{point} and the @dfn{mark} is called the @dfn{region} of the buffer.  For the Viper user, this simply means that in addition to the Vi textmarkers a--z, there is another marker called @dfn{mark}.  This is similar to the unnamed Vi marker used by the jump commands @kbd{``} and @kbd{''}, which move the cursor to the position of the last absolute jump.  Viper provides access to the region in most text manipulation commands as @kbd{r} and @kbd{R} suffix to commands that operate on text regions, e.g., @kbd{dr} to delete region, etc."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:236
msgid "Furthermore, Viper lets Ex-style commands to work on the current region.  This is done by typing a digit argument before @kbd{:}.  For instance, typing @kbd{1:} will prompt you with something like @emph{:123,135}, assuming that the current region starts at line 123 and ends at line 135.  There is no need to type the line numbers, since Viper inserts them automatically in front of the Ex command."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:238
msgid "@xref{Basics}, for more info."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:239
#, no-wrap
msgid "window"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:240
#: ../../../../../doc/misc/viper.texi:432
#, no-wrap
msgid "mode line"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:241
#, no-wrap
msgid "buffer information"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:242
#: ../../../../../doc/misc/viper.texi:761
#: ../../../../../doc/misc/viper.texi:1037
#, no-wrap
msgid "Minibuffer"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:243
#, no-wrap
msgid "command line"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:244
#, no-wrap
msgid "buffer (modified)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:261
msgid "Emacs divides the screen into tiled @dfn{windows}.  You can see the contents of a buffer through the window associated with the buffer.  The cursor of the screen is positioned on the character after @dfn{point}.  Every window has a @dfn{mode line} that displays information about the buffer.  You can change the format of the mode line, but normally if you see @samp{**} at the beginning of a mode line it means that the buffer is @dfn{modified}.  If you write out the contents of a buffer to a file, then the buffer will become not modified.  Also if you see @samp{%%} at the beginning of the mode line, it means that the file associated with the buffer is write protected.  The mode line will also show the buffer name and current major and minor modes (see below).  A special buffer called @dfn{Minibuffer} is displayed as the last line in a minibuffer window.  The minibuffer window is used for command input output.  Viper uses minibuffer window for @kbd{/} and @kbd{:} commands."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:262
#, no-wrap
msgid "mode"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:263
#, no-wrap
msgid "keymap"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:264
#, no-wrap
msgid "local keymap"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:265
#, no-wrap
msgid "global keymap"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:266
#, no-wrap
msgid "major mode"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:267
#, no-wrap
msgid "minor mode"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:281
msgid "An Emacs buffer can have a @dfn{major mode} that customizes Emacs for editing text of a particular sort by changing the functionality of the keys.  Keys are defined using a @dfn{keymap} that records the bindings between keystrokes and functions.  The @dfn{global keymap} is common to all the buffers.  Additionally, each buffer has its @dfn{local keymap} that determines the @dfn{mode} of the buffer.  If a function is bound to some key in the local keymap then that function will be executed when you type the key.  If no function is bound to a key in the local map, however, the function bound to the key in the global map will be executed.  @xref{Major Modes,Major Modes,Major Modes,emacs,The GNU Emacs Manual}, for more information."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:289
msgid "A buffer can also have a @dfn{minor mode}.  Minor modes are options that you can use or not.  A buffer in @code{text-mode} can have @code{auto-fill-mode} as minor mode, which can be turned off or on at any time.  In Emacs, a minor mode may have it own keymap, which overrides the local keymap when the minor mode is turned on.  For more information, @pxref{Minor Modes,Minor Modes,Minor Modes,emacs,The GNU Emacs Manual}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:290
#, no-wrap
msgid "Viper as minor mode"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:291
#, no-wrap
msgid "Control keys"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:292
#: ../../../../../doc/misc/viper.texi:548
#: ../../../../../doc/misc/viper.texi:704
#, no-wrap
msgid "Meta key"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:299
msgid "Viper is implemented as a collection of minor modes.  Different minor modes are involved when Viper emulates Vi command mode, Vi insert mode, etc.  You can also turn Viper on and off at any time while in Vi command mode.  @xref{States in Viper}, for more information."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:309
msgid "Emacs uses Control and Meta modifiers.  These are denoted as C and M, e.g., @kbd{^Z} as @kbd{C-z} and @kbd{Meta-x} as @kbd{M-x}.  The Meta key is usually located on each side of the Space bar; it is used in a manner similar to the Control key, e.g., @kbd{M-x} means typing @kbd{x} while holding the Meta key down.  For keyboards that do not have a Meta key, @key{ESC} is used as Meta.  Thus @kbd{M-x} is typed as @kbd{@key{ESC} x}.  Viper uses @key{ESC} to switch from Insert state to Vi state.  Therefore Viper defines @kbd{C-\\} as its Meta key in Vi state.  @xref{Vi State}, for more info."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:313
msgid "Emacs is structured as a Lisp interpreter around a C core.  Emacs keys cause Lisp functions to be called.  It is possible to call these functions directly, by typing @kbd{M-x function-name}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:319
msgid "The most common way to load it automatically is to include the following lines (in the given order!):"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:323
#, no-wrap
msgid ""
"(setq viper-mode t)\n"
"(require 'viper)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:331
msgid "in your @file{~/.emacs} file.  The @file{.emacs} file is placed in your home directory and it is be executed every time you invoke Emacs.  This is the place where all general Emacs customization takes place.  Beginning with version 20.0, Emacsen have an interactive interface, which simplifies the job of customization significantly."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:336
msgid "Viper also uses the file @file{~/.emacs.d/viper} for Viper-specific customization.  The location of Viper customization file can be changed by setting the variable @code{viper-custom-file-name} in @file{.emacs} @emph{prior} to loading Viper."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:342
msgid "The latest versions of Emacs have an interactive customization facility, which allows you to (mostly) bypass the use of the @file{.emacs} and @code{viper-custom-file-name} files. You can reach this customization facility from within Viper's VI state by executing the Ex command @kbd{:customize}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:347
msgid "Once invoked, Viper will arrange to bring up Emacs buffers in Vi state whenever this makes sense.  @xref{Packages that Change Keymaps}, to find out when forcing Vi command state on a buffer may be counter-productive."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:351
msgid "Even if your @file{.emacs} file does not invoke Viper automatically, you can still load Viper and enter the Vi command state by typing the following from within Emacs:"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:354
#, no-wrap
msgid "M-x viper-mode\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:363
msgid "When Emacs first comes up, if you have not specified a file on the command line, it will show the @file{*scratch*} buffer, in the @samp{Lisp Interaction} mode.  After you invoke Viper, you can start editing files by using @kbd{:e}, @kbd{:vi}, or @kbd{v} commands.  (@xref{File and Buffer Handling}, for more information on @kbd{v} and other new commands that, in many cases, are more convenient than @kbd{:e}, @kbd{:vi}, and similar old-style Vi commands.)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:368
msgid "Finally, if at some point you would want to de-Viperize your running copy of Emacs after Viper has been loaded, the command @kbd{M-x viper-go-away} will do it for you.  The function @code{toggle-viper-mode} toggles Viperization of Emacs on and off."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:372
#: ../../../../../doc/misc/viper.texi:478
#: ../../../../../doc/misc/viper.texi:4386
#: ../../../../../doc/misc/viper.texi:4420
#, no-wrap
msgid "C-z"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:373
#, no-wrap
msgid "ESC"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:374
#: ../../../../../doc/misc/viper.texi:3572
#, no-wrap
msgid "i"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:375
#: ../../../../../doc/misc/viper.texi:386
#: ../../../../../doc/misc/viper.texi:479
#, no-wrap
msgid "Emacs state"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:376
#: ../../../../../doc/misc/viper.texi:400
#: ../../../../../doc/misc/viper.texi:510
#, no-wrap
msgid "Vi state"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:377
#: ../../../../../doc/misc/viper.texi:418
#: ../../../../../doc/misc/viper.texi:669
#: ../../../../../doc/misc/viper.texi:3584
#, no-wrap
msgid "Insert state"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:378
#: ../../../../../doc/misc/viper.texi:423
#: ../../../../../doc/misc/viper.texi:729
#, no-wrap
msgid "Replace state"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:379
#: ../../../../../doc/misc/viper.texi:605
#: ../../../../../doc/misc/viper.texi:606
#: ../../../../../doc/misc/viper.texi:1469
#: ../../../../../doc/misc/viper.texi:3228
#, no-wrap
msgid "Ex commands"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:380
#: ../../../../../doc/misc/viper.texi:2531
#, no-wrap
msgid "viper-go-away"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:381
#: ../../../../../doc/misc/viper.texi:2535
#, no-wrap
msgid "toggle-viper-mode"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:384
msgid "Viper has four states, Emacs, Vi, Insert, and Replace."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:392
msgid "This is the state plain vanilla Emacs is normally in.  After you have loaded Viper, @kbd{C-z} will normally take you to Vi command state.  Another @kbd{C-z} will take you back to Emacs state.  This toggle key can be changed, @pxref{Customization} You can also type @kbd{M-x viper-mode} to change to Vi state."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:399
msgid "For users who chose to set their user level to 1 at Viper setup time, switching to Emacs state is deliberately made harder in order to not confuse the novice user.  In this case, @kbd{C-z} will either iconify Emacs (if Emacs runs as an application under X) or it will stop Emacs (if Emacs runs on a dumb terminal or in an Xterm window)."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:410
msgid "This is the Vi command mode.  Any of the Vi commands, such as @kbd{i, o, a}, @dots{}, will take you to Insert state.  All Vi commands may be used in this mode.  Most Ex commands can also be used.  For a full list of Ex commands supported by Viper, type @kbd{:} and then @key{TAB}.  To get help on any issue, including the Ex commands, type @kbd{:help}.  This will invoke Viper Info (if it is installed).  Then typing @kbd{i} will prompt you for a topic to search in the index.  Note: to search for Ex commands in the index, you should start them with a @kbd{:}, e.g., @kbd{:WW}."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:417
msgid "In Viper, Ex commands can be made to work on the current Emacs region.  This is done by typing a digit argument before @kbd{:}.  For instance, typing @kbd{1:} will prompt you with something like @emph{:123,135}, assuming that the current region starts at line 123 and ends at line 135.  There is no need to type the line numbers, since Viper inserts them automatically in front of the Ex command."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:422
msgid "Insert state is the Vi insertion mode.  @key{ESC} will take you back to Vi state.  Insert state editing can be done, including auto-indentation.  By default, Viper disables Emacs key bindings in Insert state."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:430
msgid "Commands like @kbd{cw} invoke the Replace state.  When you cross the boundary of a replacement region (usually designated via a @samp{$} sign), it will automatically change to Insert state.  You do not have to worry about it.  The key bindings remain practically the same as in Insert state.  If you type @key{ESC}, Viper will switch to Vi command mode, terminating the replacement state."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:446
msgid "The modes are indicated on the @dfn{mode line} as <E>, <I>, <V>, and <R>, so that the multiple modes do not confuse you.  Most of your editing can be done in Vi and Insert states.  Viper will try to make all new buffers be in Vi state, but sometimes they may come up in Emacs state.  @kbd{C-z} will take you to Vi state in such a case.  In some major modes, like Dired, Info, Gnus, etc., you should not switch to Vi state (and Viper will not attempt to do so) because these modes are not intended for text editing and many of the Vi keys have special meaning there.  If you plan to read news, browse directories, read mail, etc., from Emacs (which you should start doing soon!), you should learn about the meaning of the various keys in those special modes (typing @kbd{C-h m} in a buffer provides help with key bindings for the major mode of that buffer)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:451
msgid "If you switch to Vi in Dired or similar modes, no harm is done.  It is just that the special key bindings provided by those modes will be temporarily overshadowed by Viper's bindings.  Switching back to Viper's Emacs state will revive the environment provided by the current major mode."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:464
msgid "States in Viper are orthogonal to Emacs major modes, such as C mode or Dired mode.  You can turn Viper on and off for any Emacs state.  When Viper is turned on, Vi state can be used to move around.  In Insert state, the bindings for these modes can be accessed.  For beginners (users at Viper levels 1 and 2), these bindings are suppressed in Insert state, so that new users are not confused by the Emacs states.  Note that unless you allow Emacs bindings in Insert state, you cannot do many interesting things, like language sensitive editing.  For the novice user (at Viper level 1), all major mode bindings are turned off in Vi state as well.  This includes the bindings for key sequences that start with @kbd{C-c}, which practically means that all major mode bindings are unsupported.  @xref{Customization}, to find out how to allow Emacs keys in Insert state."
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:473
#: ../../../../../doc/misc/viper.texi:475
#: ../../../../../doc/misc/viper.texi:476
#, no-wrap
msgid "Emacs State"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:473
msgid "This is the state you should learn more about when you get up to speed with Viper."
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:473
#: ../../../../../doc/misc/viper.texi:507
#: ../../../../../doc/misc/viper.texi:508
#, no-wrap
msgid "Vi State"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:473
msgid "Vi commands are executed in this state."
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:473
#: ../../../../../doc/misc/viper.texi:666
#: ../../../../../doc/misc/viper.texi:667
#, no-wrap
msgid "Insert State"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:473
msgid "You can enter text, and also can do sophisticated editing if you know enough Emacs commands."
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:473
#: ../../../../../doc/misc/viper.texi:726
#: ../../../../../doc/misc/viper.texi:727
#, no-wrap
msgid "Replace State"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:473
msgid "Like Insert mode, but it is invoked via the replacement commands, such as cw, C, R, etc."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:485
msgid "You will be in this mode only by accident (hopefully).  This is the state Emacs is normally in (imagine!!).  Now leave it as soon as possible by typing @kbd{C-z}.  Then you will be in Vi state (sigh of relief) :-)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:494
msgid "Emacs state is actually a Viperism to denote all the major and minor modes (@pxref{Emacs Preliminaries}) other than Viper that Emacs can be in.  Emacs can have several modes, such as C mode for editing C programs, LaTeX mode for editing LaTeX documents, Dired for directory editing, etc.  These are major modes, each with a different set of key-bindings.  Viper states are orthogonal to these Emacs major modes.  The presence of these language sensitive and other modes is a major win over Vi.  @xref{Improvements over Vi}, for more."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:501
msgid "The bindings for these modes can be made available in the Viper Insert state as well as in Emacs state.  Unless you specify your user level as 1 (a novice), all major mode key sequences that start with @kbd{C-x} and @kbd{C-c} are also available in Vi state.  This is important because major modes designed for editing files, such as cc-mode or latex-mode, use key sequences that begin with @kbd{C-x} and @kbd{C-c}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:505
msgid "There is also a key that lets you temporarily escape to Vi command state from the Insert state: typing @kbd{C-z} will let you execute a single Vi command while staying in Viper's Insert state."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:515
msgid "This is the Vi command mode.  When Viper is in Vi state, you will see the sign <V> in the mode line.  Most keys will work as in Vi.  The notable exceptions are:"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:517
#: ../../../../../doc/misc/viper.texi:518
#: ../../../../../doc/misc/viper.texi:1306
#, no-wrap
msgid "C-x"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:525
msgid "@kbd{C-x} is used to invoke Emacs commands, mainly those that do window management.  @kbd{C-x 2} will split a window, @kbd{C-x 0} will close a window.  @kbd{C-x 1} will close all other windows.  @kbd{C-xb} is used to switch buffers in a window, and @kbd{C-xo} to move through windows.  These are about the only necessary keystrokes.  For the rest, see the GNU Emacs Manual."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:526
#: ../../../../../doc/misc/viper.texi:527
#: ../../../../../doc/misc/viper.texi:1307
#, no-wrap
msgid "C-c"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:531
msgid "For user levels 2 and higher, this key serves as a prefix key for the key sequences used by various major modes.  For users at Viper level 1, @kbd{C-c} simply beeps."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:532
#: ../../../../../doc/misc/viper.texi:777
#: ../../../../../doc/misc/viper.texi:1409
#, no-wrap
msgid "C-g and C-]"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:533
#: ../../../../../doc/misc/viper.texi:1410
#: ../../../../../doc/misc/viper.texi:3915
#: ../../../../../doc/misc/viper.texi:3965
#, no-wrap
msgid "C-g"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:534
#: ../../../../../doc/misc/viper.texi:1411
#, no-wrap
msgid "C-]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:546
msgid "These are the Emacs @samp{quit} keys.  There will be cases where you will have to use @kbd{C-g} to quit.  Similarly, @kbd{C-]} is used to exit @samp{Recursive Edits} in Emacs for which there is no comparable Vi functionality and no key-binding.  Recursive edits are indicated by @samp{[]} brackets framing the modes on the mode line.  @xref{Recursive Edit,Recursive Edit,Recursive Edit,emacs,The GNU Emacs Manual}.  At user level 1, @kbd{C-g} is bound to @code{viper-info-on-file} function instead."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:546
#: ../../../../../doc/misc/viper.texi:547
#: ../../../../../doc/misc/viper.texi:4378
#: ../../../../../doc/misc/viper.texi:4421
#, no-wrap
msgid "C-\\"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:560
msgid "Viper uses @key{ESC} as a switch between Insert and Vi states.  Emacs uses @key{ESC} for Meta.  The Meta key is very important in Emacs since many functions are accessible only via that key as @kbd{M-x function-name}.  Therefore, we need to simulate it somehow.  In Viper's Vi, Insert, and Replace states, the meta key is set to be @kbd{C-\\}.  Thus, to get @kbd{M-x}, you should type @kbd{C-\\ x} (if the keyboard has no Meta key, which is rare these days).  This works both in the Vi command state and in the Insert and Replace states.  In Vi command state, you can also use @kbd{\\ @key{ESC}} as the meta key."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:566
msgid "Note: Emacs binds @kbd{C-\\} to a function that offers to change the keyboard input method in the multilingual environment.  Viper overrides this binding.  However, it is still possible to switch the input method by typing @kbd{\\ C-\\} in the Vi command state and @kbd{C-z \\ C-\\} in the Insert state.  Or you can use the MULE menu in the menubar."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:570
msgid "Other differences are mostly improvements.  The ones you should know about are:"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:572
#, no-wrap
msgid "Undo"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:573
#: ../../../../../doc/misc/viper.texi:3907
#, no-wrap
msgid "u"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:578
msgid "@kbd{u} will undo.  Undo can be repeated by the @kbd{.} key.  Undo itself can be undone.  Another @kbd{u} will change the direction.  The presence of repeatable undo means that @kbd{U}, undoing lines, is not very important.  Therefore, @kbd{U} also calls @code{viper-undo}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:578
#, no-wrap
msgid "multiple undo"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:579
#: ../../../../../doc/misc/viper.texi:1000
#: ../../../../../doc/misc/viper.texi:3886
#, no-wrap
msgid "undo"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:582
#, no-wrap
msgid "Counts"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:584
msgid "Most commands, @kbd{~}, @kbd{[[}, @kbd{p}, @kbd{/}, @dots{}, etc., take counts."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:586
#, no-wrap
msgid "Regexps"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:599
msgid "Viper uses Emacs Regular Expressions for searches.  These are a superset of Vi regular expressions, excepting the change-of-case escapes @samp{\\u}, @samp{\\L}, @dots{}, etc.  @xref{Regexps,,Syntax of Regular Expressions,emacs,The GNU Emacs Manual}, for details.  Files specified to @kbd{:e} use @code{csh} regular expressions (globbing, wildcards, what have you).  However, the function @code{viper-toggle-search-style}, bound to @kbd{C-c /}, lets the user switch from search with regular expressions to plain vanilla search and vice versa.  It also lets one switch from case-sensitive search to case-insensitive and back.  @xref{Viper Specials}, for more details."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:599
#, no-wrap
msgid "regular expressions"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:600
#: ../../../../../doc/misc/viper.texi:1428
#: ../../../../../doc/misc/viper.texi:3364
#, no-wrap
msgid "vanilla search"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:601
#: ../../../../../doc/misc/viper.texi:1429
#: ../../../../../doc/misc/viper.texi:3365
#, no-wrap
msgid "case-sensitive search"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:602
#: ../../../../../doc/misc/viper.texi:1430
#: ../../../../../doc/misc/viper.texi:3366
#, no-wrap
msgid "case-insensitive search"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:603
#: ../../../../../doc/misc/viper.texi:1419
#: ../../../../../doc/misc/viper.texi:1420
#: ../../../../../doc/misc/viper.texi:3356
#: ../../../../../doc/misc/viper.texi:3387
#: ../../../../../doc/misc/viper.texi:3761
#, no-wrap
msgid "C-c /"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:620
msgid "The current working directory of a buffer is automatically inserted in the minibuffer if you type @kbd{:e} then space.  Absolute filenames are required less often in Viper.  For file names, Emacs uses a convention that is slightly different from other programs.  It is designed to minimize the need for deleting file names that Emacs provides in its prompts.  (This is usually convenient, but occasionally the prompt may suggest a wrong file name for you.)  If you see a prompt @kbd{/usr/foo/} and you wish to edit the file @kbd{~/.file}, you don't have to erase the prompt.  Instead, simply continue typing what you need.  Emacs will interpret @kbd{/usr/foo/~/.file} correctly.  Similarly, if the prompt is @kbd{~/foo/} and you need to get to @kbd{/bar/file}, keep typing.  Emacs interprets @kbd{~/foo//bar/} as @kbd{/bar/file}, since when it sees @samp{//}, it understands that @kbd{~/foo/} is to be discarded."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:629
msgid "The command @kbd{:cd} will change the default directory for the current buffer.  The command @kbd{:e} will interpret the filename argument in @code{csh}.  @xref{Customization}, if you want to change the default shell.  The command @kbd{:next} takes counts from @kbd{:args}, so that @kbd{:rew} is obsolete.  Also, @kbd{:args} will show only the invisible files (i.e., those that are not currently seen in Emacs windows)."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:637
msgid "When applicable, Ex commands support file completion and history.  This means that by typing a partial file name and then @key{TAB}, Emacs will try to complete the name or it will offer a menu of possible completions.  This works similarly to Tcsh and extends the behavior of Csh.  While Emacs is waiting for a file name, you can type @kbd{M-p} to get the previous file name you typed.  Repeatedly typing @kbd{M-p} and @kbd{M-n} will let you browse through the file history."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:651
msgid "Like file names, partially typed Ex commands can be completed by typing @key{TAB}, and Viper keeps the history of Ex commands.  After typing @kbd{:}, you can browse through the previously entered Ex commands by typing @kbd{M-p} and @kbd{M-n}.  Viper tries to rationalize when it puts Ex commands on the history list.  For instance, if you typed @kbd{:w!@: foo}, only @kbd{:w!} will be placed on the history list.  This is because the last history element is the default that can be invoked simply by typing @kbd{: @key{RET}}.  If @kbd{:w!@: foo} were placed on the list, it would be all to easy to override valuable data in another file.  Reconstructing the full command, @kbd{:w!@: foo}, from the history is still not that hard, since Viper has a separate history for file names.  By typing @kbd{: M-p}, you will get @kbd{:w!} in the minibuffer.  Then, repeated @kbd{M-p} will get you through the file history, inserting one file name after another."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:656
msgid "In contrast to @kbd{:w!@: foo}, if the command were @kbd{:r foo}, the entire command will appear in the history list.  This is because having @kbd{:r} alone as a default is meaningless, since this command requires a file argument."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:665
msgid "As in Vi, Viper's destructive commands can be re-executed by typing a period (@kbd{.}).  However, in addition, Viper keeps track of the history of such commands.  This history can be perused by typing @kbd{C-c M-p} and @kbd{C-c M-n}.  Having found the appropriate command, it can be then executed by typing a period.  @xref{Improvements over Vi}, for more information."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:678
msgid "To avoid confusing the beginner (at Viper level 1 and 2), Viper makes only the standard Vi keys available in Insert state.  The implication is that Emacs major modes cannot be used in Insert state.  It is strongly recommended that as soon as you are comfortable, make the Emacs state bindings visible (by changing your user level to 3 or higher).  @xref{Customization}, to see how to do this."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:686
msgid "Once this is done, it is possible to do quite a bit of editing in Insert state.  For instance, Emacs has a @dfn{yank} command, @kbd{C-y}, which is similar to Vi's @kbd{p}.  However, unlike @kbd{p}, @kbd{C-y} can be used in Insert state of Viper.  Emacs also has a kill ring where it keeps pieces of text you deleted while editing buffers.  The command @kbd{M-y} is used to delete the text previously put back by Emacs's @kbd{C-y} or by Vi's @kbd{p} command and reinsert text that was placed on the kill-ring earlier."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:695
msgid "This works both in Vi and Insert states.  In Vi state, @kbd{M-y} is a much better alternative to the usual Vi's way of recovering the 10 previously deleted chunks of text.  In Insert state, you can use this as follows.  Suppose you deleted a piece of text and now you need to re-insert it while editing in Insert mode.  The key @kbd{C-y} will put back the most recently deleted chunk.  If this is not what you want, type @kbd{M-y} repeatedly and, hopefully, you will find the chunk you want."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:702
msgid "Finally, in Insert and Replace states, Viper provides the history of pieces of text inserted in previous insert or replace commands.  These strings of text can be recovered by repeatedly typing @kbd{C-c M-p} or @kbd{C-c M-n} while in Insert or Replace state.  (This feature is disabled in the minibuffer: the above keys are usually bound to other histories, which are more appropriate in the minibuffer.)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:708
msgid "You can call Meta functions from Insert state.  As in Vi state, the Meta key is @kbd{C-\\}.  Thus @kbd{M-x} is typed as @kbd{C-\\ x}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:718
msgid "Other Emacs commands that are useful in Insert state are @kbd{C-e} and @kbd{C-a}, which move the cursor to the end and the beginning of the current line, respectively.  You can also use @kbd{M-f} and @kbd{M-b}, which move the cursor forward (or backward) one word.  If your display has a Meta key, these functions are invoked by holding the Meta key and then typing @kbd{f} and @kbd{b}, respectively.  On displays without the Meta key, these functions are invoked by typing @kbd{C-\\ f} and @kbd{C-\\ b} (@kbd{C-\\} simulates the Meta key in Insert state, as explained above)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:723
msgid "The key @kbd{C-z} is sometimes also useful in Insert state: it allows you to execute a single command in Vi state without leaving the Insert state! For instance, @kbd{C-z d2w} will delete the next two words without leaving the Insert state."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:725
msgid "When Viper is in Insert state, you will see <I> in the mode line."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:740
msgid "This state is entered through Vi replacement commands, such as @kbd{C}, @kbd{cw}, etc., or by typing @kbd{R}.  In Replace state, Viper puts <R> in the mode line to let you know which state is in effect.  If Replace state is entered through @kbd{R}, Viper stays in that state until the user hits @key{ESC}.  If this state is entered via the other replacement commands, then Replace state is in effect until you hit @key{ESC} or until you cross the rightmost boundary of the replacement region.  In the latter case, Viper changes its state from Replace to Insert (which you will notice by the change in the mode line)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:747
msgid "Since Viper runs under Emacs, it is possible to switch between buffers while in Replace state.  You can also move the cursor using the arrow keys (even on dumb terminals!)@: and the mouse.  Because of this freedom (which is unattainable in regular Vi), it is possible to take the cursor outside the replacement region.  (This may be necessary for several reasons, including the need to enable text selection and region-setting with the mouse.)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:752
msgid "The issue then arises as to what to do when the user hits the @key{ESC} key.  In Vi, this would cause the text between cursor and the end of the replacement region to be deleted.  But what if, as is possible in Viper, the cursor is not inside the replacement region?"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:757
msgid "To solve the problem, Viper keeps track of the last cursor position while it was still inside the replacement region.  So, in the above situation, Viper would delete text between this position and the end of the replacement region."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:765
msgid "The minibuffer is where commands are entered in.  Editing can be done by commands from Insert state, namely:"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:767
#: ../../../../../doc/misc/viper.texi:3435
#: ../../../../../doc/misc/viper.texi:3589
#, no-wrap
msgid "C-h"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:769
msgid "Backspace"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:769
#: ../../../../../doc/misc/viper.texi:3591
#: ../../../../../doc/misc/viper.texi:3599
#, no-wrap
msgid "C-w"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:771
msgid "Delete Word"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:771
#: ../../../../../doc/misc/viper.texi:3593
#: ../../../../../doc/misc/viper.texi:3598
#: ../../../../../doc/misc/viper.texi:3960
#, no-wrap
msgid "C-u"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:773
msgid "Erase line"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:773
#: ../../../../../doc/misc/viper.texi:1330
#: ../../../../../doc/misc/viper.texi:1333
#: ../../../../../doc/misc/viper.texi:3587
#: ../../../../../doc/misc/viper.texi:3600
#, no-wrap
msgid "C-v"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:775
msgid "Quote the following character"
msgstr ""

#. type: key{#1}
#: ../../../../../doc/misc/viper.texi:775
#: ../../../../../doc/misc/viper.texi:1054
#, no-wrap
msgid "RET"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:777
msgid "Execute command"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:780
msgid "Emacs quit and abort keys.  These may be necessary.  @xref{Vi State}, for an explanation."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:780
#: ../../../../../doc/misc/viper.texi:1048
#: ../../../../../doc/misc/viper.texi:1432
#, no-wrap
msgid "M-p and M-n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:784
msgid "These keys are bound to functions that peruse minibuffer history.  The precise history to be perused depends on the context.  It may be the history of search strings, Ex commands, file names, etc."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:784
#: ../../../../../doc/misc/viper.texi:1438
#: ../../../../../doc/misc/viper.texi:1439
#, no-wrap
msgid "C-s"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:789
msgid "If the minibuffer is entered via the Viper search commands @kbd{/} or @kbd{?}, then this key inserts the last search string used by the Emacs incremental search command (which is bound to @kbd{C-s} everywhere except in this case)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:797
msgid "Most of the Emacs keys are functional in the minibuffer.  While in the minibuffer, Viper tries to make editing resemble Vi's behavior when the latter is waiting for the user to type an Ex command.  In particular, you can use the regular Vi commands to edit the minibuffer.  You can switch between the Vi state and Insert state at will, and even use the replace mode.  Initially, the minibuffer comes up in Insert state."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:801
msgid "Some users prefer plain Emacs bindings in the minibuffer.  To this end, set @code{viper-vi-style-in-minibuffer} to @code{nil} in your Viper customization file.  @xref{Customization}, to learn how to do this."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:807
msgid "When the minibuffer changes Viper states, you will notice that the appearance of the text there changes as well.  This is useful because the minibuffer has no mode line to tell which Vi state it is in.  The appearance of the text in the minibuffer can be changed.  @xref{Viper Specials}, for more details."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:811
#: ../../../../../doc/misc/viper.texi:3971
#, no-wrap
msgid "multiple files"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:812
#, no-wrap
msgid "managing multiple files"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:817
msgid "Viper can edit multiple files.  This means, for example that you never need to suffer through @code{No write since last change} errors.  Some Viper elements are common over all the files."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:819
#, no-wrap
msgid "Textmarkers"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:820
#: ../../../../../doc/misc/viper.texi:1020
#: ../../../../../doc/misc/viper.texi:3251
#, no-wrap
msgid "markers"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:821
#: ../../../../../doc/misc/viper.texi:1021
#: ../../../../../doc/misc/viper.texi:1292
#: ../../../../../doc/misc/viper.texi:3250
#, no-wrap
msgid "textmarkers"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:828
msgid "Textmarkers remember @emph{files and positions}.  If you set marker @samp{a} in file @file{foo}, start editing file @file{bar} and type @kbd{'a}, then @emph{YOU WILL SWITCH TO FILE @file{foo}}.  You can see the contents of a textmarker using the Viper command @kbd{[<a-z>} where <a-z> are the textmarkers, e.g., @kbd{[a} to view marker @samp{a} ."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:828
#, no-wrap
msgid "Repeated Commands"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:836
msgid "Command repetitions are common over files.  Typing @kbd{!!} will repeat the last @kbd{!} command whichever file it was issued from.  Typing @kbd{.} will repeat the last command from any file, and searches will repeat the last search.  Ex commands can be repeated by typing @kbd{: @key{RET}}.  Note: in some rare cases, that @kbd{: @key{RET}} may do something dangerous.  However, usually its effect can be undone by typing @kbd{u}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:836
#, no-wrap
msgid "Registers"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:837
#: ../../../../../doc/misc/viper.texi:1019
#: ../../../../../doc/misc/viper.texi:1077
#, no-wrap
msgid "registers"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:842
msgid "Registers are common to files.  Also, text yanked with @kbd{y} can be put back (@kbd{p}) into any file.  The Viper command @kbd{]<a-z>}, where <a-z> are the registers, can be used to look at the contents of a register, e.g., type @kbd{]a} to view register @samp{a}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:854
#: ../../../../../doc/misc/viper.texi:3617
msgid "There is one difference in text deletion that you should be aware of.  This difference comes from Emacs and was adopted in Viper because we find it very useful.  In Vi, if you delete a line, say, and then another line, these two deletions are separated and are put back separately if you use the @samp{p} command.  In Emacs (and Viper), successive series of deletions that are @emph{not interrupted} by other commands are lumped together, so the deleted text gets accumulated and can be put back as one chunk.  If you want to break a sequence of deletions so that the newly deleted text could be put back separately from the previously deleted text, you should perform a non-deleting action, e.g., move the cursor one character in any direction."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:854
#, no-wrap
msgid "Absolute Filenames"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:855
#, no-wrap
msgid "absolute file names"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:866
msgid "The current directory name for a file is automatically prepended to the file name in any @kbd{:e}, @kbd{:r}, @kbd{:w}, etc., command (in Emacs, each buffer has a current directory).  This directory is inserted in the minibuffer once you type space after @kbd{:e, r}, etc.  Viper also supports completion of file names and Ex commands (@key{TAB}), and it keeps track of command and file history (@kbd{M-p}, @kbd{M-n}).  Absolute filenames are required less often in Viper."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:871
msgid "You should be aware that Emacs interprets @kbd{/foo/bar//bla} as @kbd{/bla} and @kbd{/foo/~/bar} as @kbd{~/bar}.  This is designed to minimize the need for erasing file names that Emacs suggests in its prompts, if a suggested file name is not what you wanted."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:876
msgid "The command @kbd{:cd} will change the default directory for the current Emacs buffer.  The Ex command @kbd{:e} will interpret the filename argument in @samp{csh}, by default.  @xref{Customization}, if you want to change this."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:883
msgid "Currently undisplayed files can be listed using the @kbd{:ar} command.  The command @kbd{:n} can be given counts from the @kbd{:ar} list to switch to other files.  For example, use @samp{:n3} to move to the third file in that list."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:888
msgid "Unimplemented features include:"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/viper.texi:894
msgid "@kbd{:ab} and @kbd{:una} are not implemented, since @kbd{:ab} is considered obsolete, since Emacs has much more powerful facilities for defining abbreviations."
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/viper.texi:897
msgid "@kbd{:set option?} is not implemented.  The current @kbd{:set} can also be used to set Emacs variables."
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/viper.texi:903
msgid "@kbd{:se list} requires modification of the display code for Emacs, so it is not implemented.  A useful alternative is @code{cat -t -e file}.  Unfortunately, it cannot be used directly inside Emacs, since Emacs will obdurately change @samp{^I} back to normal tabs."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:911
msgid "Some common problems with Vi and Ex have been solved in Viper.  This includes better implementation of existing commands, new commands, and the facilities provided by Emacs."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:924
#: ../../../../../doc/misc/viper.texi:926
#: ../../../../../doc/misc/viper.texi:927
#, no-wrap
msgid "Basics"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:924
msgid "Basic Viper differences, Multi-file effects."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:924
#: ../../../../../doc/misc/viper.texi:997
#: ../../../../../doc/misc/viper.texi:998
#, no-wrap
msgid "Undo and Backups"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:924
msgid "Multiple undo, auto-save, backups and changes"
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:924
#: ../../../../../doc/misc/viper.texi:1033
#: ../../../../../doc/misc/viper.texi:1034
#, no-wrap
msgid "History"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:924
msgid "History for Ex and Vi commands."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:924
#: ../../../../../doc/misc/viper.texi:1072
#: ../../../../../doc/misc/viper.texi:1073
#, no-wrap
msgid "Macros and Registers"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:924
msgid "Keyboard Macros (extended \".\")@: @@reg execution."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:924
#: ../../../../../doc/misc/viper.texi:1119
#: ../../../../../doc/misc/viper.texi:1120
#, no-wrap
msgid "Completion"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:924
msgid "Filename and Command Completion for Ex."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:924
#: ../../../../../doc/misc/viper.texi:1130
#: ../../../../../doc/misc/viper.texi:1131
#, no-wrap
msgid "Improved Search"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:924
msgid "Incremental Search and Buffer Content Search."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:924
#: ../../../../../doc/misc/viper.texi:1199
#: ../../../../../doc/misc/viper.texi:1200
#, no-wrap
msgid "Abbreviation Facilities"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:924
msgid "Normal Abbrevs, Templates, and Dynamic Abbrevs."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:924
#: ../../../../../doc/misc/viper.texi:1223
#: ../../../../../doc/misc/viper.texi:1224
#, no-wrap
msgid "Movement and Markers"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:924
msgid "Screen Editor movements, viewing textmarkers."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:924
#: ../../../../../doc/misc/viper.texi:1299
#: ../../../../../doc/misc/viper.texi:1300
#, no-wrap
msgid "New Commands"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:924
msgid "Commands that do not exist in Vi."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:924
#: ../../../../../doc/misc/viper.texi:1489
#: ../../../../../doc/misc/viper.texi:1490
#, no-wrap
msgid "Useful Packages"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:924
msgid "A Sampling of some Emacs packages, and things you should know about."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:934
msgid "The Vi command set is based on the idea of combining motion commands with other commands.  The motion command is used as a text region specifier for other commands.  We classify motion commands into @dfn{point commands} and @dfn{line commands}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:935
#: ../../../../../doc/misc/viper.texi:3028
#, no-wrap
msgid "point commands"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:938
#: ../../../../../doc/misc/viper.texi:3031
msgid "The point commands are:"
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/viper.texi:943
#: ../../../../../doc/misc/viper.texi:3036
msgid "@kbd{h}, @kbd{l}, @kbd{0}, @kbd{$}, @kbd{w}, @kbd{W}, @kbd{b}, @kbd{B}, @kbd{e}, @kbd{E}, @kbd{(}, @kbd{)}, @kbd{/}, @kbd{?}, @kbd{`}, @kbd{f}, @kbd{F}, @kbd{t}, @kbd{T}, @kbd{%}, @kbd{;}, @kbd{,}, @kbd{^}"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:945
#: ../../../../../doc/misc/viper.texi:3038
#, no-wrap
msgid "line commands"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:948
#: ../../../../../doc/misc/viper.texi:3041
msgid "The line commands are:"
msgstr ""

#. type: quotation
#: ../../../../../doc/misc/viper.texi:952
#: ../../../../../doc/misc/viper.texi:3045
msgid "@kbd{j}, @kbd{k}, @kbd{+}, @kbd{-}, @kbd{H}, @kbd{M}, @kbd{L}, @kbd{@{}, @kbd{@}}, @kbd{G}, @kbd{'}, @kbd{[[}, @kbd{]]}, @kbd{[]}"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:955
#, no-wrap
msgid "region specification"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:956
#, no-wrap
msgid "expanding (region)"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:957
#, no-wrap
msgid "describing regions"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:958
#: ../../../../../doc/misc/viper.texi:3248
#, no-wrap
msgid "movement commands"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:975
msgid "If a point command is given as an argument to a modifying command, the region determined by the point command will be affected by the modifying command.  On the other hand, if a line command is given as an argument to a modifying command, the region determined by the line command will be enlarged so that it will become the smallest region properly containing the region and consisting of whole lines (we call this process @dfn{expanding the region}), and then the enlarged region will be affected by the modifying command.  Text Deletion Commands (@pxref{Deleting Text}), Change commands (@pxref{Changing Text}), even Shell Commands (@pxref{Shell Commands})  use these commands to describe a region of text to operate on.  Thus, type @kbd{dw} to delete a word, @kbd{>@}} to shift a paragraph, or @kbd{!'afmt} to format a region from @samp{point} to textmarker @samp{a}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:976
#: ../../../../../doc/misc/viper.texi:3052
#, no-wrap
msgid "r and R region specifiers"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:987
msgid "Viper adds the region specifiers @samp{r} and @samp{R}.  Emacs has a special marker called @dfn{mark}.  The text-area between the current cursor position @dfn{point} and the @dfn{mark} is called the @dfn{region}.  @samp{r} specifies the raw region and @samp{R} is the expanded region (i.e., the minimal contiguous chunk of full lines that contains the raw region).  @kbd{dr} will now delete the region, @kbd{>r} will shift it, etc.  @kbd{r,R} are not motion commands, however.  The special mark is set by @kbd{m.} and other commands.  @xref{Marking}, for more info."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:989
msgid "Viper also adds counts to most commands for which it would make sense."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:996
msgid "In the Overview chapter, some Multiple File issues were discussed (@pxref{Multiple Files in Viper}).  In addition to the files, Emacs has buffers.  These can be seen in the @kbd{:args} list and switched using @kbd{:next} if you type @kbd{:set ex-cycle-through-non-files t}, or specify @code{(setq ex-cycle-through-non-files t)} in your Viper customization file.  @xref{Customization}, for details."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1008
msgid "Viper provides multiple undo.  The number of undo's and the size is limited by the machine.  The Viper command @kbd{u} does an undo.  Undo can be repeated by typing @kbd{.} (a period).  Another @kbd{u} will undo the undo, and further @kbd{.} will repeat it.  Typing @kbd{u} does the first undo, and changes the direction."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1009
#: ../../../../../doc/misc/viper.texi:3887
#, no-wrap
msgid "backup files"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1010
#, no-wrap
msgid "auto save"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1016
msgid "Since the undo size is limited, Viper can create backup files and auto-save files.  It will normally do this automatically.  It is possible to have numbered backups, etc.  For details, @pxref{Backup,,Backup and Auto-Save,emacs,The GNU Emacs Manual}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1018
#: ../../../../../doc/misc/viper.texi:1097
#, no-wrap
msgid "viewing registers and markers"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1032
msgid "The results of the 9 previous changes are available in the 9 numeric registers, as in Vi.  The extra goody is the ability to @emph{view} these registers, in addition to being able to access them through @kbd{p} and @kbd{M-y} (@xref{Insert State}, for details.)  The Viper command @kbd{] register} will display the contents of any register, numeric or alphabetical.  The related command @kbd{[ textmarker} will show the text around the textmarker.  @samp{register} and @samp{textmarker} can be any letters from a through z."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1036
#, no-wrap
msgid "history"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1046
msgid "History is provided for Ex commands, Vi searches, file names, pieces of text inserted in earlier commands that use Insert or Replace state, and for destructive commands in Vi state.  These are useful for fixing those small typos that screw up searches and @kbd{:s}, and for eliminating routine associated with repeated typing of file names or pieces of text that need to be inserted frequently.  At the @kbd{:} or @kbd{/} prompts in the minibuffer, you can do the following:"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1052
msgid "To move to previous and next history items.  This causes the history items to appear on the command line, where you can edit them, or simply type Return to execute."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1052
#, no-wrap
msgid "M-r and M-s"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1054
msgid "To search backward and forward through the history."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1056
msgid "Type @key{RET} to accept a default (which is displayed in the prompt)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1062
msgid "The history of insertions can be perused by typing @kbd{C-c M-p} and @kbd{C-c M-n} while in Insert or Replace state.  The history of destructive Vi commands can be perused via the same keys when Viper is in Vi state.  @xref{Viper Specials}, for details."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1067
msgid "All Ex commands have a file history.  For instance, typing @kbd{:e}, space and then @kbd{M-p} will bring up the name of the previously typed file name.  Repeatedly typing @kbd{M-p}, @kbd{M-n}, etc., will let you browse through the file history."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1071
msgid "Similarly, commands that have to do with switching buffers have a buffer history, and commands that expect strings or regular expressions keep a history on those items."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1075
#: ../../../../../doc/misc/viper.texi:1397
#, no-wrap
msgid "keyboard macros"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1076
#, no-wrap
msgid "macros"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1078
#: ../../../../../doc/misc/viper.texi:1398
#, no-wrap
msgid "register execution"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1089
msgid "Viper facilitates the use of Emacs-style keyboard macros.  @kbd{@@#} will start a macro definition.  As you type, the commands will be executed, and remembered (This is called ``learn mode'' in some editors.)  @kbd{@@register} will complete the macro, putting it into @samp{register}, where @samp{register} is any character from @samp{a} through @samp{z}.  Then you can execute this macro using @kbd{@@register}.  It is, of course, possible to yank some text into a register and execute it using @kbd{@@register}.  Typing @kbd{@@@@}, @kbd{@@@key{RET}}, or @kbd{@@C-j} will execute the last macro that was executed using @kbd{@@register}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1095
msgid "Viper will automatically lowercase the register, so that pressing the @kbd{SHIFT} key for @kbd{@@} will not create problems.  This is for @kbd{@@} macros and @kbd{\"p} @emph{only}.  In the case of @kbd{y}, @kbd{\"Ayy} will append to @emph{register a}.  For @kbd{[,],',`}, it is an error to use a Uppercase register name."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1102
msgid "The contents of a register can be seen by @kbd{]register}.  (@kbd{[textmarker} will show the contents of a textmarker)."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1103
#, no-wrap
msgid "last keyboard macro"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1111
msgid "The last keyboard macro can also be executed using @kbd{*}, and it can be yanked into a register using @kbd{@@!register}.  This is useful for Emacs style keyboard macros defined using @kbd{C-x(} and @kbd{C-x)}.  Emacs keyboard macros have more capabilities.  @xref{Keyboard Macros,,Keyboard Macros,emacs, The GNU Emacs Manual}, for details."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1115
msgid "Keyboard Macros allow an interesting form of Query-Replace: @kbd{/pattern} or @kbd{n} to go to the next pattern (the query), followed by a Keyboard Macro execution @kbd{@@@@} (the replace)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1117
msgid "Viper also provides Vi-style macros.  @xref{Vi Macros}, for details."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1122
#, no-wrap
msgid "completion"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1129
msgid "Completion is done when you type @key{TAB}.  The Emacs completer does not grok wildcards in file names.  Once you type a wildcard, the completer will no longer work for that file name.  Remember that Emacs interprets a file name of the form @kbd{/foo//bar} as @kbd{/bar} and @kbd{/foo/~/bar} as @kbd{~/bar}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1133
#, no-wrap
msgid "buffer search"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1134
#, no-wrap
msgid "word search"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1139
msgid "Viper provides buffer search, the ability to search the buffer for a region under the cursor.  You have to turn this on in your Viper customization file either by calling"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:1142
#, no-wrap
msgid "(viper-buffer-search-enable)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1146
msgid "or by setting @code{viper-buffer-search-char} to, say, @kbd{f3}:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:1148
#, no-wrap
msgid "(setq viper-buffer-search-char ?g)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1158
msgid "If the user calls @code{viper-buffer-search-enable} explicitly (the first method), then @code{viper-buffer-search-char} will be set to @kbd{g}.  Regardless of how this feature is enabled, the key @code{viper-buffer-search-char} will take movement commands, like @kbd{w,/,e}, to find a region and then search for the contents of that region.  This command is very useful for searching for variable names, etc., in a program.  The search can be repeated by @kbd{n} or reversed by @kbd{N}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1159
#, no-wrap
msgid "incremental search"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1168
msgid "Emacs provides incremental search.  As you type the string in, the cursor will move to the next match.  You can snarf words from the buffer as you go along.  Incremental Search is normally bound to @kbd{C-s} and @kbd{C-r}.  @xref{Customization}, to find out how to change the bindings of @kbd{C-r or C-s}.  For details, @pxref{Incremental Search,,Incremental Search,emacs,The GNU Emacs Manual}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1169
#: ../../../../../doc/misc/viper.texi:1322
#, no-wrap
msgid "query replace"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1173
msgid "Viper also provides a query replace function that prompts through the minibuffer.  It is invoked by the @kbd{Q} key in Vi state."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1174
#, no-wrap
msgid "mouse search"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1178
msgid "On a window display, Viper supports mouse search, i.e., you can search for a word by clicking on it.  @xref{Viper Specials}, for details."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1183
msgid "Finally, on a window display, Viper highlights search patterns as it finds them.  This is done through what is known as @emph{faces} in Emacs.  The variable that controls how search patterns are highlighted is @code{viper-search-face}.  If you don't want any highlighting at all, put"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:1185
#, no-wrap
msgid "(copy-face 'default 'viper-search-face)\n"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1186
#: ../../../../../doc/misc/viper.texi:1925
#, no-wrap
msgid "viper-search-face"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1196
msgid "in your Viper customization file.  If you want to change how patterns are highlighted, you will have to change @code{viper-search-face} to your liking.  The easiest way to do this is to use Emacs customization widget, which is accessible from the menubar.  Viper customization group is located under the @emph{Emulations} customization group, which in turn is under the @emph{Editing} group (or simply by typing @kbd{:customize}).  All Viper faces are grouped together under Viper's @emph{Highlighting} group."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1198
msgid "Try it: it is really simple!"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1202
#, no-wrap
msgid "abbrevs"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1209
msgid "It is possible in Emacs to define abbrevs based on the contents of the buffer.  Sophisticated templates can be defined using the Emacs abbreviation facilities.  @xref{Abbrevs,,Abbreviations,emacs,The GNU Emacs Manual}, for details."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1210
#, no-wrap
msgid "dynamic abbrevs"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1222
msgid "Emacs also provides Dynamic Abbreviations.  Given a partial word, Emacs will search the buffer to find an extension for this word.  For instance, one can type @samp{Abbreviations} by typing @samp{A}, followed by a keystroke that completed the @samp{A} to @samp{Abbreviations}.  Repeated typing will search further back in the buffer, so that one could get @samp{Abbrevs} by repeating the keystroke, which appears earlier in the text.  Emacs binds this to @kbd{@key{ESC} /}, so you will have to find a key and bind the function @code{dabbrev-expand} to that key.  Facilities like this make Vi's @kbd{:ab} command obsolete."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1226
#, no-wrap
msgid "Ex style motion"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1227
#, no-wrap
msgid "line editor motion"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1233
msgid "Viper can be set free from the line-limited movements in Vi, such as @kbd{l} refusing to move beyond the line, @key{ESC} moving one character back, etc.  These derive from Ex, which is a line editor.  If your Viper customization file contains"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:1236
#, no-wrap
msgid "@code{(setq viper-ex-style-motion nil)}\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1243
msgid "the motion will be a true screen editor motion.  One thing you must then watch out for is that it is possible to be on the end-of-line character.  The keys @kbd{x} and @kbd{%} will still work correctly, i.e., as if they were on the last character."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1244
#: ../../../../../doc/misc/viper.texi:3202
#, no-wrap
msgid "viper-syntax-preference"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1245
#: ../../../../../doc/misc/viper.texi:3204
#, no-wrap
msgid "syntax table"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1259
msgid "The word-movement commands @kbd{w}, @kbd{e}, etc., and the associated deletion/yanking commands, @kbd{dw}, @kbd{yw}, etc., can be made to understand Emacs syntax tables.  If the variable @code{viper-syntax-preference} is set to @code{strict-vi} then the meaning of @emph{word} is the same as in Vi.  However, if the value is @code{reformed-vi} (the default) then the alphanumeric symbols will be those specified by the current Emacs syntax table (which may be different for different major modes) plus the underscore symbol @kbd{_}, minus some non-word symbols, like '.;,|, etc.  Both @code{strict-vi} and @code{reformed-vi} work close to Vi in traditional cases, but @code{reformed-vi} does a better job when editing text in non-Latin alphabets."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1267
msgid "The user can also specify the value @code{emacs}, which would make Viper use exactly the Emacs notion of word.  In particular, the underscore may not be part of a word.  Finally, if @code{viper-syntax-preference} is set to @code{extended}, Viper words would consist of characters that are classified as alphanumeric @emph{or} as parts of symbols.  This is convenient for writing programs and in many other situations."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1273
msgid "@code{viper-syntax-preference} is a local variable, so it can have different values for different major modes.  For instance, in programming modes it can have the value @code{extended}.  In text modes where words contain special characters, such as European (non-English) letters, Cyrillic letters, etc., the value can be @code{reformed-vi} or @code{emacs}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1277
msgid "Changes to @code{viper-syntax-preference} should be done in the hooks to various major modes by executing @code{viper-set-syntax-preference} as in the following example:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:1280
#, no-wrap
msgid "(viper-set-syntax-preference nil \"emacs\")\n"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:1282
#: ../../../../../doc/misc/viper.texi:3203
#, no-wrap
msgid "viper-set-syntax-preference"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1291
msgid "The above discussion of the meaning of Viper's words concerns only Viper's movement commands.  In regular expressions, words remain the same as in Emacs.  That is, the expressions @code{\\w}, @code{\\>}, @code{\\<}, etc., use Emacs's idea of what is a word, and they don't look into the value of variable @code{viper-syntax-preference}.  This is because Viper doesn't change syntax tables in fear of upsetting the various major modes that set these tables."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1298
msgid "Textmarkers in Viper remember the file and the position, so that you can switch files by simply doing @kbd{'a}.  If you set up a regimen for using Textmarkers, this is very useful.  Contents of textmarkers can be viewed by @kbd{[marker}.  (Contents of registers can be viewed by @kbd{]register})."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1303
msgid "These commands have no Vi analogs."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1305
#, no-wrap
msgid "C-x, C-c"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1316
msgid "These two keys invoke many important Emacs functions.  For example, if you hit @kbd{C-x} followed by @kbd{2}, then the current window will be split into 2.  Except for novice users, @kbd{C-c} is also set to execute an Emacs command from the current major mode.  @key{ESC} will do the same, if you configure @key{ESC} as Meta by setting @code{viper-no-multiple-ESC} to @code{nil} in your Viper customization file.  @xref{Customization}.  @kbd{C-\\} in Insert, Replace, or Vi states will make Emacs think @kbd{Meta} has been hit."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1316
#: ../../../../../doc/misc/viper.texi:1317
#, no-wrap
msgid "\\"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1320
msgid "Escape to Emacs to execute a single Emacs command.  For instance, @kbd{\\ @key{ESC}} will act like a Meta key."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1320
#: ../../../../../doc/misc/viper.texi:1321
#: ../../../../../doc/misc/viper.texi:3795
#: ../../../../../doc/misc/viper.texi:3822
#, no-wrap
msgid "Q"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1328
msgid "@kbd{Q} is for query replace.  By default, each string to be replaced is treated as a regular expression.  You can use @code{(setq viper-re-query-replace nil)} in your @file{.emacs} file to turn this off.  (For normal searches, @kbd{:se nomagic} will work.  Note that @kbd{:se nomagic} turns Regexps off completely, unlike Vi)."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1328
#: ../../../../../doc/misc/viper.texi:1331
#: ../../../../../doc/misc/viper.texi:4081
#, no-wrap
msgid "v"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1329
#: ../../../../../doc/misc/viper.texi:1332
#: ../../../../../doc/misc/viper.texi:4082
#, no-wrap
msgid "V"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1339
msgid "These keys are used to visit files.  @kbd{v} will switch to a buffer visiting file whose name can be entered in the minibuffer.  @kbd{V} is similar, but will use a window different from the current window.  @kbd{C-v} is like @kbd{V}, except that a new frame (X window) will be used instead of a new Emacs window."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1339
#: ../../../../../doc/misc/viper.texi:1340
#, no-wrap
msgid "#"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1347
msgid "If followed by a certain character @var{ch}, it becomes an operator whose argument is the region determined by the motion command that follows (indicated as <move>).  Currently, @var{ch} can be one of @kbd{c}, @kbd{C}, @kbd{g}, @kbd{q}, and @kbd{s}.  For instance, @kbd{#qr} will prompt you for a string and then prepend this string to each line in the buffer."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1347
#, no-wrap
msgid "# c"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1348
#: ../../../../../doc/misc/viper.texi:3712
#: ../../../../../doc/misc/viper.texi:3734
#, no-wrap
msgid "#c<move>"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1349
#: ../../../../../doc/misc/viper.texi:3649
#, no-wrap
msgid "changing case"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1353
msgid "Change upper-case characters in the region to lower-case (@code{downcase-region}).  Emacs command @kbd{M-l} does the same for words."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1353
#, no-wrap
msgid "# C"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1354
#: ../../../../../doc/misc/viper.texi:3714
#: ../../../../../doc/misc/viper.texi:3733
#, no-wrap
msgid "#C<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1359
msgid "Change lower-case characters in the region to upper-case.  For instance, @kbd{# C 3 w} will capitalize 3 words from the current point (@code{upcase-region}).  Emacs command @kbd{M-u} does the same for words."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1359
#, no-wrap
msgid "# g"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1360
#: ../../../../../doc/misc/viper.texi:3792
#: ../../../../../doc/misc/viper.texi:3823
#: ../../../../../doc/misc/viper.texi:4166
#: ../../../../../doc/misc/viper.texi:4176
#, no-wrap
msgid "#g<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1363
msgid "Execute last keyboard macro for each line in the region (@code{viper-global-execute})."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1363
#, no-wrap
msgid "# q"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1364
#: ../../../../../doc/misc/viper.texi:3716
#: ../../../../../doc/misc/viper.texi:3732
#, no-wrap
msgid "#q<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1368
msgid "Insert specified string at the beginning of each line in the region (@code{viper-quote-region}).  The default string is composed of the comment character(s) appropriate for the current major mode."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1368
#, no-wrap
msgid "# s"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1369
#, no-wrap
msgid "#s<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1373
msgid "Check spelling of words in the region (@code{spell-region}).  The function used for spelling is determined from the variable @code{viper-spell-function}."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1373
#: ../../../../../doc/misc/viper.texi:1937
#, no-wrap
msgid "viper-spell-function"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1374
#: ../../../../../doc/misc/viper.texi:1375
#: ../../../../../doc/misc/viper.texi:4161
#: ../../../../../doc/misc/viper.texi:4177
#, no-wrap
msgid "*"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1377
msgid "Call last keyboard macro."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1377
#: ../../../../../doc/misc/viper.texi:3455
#, no-wrap
msgid "m ."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1379
msgid "Set mark at point and push old mark off the ring"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1379
#: ../../../../../doc/misc/viper.texi:3484
#, no-wrap
msgid "m<"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1380
#: ../../../../../doc/misc/viper.texi:3483
#, no-wrap
msgid "m>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1382
msgid "Set mark at beginning and end of buffer, respectively."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1382
#: ../../../../../doc/misc/viper.texi:3485
#, no-wrap
msgid "m,"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1385
msgid "Jump to mark and pop mark off the ring.  @xref{Mark,,Mark,emacs,The GNU Emacs Manual}, for more info."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1385
#, no-wrap
msgid "] register"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1386
#: ../../../../../doc/misc/viper.texi:3336
#: ../../../../../doc/misc/viper.texi:3396
#: ../../../../../doc/misc/viper.texi:3536
#: ../../../../../doc/misc/viper.texi:3562
#: ../../../../../doc/misc/viper.texi:3858
#: ../../../../../doc/misc/viper.texi:3872
#: ../../../../../doc/misc/viper.texi:4171
#: ../../../../../doc/misc/viper.texi:4174
#, no-wrap
msgid "]<a-z>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1388
msgid "View contents of register"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1388
#, no-wrap
msgid "[ textmarker"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1389
#: ../../../../../doc/misc/viper.texi:3334
#: ../../../../../doc/misc/viper.texi:3397
#: ../../../../../doc/misc/viper.texi:3534
#: ../../../../../doc/misc/viper.texi:3563
#: ../../../../../doc/misc/viper.texi:3856
#: ../../../../../doc/misc/viper.texi:3873
#: ../../../../../doc/misc/viper.texi:4169
#: ../../../../../doc/misc/viper.texi:4175
#, no-wrap
msgid "[<a-z>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1391
msgid "View filename and position of textmarker"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1391
#: ../../../../../doc/misc/viper.texi:1394
#: ../../../../../doc/misc/viper.texi:4152
#: ../../../../../doc/misc/viper.texi:4179
#, no-wrap
msgid "@@#"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1392
#, no-wrap
msgid "@@register"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1393
#: ../../../../../doc/misc/viper.texi:1396
#, no-wrap
msgid "@@!"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1395
#: ../../../../../doc/misc/viper.texi:4146
#: ../../../../../doc/misc/viper.texi:4181
#, no-wrap
msgid "@@<a-z>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1402
msgid "Begin/end keyboard macro.  @@register has a different meaning when used after a @kbd{@@#}.  @xref{Macros and Registers}, for details"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1402
#: ../../../../../doc/misc/viper.texi:1403
#: ../../../../../doc/misc/viper.texi:3401
#, no-wrap
msgid "[]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1405
msgid "Go to end of heading."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1405
#, no-wrap
msgid "g <@emph{movement command}>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1409
msgid "Search buffer for text delimited by movement command.  The canonical example is @kbd{gw} to search for the word under the cursor.  @xref{Improved Search}, for details."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1414
msgid "Quit and Abort Recursive edit.  These may be necessary on occasion.  @xref{Vi State}, for a reason."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1414
#: ../../../../../doc/misc/viper.texi:1415
#, no-wrap
msgid "C-c C-g"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1419
msgid "Hitting @kbd{C-c} followed by @kbd{C-g} will display the information on the current buffer.  This is the same as hitting @kbd{C-g} in Vi, but, as explained above, @kbd{C-g} is needed for other purposes in Emacs."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1428
#: ../../../../../doc/misc/viper.texi:3364
msgid "Without a prefix argument, this command toggles case-sensitive/case-insensitive search modes and plain vanilla/regular expression search.  With the prefix argument 1, i.e., @kbd{1 C-c /}, this toggles case-sensitivity; with the prefix argument 2, toggles plain vanilla search and search using regular expressions.  @xref{Viper Specials}, for alternative ways to invoke this function."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1433
#, no-wrap
msgid "M-p"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1434
#, no-wrap
msgid "M-n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1437
msgid "In the minibuffer, these commands navigate through the minibuffer histories, such as the history of search strings, Ex commands, etc."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1444
msgid "If the minibuffer is entered via a Viper search commands @kbd{/} or @kbd{?}, then typing this key inserts the last search string used by the Emacs incremental search command (that is bound to @kbd{C-s} everywhere except in this case)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1445
#: ../../../../../doc/misc/viper.texi:3545
#: ../../../../../doc/misc/viper.texi:3718
#, no-wrap
msgid "C-c M-p and C-c M-n"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1446
#: ../../../../../doc/misc/viper.texi:3559
#: ../../../../../doc/misc/viper.texi:3730
#, no-wrap
msgid "C-c M-p"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:1447
#: ../../../../../doc/misc/viper.texi:3560
#: ../../../../../doc/misc/viper.texi:3731
#, no-wrap
msgid "C-c M-n"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1448
#, no-wrap
msgid "Insertion history"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1449
#: ../../../../../doc/misc/viper.texi:2442
#, no-wrap
msgid "Insertion ring"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1450
#, no-wrap
msgid "Command history"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1451
#, no-wrap
msgid "Command ring"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1457
msgid "In Insert or Replace state, these commands let the user peruse the history of insertion strings used in previous insert or replace commands.  Try to hit @kbd{C-c M-p} or @kbd{C-c M-n} repeatedly and see what happens.  @xref{Viper Specials}, for more."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1464
msgid "In Vi state, these commands let the user peruse the history of Vi-style destructive commands, such as @kbd{dw}, @kbd{J}, @kbd{a}, etc.  By repeatedly typing @kbd{C-c M-p} or @kbd{C-c M-n} you will cycle Viper through the recent history of Vi commands, displaying the commands one by one.  Once an appropriate command is found, it can be executed by typing a period."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1468
msgid "Since typing @kbd{C-c M-p} is tedious, it is more convenient to bind an appropriate function to a function key on the keyboard and use that key.  @xref{Viper Specials}, for details."
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:1470
#: ../../../../../doc/misc/viper.texi:4083
#, no-wrap
msgid "Ex args"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:1471
#, no-wrap
msgid "Ex n"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:1472
#: ../../../../../doc/misc/viper.texi:4118
#, no-wrap
msgid "Ex pwd"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:1473
#: ../../../../../doc/misc/viper.texi:4098
#, no-wrap
msgid "Ex pre"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1481
msgid "The commands @kbd{:args}, @kbd{:next}, @kbd{:pre} behave differently.  @kbd{:pwd} exists to get current directory.  The commands @kbd{:b} and @kbd{:B} switch buffers around.  @xref{File and Buffer Handling}, for details.  There are also the new commands @kbd{:RelatedFile} and @kbd{PreviousRelatedFile} (which abbreviate to @kbd{R} and @kbd{P}, respectively.  @xref{Viper Specials}, for details."
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:1481
#: ../../../../../doc/misc/viper.texi:2558
#, no-wrap
msgid "Ex RelatedFile"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:1482
#: ../../../../../doc/misc/viper.texi:2559
#, no-wrap
msgid "Ex PreviousRelatedFile"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1488
msgid "Apart from the new commands, many old commands have been enhanced.  Most notably, Vi style macros are much more powerful in Viper than in Vi.  @xref{Vi Macros}, for details."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1496
msgid "Some Emacs packages are mentioned here as an aid to the new Viper user, to indicate what Viper is capable of.  A vast number comes with the standard Emacs distribution, and many more exist on the net and on the archives."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1500
msgid "This manual also mentions some Emacs features a new user should know about.  The details of these are found in the GNU Emacs Manual."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1502
msgid "The features first.  For details, look up the Emacs Manual."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1504
#, no-wrap
msgid "Make"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1505
#, no-wrap
msgid "make"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1506
#, no-wrap
msgid "compiling"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1510
msgid "Makes and Compiles can be done from the editor.  Error messages will be parsed and you can move to the error lines."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1510
#, no-wrap
msgid "Shell"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1511
#: ../../../../../doc/misc/viper.texi:4299
#, no-wrap
msgid "shell"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1512
#, no-wrap
msgid "interactive shell"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1515
msgid "You can talk to Shells from inside the editor.  Your entire shell session can be treated as a file."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1515
#, no-wrap
msgid "Mail"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1516
#, no-wrap
msgid "email"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1517
#, no-wrap
msgid "mail"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1520
msgid "Mail can be read from and sent within the editor.  Several sophisticated packages exist."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1520
#, no-wrap
msgid "Language Sensitive Editing"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1523
msgid "Editing modes are written for most computer languages in existence.  By controlling indentation, they catch punctuation errors."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1527
msgid "The packages, below, represents a drop in the sea of special-purpose packages that come with standard distribution of Emacs."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1529
#, no-wrap
msgid "Transparent FTP"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1530
#, no-wrap
msgid "transparent ftp"
msgstr ""

#. type: pindex
#: ../../../../../doc/misc/viper.texi:1531
#, no-wrap
msgid "ange-ftp.el"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1534
msgid "@code{ange-ftp.el} can ftp from the editor to files on other machines transparent to the user."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1534
#, no-wrap
msgid "RCS Interfaces"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1535
#, no-wrap
msgid "version maintenance"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1536
#, no-wrap
msgid "RCS"
msgstr ""

#. type: pindex
#: ../../../../../doc/misc/viper.texi:1537
#, no-wrap
msgid "vc.el"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1539
msgid "@code{vc.el} for doing RCS commands from inside the editor"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1539
#, no-wrap
msgid "Directory Editor"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1540
#, no-wrap
msgid "dired"
msgstr ""

#. type: pindex
#: ../../../../../doc/misc/viper.texi:1541
#, no-wrap
msgid "dired.el"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1544
msgid "@code{dired.el} for editing contents of directories and for navigating in the file system."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1544
#, no-wrap
msgid "Syntactic Highlighting"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1545
#, no-wrap
msgid "font-lock"
msgstr ""

#. type: pindex
#: ../../../../../doc/misc/viper.texi:1546
#, no-wrap
msgid "font-lock.el"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1549
msgid "@code{font-lock.el} for automatic highlighting various parts of a buffer using different fonts and colors."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1549
#, no-wrap
msgid "Saving Emacs Configuration"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1550
#, no-wrap
msgid "desktop"
msgstr ""

#. type: pindex
#: ../../../../../doc/misc/viper.texi:1551
#, no-wrap
msgid "desktop.el"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1553
msgid "@code{desktop.el} for saving/restoring configuration on Emacs exit/startup."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1553
#, no-wrap
msgid "Spell Checker"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1554
#, no-wrap
msgid "ispell"
msgstr ""

#. type: pindex
#: ../../../../../doc/misc/viper.texi:1555
#, no-wrap
msgid "ispell.el"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1557
msgid "@code{ispell.el} for spell checking the buffer, words, regions, etc."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1557
#, no-wrap
msgid "File and Buffer Comparison"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1558
#, no-wrap
msgid "ediff"
msgstr ""

#. type: pindex
#: ../../../../../doc/misc/viper.texi:1559
#, no-wrap
msgid "ediff.el"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1562
msgid "@code{ediff.el} for finding differences between files and for applying patches."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1568
msgid "Emacs Lisp archives exist on @samp{archive.cis.ohio-state.edu} and @samp{wuarchive.wustl.edu}"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1573
#, no-wrap
msgid "customization"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1576
msgid "Customization can be done in 2 ways."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1579
#, no-wrap
msgid "initialization"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1580
#, no-wrap
msgid ".viper"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/viper.texi:1584
msgid "Elisp code in a @file{~/.emacs.d/viper} (or @file{~/.viper}) file.  Viper loads this file just before it does the binding for mode hooks.  This is recommended for experts only."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1585
#, no-wrap
msgid ".emacs"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/viper.texi:1591
msgid "Elisp code in your @file{.emacs} file before and after the @code{(require 'viper)} line.  This method is @emph{not} recommended, unless you know what you are doing.  Only two variables, @code{viper-mode} and @code{viper-custom-file-name}, are supposed to be customized in @file{.emacs}, prior to loading Viper (i.e., prior to @code{(require 'viper)} command."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1592
#, no-wrap
msgid "Ex customize"
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/viper.texi:1601
msgid "By executing the @kbd{:customize} Ex command. This takes you to the Emacs customization widget, which lets you change the values of Viper customizable variables easily. This method is good for novice and experts alike. The customization code in the form of Lisp commands will be placed in @file{~/.emacs} or some other customization file depending on the version of Emacs that you use.  Still, it is recommended to separate Viper-related customization produced by the Emacs customization widget and keep it in your Viper customization file."
msgstr ""

#. type: itemize
#: ../../../../../doc/misc/viper.texi:1605
msgid "Some advanced customization cannot be accomplished this way, however, and has to be done in Emacs Lisp in your Viper customization file.  For the common cases, examples are provided that you can use directly."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:1614
#: ../../../../../doc/misc/viper.texi:1616
#: ../../../../../doc/misc/viper.texi:1617
#, no-wrap
msgid "Rudimentary Changes"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:1614
msgid "Simple constant definitions."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:1614
#: ../../../../../doc/misc/viper.texi:1957
#: ../../../../../doc/misc/viper.texi:1958
#, no-wrap
msgid "Key Bindings"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:1614
msgid "Enabling Emacs Keys, Rebinding keys, etc."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:1614
#: ../../../../../doc/misc/viper.texi:2196
#: ../../../../../doc/misc/viper.texi:2197
#, no-wrap
msgid "Packages that Change Keymaps"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:1614
msgid "How to deal with such beasts."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:1614
#: ../../../../../doc/misc/viper.texi:2325
#: ../../../../../doc/misc/viper.texi:2326
#, no-wrap
msgid "Viper Specials"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:1614
msgid "Special Viper commands."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:1614
#: ../../../../../doc/misc/viper.texi:2712
#: ../../../../../doc/misc/viper.texi:2713
#, no-wrap
msgid "Vi Macros"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:1614
msgid "How to do Vi style macros."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1619
#, no-wrap
msgid "setting variables"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1620
#, no-wrap
msgid "variables for customization"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:1621
#, no-wrap
msgid "Ex set"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1627
msgid "An easy way to customize Viper is to change the values of constants used in Viper.  Here is the list of the constants used in Viper and their default values.  The corresponding :se command is also indicated.  (The symbols @code{t} and @code{nil} represent ``true'' and ``false'' in Lisp)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1641
msgid "Viper supports both the abbreviated Vi variable names and their full names.  Variable completion is done on full names only.  @key{TAB} and @key{SPC} complete variable names.  Typing @kbd{=} will complete the name and then will prompt for a value, if applicable.  For instance, @kbd{:se au @key{SPC}} will complete the command to @kbd{:set autoindent}; @kbd{:se ta @key{SPC}} will complete the command and prompt further like this: @kbd{:set tabstop = }.  However, typing @kbd{:se ts @key{SPC}} will produce a ``No match'' message because @kbd{ts} is an abbreviation for @kbd{tabstop} and Viper supports completion on full names only.  However, you can still hit @key{RET} or @kbd{=}, which will complete the command like this: @kbd{:set ts = } and Viper will be waiting for you to type a value for the tabstop variable.  To get the full list of Vi variables, type @kbd{:se @key{SPC} @key{TAB}}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1643
#, no-wrap
msgid "viper-auto-indent nil"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:1644
#, no-wrap
msgid ":se ai (:se autoindent)"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:1645
#, no-wrap
msgid ":se ai-g (:se autoindent-global)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1648
msgid "If @code{t}, enable auto indentation.  by @key{RET}, @kbd{o} or @kbd{O} command."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1654
msgid "@code{viper-auto-indent} is a local variable.  To change the value globally, use @code{setq-default}.  It may be useful for certain major modes to have their own values of @code{viper-auto-indent}.  This can be achieved by using @code{setq} to change the local value of this variable in the hooks to the appropriate major modes."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1657
msgid "@kbd{:se ai} changes the value of @code{viper-auto-indent} in the current buffer only; @kbd{:se ai-g} does the same globally."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1657
#, no-wrap
msgid "viper-electric-mode t"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1662
msgid "If not @code{nil}, auto-indentation becomes electric, which means that @key{RET}, @kbd{O}, and @kbd{o} indent cursor according to the current major mode.  In the future, this variable may control additional electric features."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1666
msgid "This is a local variable: @code{setq} changes the value of this variable in the current buffer only.  Use @code{setq-default} to change the value in all buffers."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1666
#, no-wrap
msgid "viper-case-fold-search nil"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:1667
#, no-wrap
msgid ":se ic (:se ignorecase)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1670
msgid "If not @code{nil}, search ignores cases.  This can also be toggled by quickly hitting @kbd{/} twice."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1670
#, no-wrap
msgid "viper-re-search nil"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:1671
#, no-wrap
msgid ":se magic"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1675
msgid "If not @code{nil}, search will use regular expressions; if @code{nil} then use vanilla search.  This behavior can also be toggled by quickly hitting @kbd{/} trice."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1675
#: ../../../../../doc/misc/viper.texi:1922
#, no-wrap
msgid "buffer-read-only"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:1676
#, no-wrap
msgid ":se ro (:se readonly)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1679
msgid "Set current buffer to read only.  To change globally put @code{(setq-default buffer-read-only t)} in your @file{.emacs} file."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1679
#, no-wrap
msgid "blink-matching-paren t"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:1680
#, no-wrap
msgid ":se sm (:se showmatch)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1682
msgid "Show matching parens by blinking cursor."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1682
#, no-wrap
msgid "tab-width t (default setting via @code{setq-default})"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:1683
#, no-wrap
msgid ":se ts=value (:se tabstop=value)"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:1684
#, no-wrap
msgid ":se ts-g=value (:se tabstop-global=value)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1688
msgid "@code{tab-width} is a local variable that controls the width of the tab stops.  To change the value globally, use @code{setq-default}; for local settings, use @code{setq}."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1692
msgid "The command @kbd{:se ts} sets the tab width in the current buffer only; it has no effect on other buffers."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1696
msgid "The command @kbd{:se ts-g} sets tab width globally, for all buffers where the tab is not yet set locally, including the new buffers."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1702
msgid "Note that typing @key{TAB} normally doesn't insert the tab, since this key is usually bound to a text-formatting function, @code{indent-for-tab-command} (which facilitates programming and document writing).  Instead, the tab is inserted via the command @code{viper-insert-tab}, which is bound to @kbd{S-tab} (shift + tab)."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1706
msgid "On some non-windowing terminals, Shift doesn't modify the @key{TAB} key, so @kbd{S-tab} behaves as if it were @key{TAB}.  In such a case, you will have to bind @code{viper-insert-tab} to some other convenient key."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1707
#, no-wrap
msgid "viper-shift-width 8"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:1708
#, no-wrap
msgid ":se sw=value  (:se shiftwidth=value)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1710
msgid "The number of columns shifted by @kbd{>} and @kbd{<} commands."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1710
#, no-wrap
msgid "viper-search-wrap-around t"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:1711
#, no-wrap
msgid ":se ws (:se wrapscan)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1713
msgid "If not @code{nil}, search wraps around the end/beginning of buffer."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1713
#, no-wrap
msgid "viper-search-scroll-threshold 2"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1717
msgid "If search lands within this many lines of the window top or bottom, the window will be scrolled up or down by about 1/7-th of its size, to reveal the context.  If the value is negative, don't scroll."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1717
#, no-wrap
msgid "viper-tags-file-name \"TAGS\""
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1719
msgid "The name of the file used as the tag table."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1719
#, no-wrap
msgid "viper-re-query-replace nil"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1721
msgid "If not @code{nil}, use reg-exp replace in query replace."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1721
#, no-wrap
msgid "viper-want-ctl-h-help nil"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1724
msgid "If not @code{nil}, @kbd{C-h} is bound to @code{help-command}; otherwise, @kbd{C-h} is bound as usual in Vi."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1724
#, no-wrap
msgid "viper-vi-style-in-minibuffer t"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1728
msgid "If not @code{nil}, Viper provides a high degree of compatibility with Vi insert mode when you type text in the minibuffer; if @code{nil}, typing in the minibuffer feels like plain Emacs."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1728
#, no-wrap
msgid "viper-no-multiple-ESC t"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1734
msgid "If you set this to @code{nil}, you can use @key{ESC} as Meta in Vi state.  Normally, this is not necessary, since graphical displays have separate Meta keys (usually on each side of the space bar).  On a dumb terminal, Viper sets this variable to @code{twice}, which is almost like @code{nil}, except that double @key{ESC} beeps.  This, too, lets @key{ESC} to be used as a Meta."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1734
#, no-wrap
msgid "viper-fast-keyseq-timeout 200"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1738
msgid "Key sequences separated by this many milliseconds are treated as Vi-style keyboard macros.  If the key sequence is defined as such a macro, it will be executed.  Otherwise, it is processed as an ordinary sequence of typed keys."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1741
msgid "Setting this variable too high may slow down your typing.  Setting it too low may make it hard to type macros quickly enough."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1741
#, no-wrap
msgid "viper-ex-style-motion t"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1744
msgid "Set this to @code{nil}, if you want @kbd{l,h} to cross lines, etc.  @xref{Movement and Markers}, for more info."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1744
#, no-wrap
msgid "viper-ex-style-editing t"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1749
msgid "Set this to @code{nil}, if you want @kbd{C-h} and @key{DEL} to not stop at the beginning of a line in Insert state, @kbd{X} and @kbd{x} to delete characters across lines in Vi command state, etc."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1749
#, no-wrap
msgid "viper-ESC-moves-cursor-back t"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1752
msgid "It @code{t}, cursor moves back 1 character when switching from insert state to vi state.  If @code{nil}, the cursor stays where it was before the switch."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1752
#, no-wrap
msgid "viper-always t"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1759
msgid "@code{t} means: leave it to Viper to decide when a buffer must be brought up in Vi state, Insert state, or Emacs state.  This heuristics works well in virtually all cases.  @code{nil} means you either has to invoke @code{viper-mode} manually for each buffer (or you can add @code{viper-mode} to the appropriate major mode hooks using @code{viper-load-hook})."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1761
msgid "This option must be set in your Viper customization file."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1761
#, no-wrap
msgid "viper-custom-file-name \"~/.emacs.d/viper\""
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1766
msgid "File used for Viper-specific customization.  Change this setting, if you want.  Must be set in @file{.emacs} before Viper is loaded.  Note that you have to set it as a string inside double quotes."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1766
#, no-wrap
msgid "viper-spell-function 'ispell-region"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1768
msgid "Function used by the command @kbd{#c<move>} to spell."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:1768
#: ../../../../../doc/misc/viper.texi:1779
#, no-wrap
msgid "viper-glob-function"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1775
msgid "The value of this variable is the function symbol used to expand wildcard symbols. This is platform-dependent. The default tries to set this variable to work with most shells, MS Windows, etc.  However, if it doesn't work the way you expect, you should write your own.  Use @code{viper-glob-unix-files} and @code{viper-glob-mswindows-files} in @file{viper-util.el} as examples."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1779
msgid "This feature is used to expand wildcards in the Ex command @kbd{:e}.  Note that Viper doesn't support wildcards in the @kbd{:r} and @kbd{:w} commands, because file completion is a better mechanism."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1781
#, no-wrap
msgid "ex-cycle-other-window t"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1784
msgid "If not @code{nil}, @kbd{:n} and @kbd{:b} will cycle through files in another window, if one exists."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1784
#, no-wrap
msgid "ex-cycle-through-non-files nil"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1787
msgid "@kbd{:n} does not normally cycle through buffers.  Set this to get buffers also."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1787
#: ../../../../../doc/misc/viper.texi:1940
#: ../../../../../doc/misc/viper.texi:2317
#, no-wrap
msgid "viper-want-emacs-keys-in-insert"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1794
msgid "This is set to @code{nil} for user levels 1 and 2 and to @code{t} for user levels 3 and 4.  Users who specify level 5 are allowed to set this variable as they please (the default for this level is @code{t}).  If set to @code{nil}, complete Vi compatibility is provided in Insert state.  This is really not recommended, as this precludes you from using language-specific features provided by the major modes."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1794
#: ../../../../../doc/misc/viper.texi:1941
#: ../../../../../doc/misc/viper.texi:2316
#, no-wrap
msgid "viper-want-emacs-keys-in-vi"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1803
msgid "This is set to @code{nil} for user level 1 and to @code{t} for user levels 2--4.  At level 5, users are allowed to set this variable as they please (the default for this level is @code{t}).  If set to @code{nil}, complete Vi compatibility is provided in Vi command state.  Setting this to @code{nil} is really a bad idea, unless you are a novice, as this precludes the use of language-specific features provided by the major modes."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1803
#, no-wrap
msgid "viper-keep-point-on-repeat t"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1807
msgid "If not @code{nil}, point is not moved when the user repeats the previous command by typing a period.  This is very useful for doing repeated changes with the @kbd{.} key."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1807
#, no-wrap
msgid "viper-repeat-from-history-key 'f12"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1816
msgid "Prefix key used to invoke the macros @kbd{f12 1} and @kbd{f12 2} that repeat the second-last and the third-last destructive command.  Both these macros are bound (as Viper macros) to @code{viper-repeat-from-history}, which checks the second key by which it is invoked to see which of the previous commands to invoke.  Viper binds @kbd{f12 1} and @kbd{f12 2} only, but the user can bind more in his/her Viper customization file.  @xref{Vi Macros}, for how to do this."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1816
#, no-wrap
msgid "viper-keep-point-on-undo nil"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1822
msgid "If not @code{nil}, Viper tries to not move point when undoing commands.  Instead, it will briefly move the cursor to the place where change has taken place.  However, if the undone piece of text is not seen in window, then point will be moved to the place where the change took place.  Set it to @code{t} and see if you like it better."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1822
#, no-wrap
msgid "viper-delete-backwards-in-replace nil"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1826
msgid "If not @code{nil}, @key{DEL} key will delete characters while moving the cursor backwards.  If @code{nil}, the cursor will move backwards without deleting anything."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1826
#, no-wrap
msgid "viper-replace-overlay-face 'viper-replace-overlay-face"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1830
msgid "On a graphical display, Viper highlights replacement regions instead of putting a @samp{$} at the end.  This variable controls the so called @dfn{face} used to highlight the region."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1834
msgid "By default, @code{viper-replace-overlay-face} underlines the replacement on monochrome displays and also lays a stipple over them.  On color displays, replacement regions are highlighted with color."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1840
msgid "If you know something about Emacs faces and don't like how Viper highlights replacement regions, you can change @code{viper-replace-overlay-face} by specifying a new face.  (Emacs faces are described in the Emacs Lisp reference.)  On a color display, the following customization method is usually most effective:"
msgstr ""

#. type: smallexample
#: ../../../../../doc/misc/viper.texi:1843
#, no-wrap
msgid ""
"(set-face-foreground viper-replace-overlay-face \"DarkSlateBlue\")\n"
"(set-face-background viper-replace-overlay-face \"yellow\")\n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1847
msgid "For a complete list of colors available to you, evaluate the expression @code{(x-defined-colors)}.  (Type it in the buffer @file{*scratch*} and then hit the @kbd{C-j} key."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1848
#, no-wrap
msgid "viper-replace-overlay-cursor-color  \"Red\""
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1849
#, no-wrap
msgid "viper-replace-overlay-cursor-color"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1853
msgid "Cursor color when it is inside the replacement region.  This has effect only on color displays and only when Emacs runs as an X application."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1853
#, no-wrap
msgid "viper-insert-state-cursor-color nil"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1854
#, no-wrap
msgid "viper-insert-state-cursor-color"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1857
msgid "If set to a valid color, this will be the cursor color when Viper is in insert state."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1857
#, no-wrap
msgid "viper-emacs-state-cursor-color nil"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1858
#, no-wrap
msgid "viper-emacs-state-cursor-color"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1861
msgid "If set to a valid color, this will be the cursor color when Viper is in emacs state."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1861
#, no-wrap
msgid "viper-replace-region-end-delimiter \"$\""
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1864
msgid "A string used to mark the end of replacement regions.  It is used only on TTYs or if @code{viper-use-replace-region-delimiters} is non-@code{nil}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1864
#, no-wrap
msgid "viper-replace-region-start-delimiter  \"\""
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1867
msgid "A string used to mark the beginning of replacement regions.  It is used only on TTYs or if @code{viper-use-replace-region-delimiters} is non-@code{nil}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1867
#, no-wrap
msgid "viper-use-replace-region-delimiters"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1872
msgid "If non-@code{nil}, Viper will always use @code{viper-replace-region-end-delimiter} and @code{viper-replace-region-start-delimiter} to delimit replacement regions, even on color displays (where this is unnecessary).  By default, this variable is non-@code{nil} only on TTYs or monochrome displays."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1872
#, no-wrap
msgid "viper-allow-multiline-replace-regions t"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1878
msgid "If non-@code{nil}, multi-line text replacement regions, such as those produced by commands @kbd{c55w}, @kbd{3C}, etc., will stay around until the user exits the replacement mode.  In this variable is set to @code{nil}, Viper will emulate the standard Vi behavior, which supports only intra-line replacement regions (and multi-line replacement regions are deleted)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1878
#, no-wrap
msgid "viper-toggle-key \"\\C-z\""
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1882
msgid "Specifies the key used to switch from Emacs to Vi and back.  Must be set in your Viper customization file.  This variable can't be changed interactively after Viper is loaded."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1886
msgid "In Insert state, this key acts as a temporary escape to Vi state, i.e., it will set Viper up so that the very next command will be executed as if it were typed in Vi state."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1886
#: ../../../../../doc/misc/viper.texi:2337
#, no-wrap
msgid "viper-buffer-search-char nil"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1888
msgid "Key used for buffer search.  @xref{Viper Specials}, for details."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1888
#, no-wrap
msgid "viper-surrounding-word-function 'viper-surrounding-word"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1892
msgid "The value of this variable is a function name that is used to determine what constitutes a word clicked upon by the mouse.  This is used by mouse search and insert."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1892
#, no-wrap
msgid "viper-search-face 'viper-search-face"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1895
msgid "Variable that controls how search patterns are highlighted when they are found."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1895
#, no-wrap
msgid "viper-vi-state-hook nil"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1898
msgid "List of parameterless functions to be run just after entering the Vi command state."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1898
#, no-wrap
msgid "viper-insert-state-hook nil"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1900
msgid "Same for Insert state.  This hook is also run after entering Replace state."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1900
#, no-wrap
msgid "viper-replace-state-hook  nil"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1903
msgid "List of (parameterless) functions called just after entering Replace state (and after all @code{viper-insert-state-hook})."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1903
#, no-wrap
msgid "viper-emacs-state-hook nil"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1906
msgid "List of (parameterless) functions called just after switching from Vi state to Emacs state."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:1906
#, no-wrap
msgid "viper-load-hook nil"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:1909
msgid "List of (parameterless) functions called just after loading Viper.  This is the last chance to do customization before Viper is up and running."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1914
msgid "You can reset some of these constants in Viper with the Ex command @kbd{:set} (when so indicated in the table).  Or you can include a line like this in your Viper customization file:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:1916
#, no-wrap
msgid "(setq viper-case-fold-search t)\n"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1917
#, no-wrap
msgid "viper-auto-indent"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1918
#, no-wrap
msgid "viper-electric-mode"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1919
#, no-wrap
msgid "viper-case-fold-search"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1920
#, no-wrap
msgid "viper-re-search"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1921
#, no-wrap
msgid "viper-shift-width"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1923
#, no-wrap
msgid "viper-search-wrap-around"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1924
#, no-wrap
msgid "viper-search-scroll-threshold"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1926
#, no-wrap
msgid "viper-tags-file-name"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1927
#, no-wrap
msgid "viper-re-query-replace"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1928
#, no-wrap
msgid "viper-want-ctl-h-help"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1929
#, no-wrap
msgid "viper-vi-style-in-minibuffer"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1930
#, no-wrap
msgid "viper-no-multiple-ESC"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1931
#: ../../../../../doc/misc/viper.texi:2318
#, no-wrap
msgid "viper-always"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1932
#, no-wrap
msgid "viper-fast-keyseq-timeout"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1933
#, no-wrap
msgid "viper-ex-style-motion"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1934
#, no-wrap
msgid "viper-ex-style-editing"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1935
#, no-wrap
msgid "viper-ESC-moves-cursor-back"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1936
#, no-wrap
msgid "viper-custom-file-name"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1938
#, no-wrap
msgid "ex-cycle-other-window"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1939
#, no-wrap
msgid "ex-cycle-through-non-files"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1942
#, no-wrap
msgid "viper-keep-point-on-repeat"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1943
#, no-wrap
msgid "viper-keep-point-on-undo"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1944
#, no-wrap
msgid "viper-delete-backwards-in-replace"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1945
#, no-wrap
msgid "viper-replace-overlay-face"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1946
#, no-wrap
msgid "viper-replace-region-end-symbol"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1947
#, no-wrap
msgid "viper-replace-region-start-symbol"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1948
#, no-wrap
msgid "viper-allow-multiline-replace-regions"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1949
#, no-wrap
msgid "viper-toggle-key"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1950
#: ../../../../../doc/misc/viper.texi:2344
#, no-wrap
msgid "viper-buffer-search-char"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1951
#, no-wrap
msgid "viper-surrounding-word-function"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1952
#, no-wrap
msgid "viper-vi-state-hook"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1953
#, no-wrap
msgid "viper-insert-state-hook"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1954
#, no-wrap
msgid "viper-replace-state-hook"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:1955
#, no-wrap
msgid "viper-emacs-state-hook"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1960
#: ../../../../../doc/misc/viper.texi:4123
#, no-wrap
msgid "key bindings"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:1961
#, no-wrap
msgid "keymaps"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1970
msgid "Viper lets you define hot keys, i.e., you can associate keyboard keys such as F1, Help, PgDn, etc., with Emacs Lisp functions (that may already exist or that you will write).  Each key has a ``preferred form'' in Emacs.  For instance, the Up key's preferred form is [up], the Help key's preferred form is [help], and the Undo key has the preferred form [f14].  You can find out the preferred form of a key by typing @kbd{M-x describe-key-briefly} and then typing the key you want to know about."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1973
msgid "Under the X Window System, every keyboard key emits its preferred form, so you can just type"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:1977
#, no-wrap
msgid ""
"(global-set-key [f11] 'calendar)                        ; L1, Stop\n"
"(global-set-key [f14] 'undo)                            ; L4, Undo\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1989
msgid "to bind L1 (a key that exists on some SUN workstations) so it will invoke the Emacs Calendar and to bind L4 so it will undo changes.  However, on a dumb terminal or in an Xterm window, even the standard arrow keys may not emit the right signals for Emacs to understand.  To let Emacs know about those keys, you will have to find out which key sequences they emit by typing @kbd{C-q} and then the key (you should switch to Emacs state first).  Then you can bind those sequences to their preferred forms using @code{input-decode-map} as follows:"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:1994
#, no-wrap
msgid ""
"(cond ((string= (getenv \"TERM\") \"xterm\")\n"
"(define-key input-decode-map \"\\e[192z\" [f11])    ; L1\n"
"(define-key input-decode-map \"\\e[195z\" [f14])    ; L4, Undo\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:1999
msgid "The above illustrates how to do this for Xterm.  On VT100, you would have to replace \"xterm\" with \"vt100\" and also change the key sequences (the same key may emit different sequences on different types of terminals)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2003
msgid "The above keys are global, so they are overwritten by the local maps defined by the major modes and by Viper itself.  Therefore, if you wish to change a binding set by a major mode or by Viper, read this."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2011
msgid "Viper users who wish to specify their own key bindings should be concerned only with the following three keymaps: @code{viper-vi-global-user-map} for Vi state commands, @code{viper-insert-global-user-map} for Insert state commands, and @code{viper-emacs-global-user-map} for Emacs state commands (note: customized bindings for Emacs state made to @code{viper-emacs-global-user-map} are @emph{not} inherited by Insert state)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2020
msgid "For more information on Viper keymaps, see the header of the file @file{viper.el}.  If you wish to change a Viper binding, you can use the @code{define-key} command, to modify @code{viper-vi-global-user-map}, @code{viper-insert-global-user-map}, and @code{viper-emacs-global-user-map}, as explained below.  Each of these key maps affects the corresponding Viper state.  The keymap @code{viper-insert-global-user-map} also affects Viper's Replace state."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2026
msgid "If you want to bind a key, say @kbd{C-v}, to the function that scrolls page down and to make @kbd{0} display information on the current buffer, putting this in your Viper customization file will do the trick in Vi state:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2028
#, no-wrap
msgid "(define-key viper-vi-global-user-map \"\\C-v\" 'scroll-down)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2031
msgid "To set a key globally,"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2034
#, no-wrap
msgid ""
"(define-key viper-emacs-global-user-map \"\\C-c m\" 'smail)\n"
"(define-key viper-vi-global-user-map \"0\" 'viper-info-on-file)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2040
msgid "Note, however, that this binding may be overwritten by other keymaps, since the global keymap has the lowest priority.  To make sure that nothing will override a binding in Emacs state, you can write this:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2042
#, no-wrap
msgid "(define-key viper-emacs-global-user-map \"\\C-c m\" 'smail)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2045
msgid "To customize the binding for @kbd{C-h} in Insert state:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2048
#, no-wrap
msgid ""
"(define-key viper-insert-global-user-map \"\\C-h\"\n"
"  'my-del-backwards-function)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2058
msgid "Each Emacs command key calls some Lisp function.  If you have enabled the Help, (@pxref{Rudimentary Changes}) @kbd{C-h k} will show you the function for each specific key; @kbd{C-h b} will show all bindings, and @kbd{C-h m} will provide information on the major mode in effect.  If Help is not enabled, you can still get help in Vi state by prefixing the above commands with @kbd{\\}, e.g., @kbd{\\ C-h k} (or you can use the Help menu in the menu bar, if Emacs runs under X)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2063
msgid "Viper users can also change bindings on a per major mode basis.  As with global bindings, this can be done separately for each of the three main Viper states.  To this end, Viper provides the function @code{viper-modify-major-mode}."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2063
#, no-wrap
msgid "viper-modify-major-mode"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2068
msgid "To modify keys in Emacs state for @code{my-favorite-major-mode}, the user needs to create a sparse keymap, say, @code{my-fancy-map}, bind whatever keys necessary in that keymap, and put"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2071
#, no-wrap
msgid "(viper-modify-major-mode 'dired-mode 'emacs-state my-fancy-map)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2080
msgid "in your Viper customization file.  To do the same in Vi and Insert states, you should use @code{vi-state} and @code{insert-state}.  Changes in Insert state are also in effect in Replace state.  For instance, suppose that the user wants to use @kbd{dd} in Vi state under Dired mode to delete files, @kbd{u} to unmark files, etc.  The following code in the Viper customization file will then do the job:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2086
#, no-wrap
msgid ""
"(setq my-dired-modifier-map (make-sparse-keymap))\n"
"(define-key my-dired-modifier-map \"dd\" 'dired-flag-file-deletion)\n"
"(define-key my-dired-modifier-map \"u\" 'dired-unmark)\n"
"(viper-modify-major-mode 'dired-mode 'vi-state my-dired-modifier-map)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2092
msgid "A Vi purist may want to modify Emacs state under Dired mode so that @kbd{k}, @kbd{l}, etc., will move around in directory buffers, as in Vi.  Although this is not recommended, as these keys are bound to useful Dired functions, the trick can be accomplished via the following code:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2099
#, no-wrap
msgid ""
"(setq my-dired-vi-purist-map (make-sparse-keymap))\n"
"(define-key my-dired-vi-purist-map \"k\" 'viper-previous-line)\n"
"(define-key my-dired-vi-purist-map \"l\" 'viper-forward-char)\n"
"(viper-modify-major-mode 'dired-mode\n"
"                         'emacs-state my-dired-vi-purist-map)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2103
msgid "Yet another way to customize key bindings in a major mode is to edit the list @code{viper-major-mode-modifier-list} using the customization widget."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2103
#, no-wrap
msgid "viper-major-mode-modifier-list"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2108
msgid "(This variable is in the Viper-misc customization group.)  The elements of this list are triples of the form: (major-mode viper-state keymap), where the keymap contains bindings that are supposed to be active in the given major mode and the given viper-state."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2116
msgid "Effects similar to key binding changes can be achieved by defining Vi keyboard macros using the Ex commands @kbd{:map} and @kbd{:map!}.  The difference is that multi-key Vi macros do not override the keys they are bound to, unless these keys are typed in quick succession.  So, with macros, one can use the normal keys alongside with the macros.  If per-mode modifications are needed, the user can try both ways and see which one is more convenient."
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:2116
#, no-wrap
msgid "Ex map"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2118
msgid "@xref{Vi Macros}, for details."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2128
msgid "Note: in major modes that come up in @emph{Emacs state} by default, the aforesaid modifications may not take place immediately (but only after the buffer switches to some other Viper state and then back to Emacs state).  To avoid this, one should add @code{viper-change-state-to-emacs} to an appropriate hook of that major mode.  (Check the function @code{viper-set-hooks} in @file{viper.el} for examples.)  However, if you did not set @code{viper-always} to @code{nil}, chances are that you won't need to perform the above procedure, because Viper will take care of most useful defaults."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2137
msgid "Finally, Viper has a facility that lets the user define per-buffer bindings, i.e., bindings that are in effect in some specific buffers only.  Unlike per-mode bindings described above, per-buffer bindings can be defined based on considerations other than the major mode.  This is done via the function @code{viper-add-local-keys}, which lets one specify bindings that should be in effect in the current buffer only and for a specific Viper state.  For instance,"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:2140
#, no-wrap
msgid ""
"(viper-add-local-keys 'vi-state '((\"ZZ\" .@: TeX-command-master)\n"
"                                 (\"ZQ\" .@: viper-save-kill-buffer)))\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2150
msgid "redefines @kbd{ZZ} to invoke @code{TeX-command-master} in @code{vi-state} and @kbd{ZQ} to save-then-kill the current buffer.  These bindings take effect only in the buffer where this command is executed.  The typical use of this function is to execute the above expression from within a function that is included in a hook to some major mode.  For instance, the above expression could be called from a function, @code{my-tex-init}, which may be added to @code{tex-mode-hook} as follows:"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:2152
#, no-wrap
msgid "(add-hook 'tex-mode-hook 'my-tex-init)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2157
msgid "When TeX mode starts, the hook is executed and the above Lisp expression is evaluated.  Then, the bindings for @kbd{ZZ} and @kbd{ZQ} are changed in Vi command mode for all buffers in TeX mode."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2163
msgid "Another useful application is to bind @kbd{ZZ} to @code{send-mail} in the Mail mode buffers (the specifics of this depend on which mail package you are using, @code{rmail}, @code{mh-e}, @code{vm}, etc.  For instance, here is how to do this for @code{mh-e}, the Emacs interface to MH:"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:2168
#, no-wrap
msgid ""
"(defun mh-add-vi-keys ()\n"
"  \"Set up ZZ for MH-e and XMH.\"\n"
"  (viper-add-local-keys 'vi-state '((\"ZZ\" .@: mh-send-letter))))\n"
"(add-hook 'mh-letter-mode-hook 'mh-add-vi-keys)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2175
msgid "You can also use @code{viper-add-local-keys} to set per buffer bindings in Insert state and Emacs state by passing as a parameter the symbols @code{insert-state} and @code{emacs-state}, respectively.  As with global bindings, customized local bindings done to Emacs state are not inherited by Insert state."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2182
msgid "On rare occasions, local keys may be added by mistake.  Usually this is done indirectly, by invoking a major mode that adds local keys (e.g., @code{shell-mode} redefines @key{RET}).  In such a case, exiting the wrong major mode won't rid you from unwanted local keys, since these keys are local to Viper state and the current buffer, not to the major mode.  In such situations, the remedy is to type @kbd{M-x viper-zap-local-keys}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2187
msgid "So much about Viper-specific bindings.  @xref{Customization,,Customization,emacs,The GNU Emacs Manual}, and the Emacs quick reference card for the general info on key bindings in Emacs."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2188
#, no-wrap
msgid "input-decode-map"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2189
#, no-wrap
msgid "local-function-key-map"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2190
#, no-wrap
msgid "viper-vi-global-user-map"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2191
#, no-wrap
msgid "viper-insert-global-user-map"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2192
#, no-wrap
msgid "viper-emacs-global-user-map"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2193
#, no-wrap
msgid "viper-add-local-keys"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2194
#, no-wrap
msgid "viper-zap-local-keys"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2198
#, no-wrap
msgid "C-c and Viper"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2199
#, no-wrap
msgid "Viper and C-c"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2211
msgid "Viper is designed to coexist with all major and minor modes of Emacs.  This means that bindings set by those modes are generally available with Viper (unless you explicitly prohibit them by setting @code{viper-want-emacs-keys-in-vi} and @code{viper-want-emacs-keys-in-insert} to @code{nil}).  If @code{viper-always} is set to @code{t} (which is the default), Viper will try to bring each buffer in the Viper state that is most appropriate for that buffer.  Usually, this would be the Vi state, but sometimes it could be the Insert state or the Emacs state."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2223
msgid "Some major mode bindings will necessarily be overwritten by Viper.  Indeed, in Vi state, most of the 1-character keys are used for Vi-style editing.  This usually causes no problems because most packages designed for editing files typically do not bind such keys.  Instead, they use key sequences that start with @kbd{C-x} and @kbd{C-c}.  This is why it was so important for us to free up @kbd{C-x} and @kbd{C-c}.  It is common for language-specific major modes to bind @key{TAB} and @kbd{C-j} (the line feed) keys to various formatting functions.  This is extremely useful, but may require some getting used to for a Vi user.  If you decide that this feature is not for you, you can re-bind these keys as explained earlier (@pxref{Customization})."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2232
msgid "Binding for @key{TAB} is one of the most unusual aspects of Viper for many novice users.  In Emacs, @key{TAB} is used to format text and programs, and is extremely useful.  For instance, hitting @key{TAB} causes the current line to be re-indented in accordance with the context.  In programming, this is very important, since improper automatic indentation would immediately alert the programmer to a possible error.  For instance, if a @kbd{)} or a @kbd{\"} is missing somewhere above the current line, @key{TAB} is likely to mis-indent the line."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2237
msgid "For this reason, Viper doesn't change the standard Emacs binding of @key{TAB}, thereby sacrificing Vi compatibility (except for users at level 1).  Instead, in Viper, the key @kbd{S-tab} (shift+ tab) is chosen to emulate Vi's @key{TAB}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2242
msgid "We should note that on some non-windowing terminals, Shift doesn't modify the @key{TAB} key, so @kbd{S-tab} behaves as if it were @key{TAB}.  In such a case, you will have to bind @code{viper-insert-tab} to some other convenient key."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2258
msgid "Some packages, notably Dired, Gnus, Info, etc., attach special meaning to common keys like @key{SPC}, @kbd{x}, @kbd{d}, @kbd{v}, and others.  This means that Vi command state is inappropriate for working with these packages.  Fortunately, these modes operate on read-only buffers and are designed not for editing files, but for special-purpose browsing, reading news, mail, etc., and Vi commands are meaningless in these situations.  For this reason, Viper doesn't force Vi state on such major modes---it brings them in Emacs state.  You can switch to Vi state by typing @kbd{C-z} if, for instance, you want to do Vi-style search in a buffer (although, usually, incremental search, which is bound to @kbd{C-s}, is sufficient in these situations).  But you should then switch back to Emacs state if you plan to continue using these major modes productively.  You can also switch to Vi temporarily, to execute just one command.  This is done by typing @kbd{C-c \\}.  (In some of these modes, @kbd{/} and @kbd{:} are bound Vi-style, unless these keys perform essential duties.)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2265
msgid "If you would like certain major modes to come up in Emacs state rather than Vi state (but Viper thinks otherwise), you should put these major modes on the @code{viper-emacs-state-mode-list} list and delete them from @code{viper-vi-state-mode-list}.  Likewise, you can force Viper's Insert state on a major mode by putting it in @code{viper-insert-state-mode-list}."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2265
#, no-wrap
msgid "viper-emacs-state-mode-list"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2266
#, no-wrap
msgid "viper-insert-state-mode-list"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2267
#, no-wrap
msgid "viper-vi-state-mode-list"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2275
msgid "It is also possible to impose Vi on some major modes, even though they may bind common keys to specialized commands.  This might make sense for modes that bind only a small number of common keys.  For instance, Viper subverts the Shell mode by changing the bindings for @kbd{C-m} and @kbd{C-d} using @code{viper-add-local-keys} described in the section on customization (@pxref{Customization})."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2284
msgid "In some cases, some @emph{minor} modes might override certain essential bindings in Vi command state.  This is not a big problem because this can happen only in the beginning, when the minor mode kicks in.  Typing @code{M-x viper-mode} will correct the situation.  Viper knows about several such minor modes and takes care of them, so the above trick is usually not necessary.  If you find that some minor mode, e.g., @code{nasty-mode} interferes with Viper, putting the following in your Viper customization file should fix the problem:"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:2286
#, no-wrap
msgid "(viper-harness-minor-mode \"nasty-mode\")\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2290
msgid "The argument to @code{viper-harness-minor-mode} is the name of the file for the offending minor mode with the suffixes @file{.el} and @file{.elc} removed."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2295
msgid "It may not be always obvious which minor mode is at fault.  The only guidance here is to look into the file that defines the minor mode you are suspecting, say @file{nasty-mode.el}, and see if it has a variable called @code{nasty-mode-map}.  Then check if there is a statement of the form"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:2297
#, no-wrap
msgid "(define-key nasty-mode-map key function)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2303
msgid "that binds the misbehaving keys.  If so, use the above line to harness @code{nasty-mode}.  If your suspicion is wrong, no harm is done if you harness a minor mode that doesn't need to be harnessed."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2308
msgid "It is recommended to harness even those minor modes that don't override Viper keys, but still have their own keymaps. A general way to make a minor mode, @code{my-mode}, compatible with Viper is to have the file @file{my-mode.el} include the following code:"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:2314
#, no-wrap
msgid ""
"(when (fboundp 'viper-harness-minor-mode)\n"
"  (let ((lib (file-name-sans-extension\n"
"               (file-name-nondirectory load-file-name))))\n"
"    (viper-harness-minor-mode lib)))\n"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2319
#, no-wrap
msgid "viper-set-hooks"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2320
#, no-wrap
msgid "viper-mode"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2321
#, no-wrap
msgid "viper-harness-minor-mode"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2322
#, no-wrap
msgid "remove-hook"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2323
#, no-wrap
msgid "add-hook"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2334
msgid "Viper extends Vi with a number of useful features.  This includes various search functions, histories of search strings, Ex commands, insertions, and Vi's destructive commands.  In addition, Viper supports file name completion and history, completion of Ex commands and variables, and many other features.  Some of these features are explained in detail elsewhere in this document.  Other features are explained here."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2336
#, no-wrap
msgid "(viper-buffer-search-enable)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2343
msgid "Enable buffer search.  Explicit call to @code{viper-buffer-search-enable} sets @code{viper-buffer-search-char} to @kbd{g}.  Alternatively, the user can set @code{viper-buffer-search-char} in his/her Viper customization file to a key sequence to be used for buffer search.  There is no need to call @code{viper-buffer-search-enable} in that case."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2343
#, no-wrap
msgid "viper-buffer-search-enable"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2345
#, no-wrap
msgid "viper-toggle-search-style"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2352
msgid "This function, bound to @kbd{C-c /}, lets one toggle case-sensitive and case-insensitive search, and also switch between plain vanilla search and search via regular expressions.  Without the prefix argument, the user is asked which mode to toggle.  With prefix argument 1, this toggles case-sensitivity.  With prefix argument 2, regular expression/vanilla search will be toggled."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2366
msgid "However, we found that the most convenient way to toggle these options is to bind a Vi macro to bind @kbd{//} to toggles case sensitivity and to @kbd{///} to toggles vanilla search.  Thus, quickly hitting @kbd{/} twice will switch Viper from case sensitive search to case-insensitive.  Repeating this once again will restore the original state.  Likewise, quickly hitting @kbd{/} three times will switch you from vanilla-style search to search via regular expressions.  If you hit something other than @kbd{/} after the first @kbd{/} or if the second @kbd{/} doesn't follow quickly enough, then Viper will issue the usual prompt @kbd{/} and will wait for input, as usual in Vi.  If you don't like this behavior, you can ``unrecord'' these macros in your Viper customization file.  For instance, if you don't like the above feature, put this in the file:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2368
#, no-wrap
msgid "(viper-set-searchstyle-toggling-macros 'undefine)\n"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2369
#, no-wrap
msgid "viper-set-searchstyle-toggling-macros"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2374
msgid "If you don't like this feature as a default, but would still like to have it in some major modes, you can do so by first unsetting it globally, as shown above, and then setting it in the desired major modes as follows:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2377
#, no-wrap
msgid ""
"(viper-set-searchstyle-toggling-macros nil 'c-mode)\n"
"(viper-set-searchstyle-toggling-macros nil 'lisp-mode)\n"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2379
#, no-wrap
msgid "Vi-isms in Emacs state"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2389
msgid "Some people find it useful to use the Vi-style search key, @kbd{/}, to invoke search in modes which Viper leaves in emacs-state.  These modes are: @code{dired-mode}, @code{mh-folder-mode}, @code{Info-mode}, and @code{Buffer-menu-mode} (more may be added in the future).  So, in the above modes, Viper binds @kbd{/} so that it will behave Vi-style.  Furthermore, in those major modes, Viper binds @kbd{:} to invoke ex-style commands, like in vi-state.  And, as described above, @kbd{//} and @kbd{///} get bound to Vi-style macros that toggle case-insensitivity and regexp-search."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2393
msgid "If you don't like these features---which I don't really understand---you can unbind @kbd{/} and @kbd{:} in @code{viper-dired-modifier-map} (for Dired) or in @code{viper-slash-and-colon-map}, for other modes."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2393
#, no-wrap
msgid "viper-slash-and-colon-map"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2394
#, no-wrap
msgid "viper-dired-modifier-map"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2401
msgid "To unbind the macros @kbd{//} and @kbd{///} for a major mode where you feel they are undesirable, execute @code{viper-set-emacs-state-searchstyle-macros} with a non-@code{nil} argument.  This can be done either interactively, by supplying a prefix argument, or by placing"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2403
#, no-wrap
msgid "(viper-set-emacs-state-searchstyle-macros 'undefine)\n"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2404
#, no-wrap
msgid "viper-set-emacs-state-searchstyle-macros"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2407
msgid "in the hook to the major mode (e.g., @code{dired-mode-hook}).  @xref{Vi Macros}, for more information on Vi macros."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2408
#, no-wrap
msgid "viper-heading-start"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2409
#, no-wrap
msgid "viper-heading-end"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2410
#: ../../../../../doc/misc/viper.texi:3254
#, no-wrap
msgid "headings"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2411
#: ../../../../../doc/misc/viper.texi:3255
#, no-wrap
msgid "sections"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2412
#: ../../../../../doc/misc/viper.texi:3253
#, no-wrap
msgid "paragraphs"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2413
#: ../../../../../doc/misc/viper.texi:3256
#, no-wrap
msgid "sentences"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2417
msgid "Regular Expressions for @kbd{[[} and @kbd{]]}.  Note that Emacs defines Regexps for paragraphs and sentences.  @xref{Paragraphs,,Paragraphs and Sentences,emacs,The GNU Emacs Manual}, for details."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2417
#, no-wrap
msgid "M-x viper-set-expert-level"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2418
#, no-wrap
msgid "viper-set-expert-level"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2420
msgid "Change your user level interactively."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2420
#, no-wrap
msgid "viper-smart-suffix-list  '(\"\" \"tex\" \"c\" \"cc\" \"el\" \"p\")"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2421
#, no-wrap
msgid "viper-smart-suffix-list"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2429
msgid "Viper supports Emacs-style file completion when it prompts the user for a file name.  However, in many cases, the same directory may contain files with identical prefix but different suffixes, e.g., prog.c, prog.o, paper.tex, paper.dvi.  In such cases, completion will stop at the period.  If the above variable is a list of strings representing suffixes, Viper will try these suffixes in the order listed and will check if the corresponding file exists."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2437
msgid "For instance, if completion stopped at @samp{paper.} and the user typed @key{RET}, then Viper will check if the files @file{paper.}, @file{paper.tex}, @file{paper.c}, etc., exist.  It will take the first such file.  If no file exists, Viper will give a chance to complete the file name by typing the appropriate suffix.  If @file{paper.} was the intended file name, hitting return will accept it."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2439
msgid "To turn this feature off, set the above variable to @code{nil}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2440
#, no-wrap
msgid "viper-insertion-ring-size  14"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2441
#, no-wrap
msgid "viper-insertion-ring-size"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2455
msgid "Viper remembers what was previously inserted in Insert and Replace states.  Several such recent insertions are kept in a special ring of strings of size @code{viper-insertion-ring-size}.  If you enter Insert or Replace state you can reinsert strings from this ring by typing @kbd{C-c M-p} or @kbd{C-c M-n}.  The former will search the ring in the direction of older insertions, and the latter will search in the direction of newer insertions.  Hitting @kbd{C-c M-p} or @kbd{C-c M-n} in succession will undo the previous insertion from the ring and insert the next item on the ring.  If a larger ring size is needed, change the value of the above variable in the Viper customization file."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2458
msgid "Since typing these sequences of keys may be tedious, it is suggested that the user should bind a function key, such as @kbd{f31}, as follows:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2461
#, no-wrap
msgid ""
"(define-key viper-insert-global-user-map [f31]\n"
"            'viper-insert-prev-from-insertion-ring)\n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2468
msgid "This binds @kbd{f31} (which is usually @kbd{R11} on a Sun workstation)  to the function that inserts the previous string in the insertion history.  To rotate the history in the opposite direction, you can either bind an unused key to @code{viper-insert-next-from-insertion-ring} or hit any digit (1 to 9) then @kbd{f31}."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2472
#: ../../../../../doc/misc/viper.texi:2502
msgid "One should not bind the above functions to @kbd{M-p} or @kbd{M-n}, since this will interfere with the minibuffer histories and, possibly, other major modes."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2473
#, no-wrap
msgid "viper-command-ring-size  14"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2474
#, no-wrap
msgid "viper-command-ring-size"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2475
#, no-wrap
msgid "Destructive command ring"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2476
#, no-wrap
msgid "Destructive command history"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2489
msgid "Viper keeps track of the recent history of destructive commands, such as @kbd{dw}, @kbd{i}, etc.  In Vi state, the most recent command can be re-executed by hitting a period, as in Vi.  However, repeated typing @kbd{C-c M-p} will cause Viper to show the previous destructive commands in the minibuffer.  Subsequent hitting period will execute the command that was displayed last.  The key @kbd{C-c M-n} will cycle through the command history in the opposite direction.  Since typing @kbd{C-c M-p} may be tedious, it is more convenient to bind an appropriate function to an unused function key on the keyboard and use that key.  For instance, the following"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2492
#, no-wrap
msgid ""
"(define-key viper-vi-global-user-map [f31]\n"
"            'viper-prev-destructive-command)\n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2498
msgid "binds the key @kbd{f31} (which is usually @kbd{R11} on a Sun workstation)  to the function that searches the command history in the direction of older commands.  To search in the opposite direction, you can either bind an unused key to @code{viper-next-destructive-command} or hit any digit (1 to 9) then @kbd{f31}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2503
#, no-wrap
msgid "viper-minibuffer-vi-face  'viper-minibuffer-vi-face"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2504
#, no-wrap
msgid "viper-minibuffer-insert-face  'viper-minibuffer-insert-face"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2505
#, no-wrap
msgid "viper-minibuffer-emacs-face  'viper-minibuffer-emacs-face"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2510
msgid "These faces control the appearance of the minibuffer text in the corresponding Viper states.  You can change the appearance of these faces through Emacs's customization widget, which is accessible through the menubar."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2514
msgid "Viper is located in this widget under the @emph{Emulations} customization subgroup of the @emph{Editing} group.  All Viper faces are grouped together in Viper's @emph{Highlighting} customization subgroup."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2517
msgid "Note that only the text you type in is affected by the above faces.  Prompts and minibuffer messages are not affected."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2520
msgid "Purists who do not like adornments in the minibuffer can always zap them by putting"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2524
#, no-wrap
msgid ""
"(copy-face 'default 'viper-minibuffer-vi-face)\n"
"(copy-face 'default 'viper-minibuffer-insert-face)\n"
"(copy-face 'default 'viper-minibuffer-emacs-face)\n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2530
msgid "in their Viper customization file or through the customization widget, as described above.  However, in that case, the user will not have any indication of the current Viper state in the minibuffer.  (This is important if the user accidentally switches to another Viper state by typing @key{ESC} or @kbd{C-z})."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2530
#, no-wrap
msgid "M-x viper-go-away"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2534
msgid "Make Viper disappear from the face of your running Emacs instance.  If your fingers start aching again, @kbd{M-x viper-mode} might save your day."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2534
#, no-wrap
msgid "M-x toggle-viper-mode"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2537
msgid "Toggle Viperization of Emacs on and off."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2539
#, no-wrap
msgid "Multifile documents and programs"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2544
msgid "Viper provides some support for multi-file documents and programs.  If a document consists of several files we can designate one of them as a master and put the following at the end of that file:"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:2548
#, no-wrap
msgid ""
";; Local Variables:\n"
";; eval: (viper-setup-master-buffer \"file1\" \"file2\" \"file3\" \"file4\")\n"
";; End:\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2558
msgid "where @code{file1} to @code{file4} are names of files related to the master file.  Next time, when the master file is visited, the command @code{viper-setup-master-buffer} will be evaluated and the above files will be associated with the master file.  Then, the new Ex command @kbd{:RelatedFile} (abbr.@: @kbd{:R}) will display files 1 to 4 one after another, so you can edit them.  If a file is not in any Emacs buffer, it will be visited.  The command @kbd{PreviousRelatedFile} (abbr., @kbd{:P})  goes through the file list in the opposite direction."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2563
msgid "These commands are akin to @kbd{:n} and @kbd{:N}, but they allow the user to focus on relevant files only."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2569
msgid "Note that only the master file needs to have the aforementioned block of commands.  Also, \";;\" above can be replaced by some other markers.  Semicolon is good for Lisp programs, since it is considered a comment designator there.  For LaTeX, this could be \"%%%\", and for C the above block should be commented out."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2574
msgid "Even though these commands are sometimes useful, they are no substitute for the powerful @emph{tag table} facility of Emacs.  Viper's @kbd{:tag} command in a primitive interface to Emacs tags.  @xref{Tags Tables,,,emacs, The GNU Emacs Manual}, for more information on tags."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2580
msgid "The following two commands are normally bound to a mouse click and are part of Viper.  They work only if Emacs runs as an application under X Windows (or under some other window system for which a port of GNU Emacs 20 is available).  Clicking the mouse when Emacs is invoked in an Xterm window (using @code{emacs -nw}) will do no good."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2582
#, no-wrap
msgid "mouse"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2583
#, no-wrap
msgid "mouse-search"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2584
#, no-wrap
msgid "viper-mouse-search-key  (meta shift 1)"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2585
#: ../../../../../doc/misc/viper.texi:2640
#, no-wrap
msgid "viper-mouse-insert-key"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2592
msgid "This variable controls the @emph{mouse-search} feature of Viper.  The default value states that holding Meta and Shift keys while clicking mouse button 1 should initiate search for a region under the mouse pointer (defined below).  This command can take a prefix argument, which indicates the occurrence of the pattern to search for."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2599
msgid "Note: while loading initially, Viper binds this mouse action only if it is not already bound to something else.  If you want to use the mouse-search feature, and the @kbd{Meta-Shift-mouse-1} mouse action is already bound to something else, you can rebind the mouse-search feature by setting @code{viper-mouse-search-key} to something else in your Viper customization file:"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:2601
#, no-wrap
msgid "(setq viper-mouse-search-key '(meta 1))\n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2607
msgid "This would bind mouse search to the action invoked by pressing the Meta key and clicking mouse button 1.  The allowed values of @code{viper-mouse-search-key} are lists that contain a mouse-button number (1,2, or 3) and any combination of the words ``control'', ``meta'', and ``shift''."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2612
msgid "If the requested mouse action (e.g., (meta 1)) is already taken for other purposes then you have to confirm your intention by placing the following command in your Viper customization file after setting @code{viper-mouse-search-key}:"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:2614
#, no-wrap
msgid "(viper-bind-mouse-search-key 'force)\n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2618
msgid "You can also change this setting interactively, through the customization widget of Emacs (type @kbd{:customize})."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2630
msgid "The region that is chosen as a pattern to search for is determined as follows.  If search is invoked via a single click, Viper chooses the region that lies between the beginning of the ``word'' under the pointer (``word'' is understood in Vi sense) and the end of that word.  The only difference with Vi's words is that in Lisp major modes @samp{-} is considered an alphanumeric symbol.  This is done for the convenience of working with Lisp symbols, which often have an @samp{-} in them.  Also, if you click on a non-alphanumeric character that is not a word separator (in Vi sense) then this character will also be considered alphanumeric, provided that it is adjacent (from either side) to an alphanumeric character.  This useful feature gives added control over the patterns selected by the mouse click."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2634
msgid "On a double-click, the region is determined by the beginning of the current Vi's ``Word'' (i.e., the largest non-separator chunk of text) and the End of that ``Word'' (as determined by the @kbd{E} command)."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2637
msgid "On a triple-click, the region consists of the entire line where the click occurred with all leading and trailing spaces and tabs removed."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2638
#, no-wrap
msgid "mouse-insert"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:2639
#, no-wrap
msgid "viper-mouse-insert-key (meta shift 2)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2649
msgid "This variable controls the @emph{mouse-insert} feature of Viper.  The above default value states that holding Meta and Shift keys while clicking mouse button 2 should insert the region surrounding the mouse pointer.  The rules defining this region are the same as for mouse-search.  This command takes an optional prefix argument, which indicates how many such regions to snarf from the buffer and insert.  (In case of a triple-click, the prefix argument is ignored.)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2654
msgid "Note: while loading initially, Viper binds this mouse action only if it not already bound to something else.  If you want to use this feature and the default mouse action is already bound, you can rebind mouse-insert by placing this command in your Viper customization file:"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:2656
#, no-wrap
msgid "(setq viper-mouse-insert-key '(meta 2))\n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2660
msgid "If you want to bind mouse-insert to an action even if this action is already taken for other purposes in Emacs, then you should add this command to your Viper customization file, after setting @code{viper-mouse-insert-key}:"
msgstr ""

#. type: lisp
#: ../../../../../doc/misc/viper.texi:2662
#, no-wrap
msgid "(viper-bind-mouse-insert-key 'force)\n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2666
msgid "This value can also be changed via the Emacs customization widget at the menubar."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:2667
#: ../../../../../doc/misc/viper.texi:2676
#, no-wrap
msgid "viper-multiclick-timeout"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:2671
msgid "This variable controls the rate at which double-clicking must occur for the purpose of mouse search and mouse insert.  By default, this is set to @code{double-click-time}."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:2672
#: ../../../../../doc/misc/viper.texi:4431
#: ../../../../../doc/misc/viper.texi:4448
#, no-wrap
msgid "S-mouse-1"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:2673
#: ../../../../../doc/misc/viper.texi:4440
#: ../../../../../doc/misc/viper.texi:4449
#, no-wrap
msgid "S-mouse-2"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:2674
#, no-wrap
msgid "META SHIFT button1up"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:2675
#, no-wrap
msgid "META SHIFT button2up"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2677
#, no-wrap
msgid "viper-mouse-click-insert-word"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2678
#, no-wrap
msgid "viper-mouse-click-search-word"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2690
msgid "Note: The above functions search and insert in the selected window of the latest active frame.  This means that you can click in another window or another frame and have search or insertion done in the frame and window you just left.  This lets one use these functions in a multi-frame configuration.  However, this may require some getting used to.  For instance, if you are typing in a frame, A, and then move the mouse to frame B and click to invoke mouse search, search (or insertion) will be performed in frame A@.  To perform search/insertion in frame B, you will first have to shift focus there, which doesn't happen until you type a character or perform some other action in frame B---mouse search doesn't shift focus."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2695
msgid "If you decide that you don't like the above feature and always want search/insertion be performed in the frame where the click occurs, don't bind (and unbind, if necessary) @code{viper-mouse-catch-frame-switch} from the mouse event it is bound to."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2703
msgid "Mouse search is integrated with Vi-style search, so you can repeat it with @kbd{n} and @kbd{N}.  It should be also noted that, while case-sensitivity of search in Viper is controlled by the variable @code{viper-case-fold-search}, the case of mouse search is controlled by the Emacs variable @code{case-fold-search}, which may be set differently from @code{viper-case-fold-search}.  Therefore, case-sensitivity of mouse search may be different from that of the usual Vi-style search."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2711
msgid "Finally, if the way Viper determines the word to be searched for or to be inserted is not what you want, there is a variable, @code{viper-surrounding-word-function}, which can be changed to indicate another function for snarfing words out of the buffer.  The catch is that you will then have to write such a function and make it known to your Emacs.  The function @code{viper-surrounding-word} in @file{viper.el} can be used as a guiding example."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:2715
#, no-wrap
msgid "Vi macros"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2727
msgid "Viper supports much enhanced Vi-style macros and also facilitates the use of Emacs-style macros.  To define a temporary macro, it is generally more convenient to use Emacs keyboard macro facility.  Emacs keyboard macros are usually defined anonymously, and the latest macro can be executed by typing @kbd{C-x e} (or @kbd{*}, if Viper is in Vi state).  If you need to use several temporary macros, Viper lets you save them to a register (a lowercase letter); such macros can then be executed by typing @kbd{@@a} in Vi state (if a macro was previously saved in register @kbd{a}).  @xref{Macros and Registers}, for details."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2735
msgid "If, however, you need to use a macro regularly, it must be given a permanent name and saved.  Emacs manual explains how to do this, but invocation of named Emacs macros is quite different from Vi's.  First, invocation of permanent Emacs macros takes time because it requires typing too many keys (to a Vi user's taste, anyway).  Second, binding such macros to function keys, for fast access, hogs valuable real estate on the keyboard."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2739
msgid "Vi-style macros are better in that respect, since Vi lets the user overload the meaning of key sequences: keys typed in fast succession are treated specially, if this key sequence is bound to a macro."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2746
msgid "Viper provides Vi-style keyboard macros through the usual Ex commands, @kbd{:map} and @kbd{:map!}.  These macros are much more powerful in Viper than they are in the original Vi and in other emulators.  This is because Viper implements an enhanced vi-style interface to the powerful Emacs keyboard macro facility."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2754
msgid "First, any Emacs command can be executed while defining a macro, not just the Vi commands.  In particular, the user can invoke Emacs commands via @kbd{M-x command-name} or by pressing various function keys on the keyboard.  One can even use the mouse, although this is usually not useful and is not recommended (and macros defined with the use of the mouse cannot be saved in command history and in the startup file, for future use)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2760
msgid "Macros defined by mixing Vi and Emacs commands are represented as vectors.  So, don't be confused when you see one (usually through the history of Ex commands).  For instance, if @kbd{gg} is defined by typing @kbd{l}, the up-arrow key and @kbd{M-x next-line}, its definition will look as follows in Emacs:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2763
#, no-wrap
msgid "[l up (meta x) n e x t - l i n e return]\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2776
msgid "Second, Viper macros are defined in a WYSIWYG style.  This means that commands are executed as you type them, so you can see precisely what is being defined.  Third, macros can be bound to arbitrary sequences of keys, not just to printable keys.  For instance, one can define a macro that will be invoked by hitting @kbd{f3} then @kbd{f2} function keys.  (The keys @kbd{delete} and @kbd{backspace} are excluded; also, a macro invocation sequence can't start with @key{ESC}.  Some other keys, such as @kbd{f1} and @kbd{help}, can't be bound to macros under Emacs, since they are bound in @code{key-translation-map}, which overrides any other binding the user gives to keys.  In general, keys that have a binding in @code{key-translation-map} can't be bound to a macro.)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2784
msgid "Fourth, in Viper, one can define macros that are specific to a given buffer, a given major mode, or macros that are defined for all buffers.  In fact, the same macro name can have several different definitions: one global, several definitions for various major modes, and definitions for various specific buffers.  Buffer-specific definitions override mode-specific definitions, which, in turn, override global definitions."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2791
msgid "As if all that is not enough, Viper (through its interface to Emacs macros) lets the user define keyboard macros that ask for confirmation or even prompt the user for input and then continue.  To do this, one should type @kbd{C-x q} (for confirmation) or @kbd{C-u C-x q} (for prompt).  For details, @pxref{Keyboard Macro Query,,Customization,emacs,The GNU Emacs Manual}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2801
msgid "When the user finishes defining a macro (which is done by typing @kbd{C-x)}, a departure from Vi), you will be asked whether you want this macro to be global, mode-specific, or buffer-specific.  You will also be given a chance to save the macro in your Viper customization file.  This is the easiest way to save a macro and make it permanently available.  If you work your startup files with bare hands, here is how Viper saves the above macro so that it will be available in Viper's Insert state (and Replace state) in buffer @code{my-buf} only:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2806
#, no-wrap
msgid ""
"(viper-record-kbd-macro \"gg\" 'insert-state\n"
"       [l up (meta x) n e x t - l i n e return]\n"
"       \"my-buf\")\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2811
msgid "To do the same for Vi state and all buffers with the major mode @code{cc-mode}, use:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2816
#, no-wrap
msgid ""
"(viper-record-kbd-macro \"gg\" 'vi-state\n"
"       [l up (meta x) n e x t - l i n e return]\n"
"       'cc-mode)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2827
msgid "Both macro names and macro definitions are vectors of symbols that denote keys on the keyboard.  Some keys, like @kbd{\\}, @kbd{ }, or digit-keys must be escaped with a backslash.  Modified keys are represented as lists.  For instance, holding Meta and Control and pressing @kbd{f4} is represented as @kbd{(control meta f4)}.  If all members of a vectors are printable characters (or sequences, such as @kbd{\\e}, @kbd{\\t}, for @key{ESC} and @key{TAB}), then they can also be represented as strings:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2830
#, no-wrap
msgid "(viper-record-kbd-macro \"aa\" 'vi-state  \"aaa\\e\"  \"my-buffer\")\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2836
msgid "Thus, typing @kbd{aa} fast in Vi state will switch Viper to Insert state (due to the first @kbd{a}), insert @kbd{aa}, and then it will switch back to Vi state.  All this will take effect only in the buffer named @code{my-buffer}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2841
msgid "Note that the last argument to @code{viper-record-kbd-macro} must be either a string (a buffer name), a symbol representing a major mode, or @code{t}; the latter says that the macro is to be defined for all buffers (which is how macros are defined in original Vi)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2847
msgid "For convenience, Viper also lets you define Vi-style macros in its Emacs state.  There is no Ex command, like @kbd{:map} and @kbd{:map!} for doing this, but the user can include such a macro in the Viper customization file.  The only thing is that the @code{viper-record-kbd-macro} command should specify @code{emacs-state} instead of @code{vi-state} or @code{insert-state}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2855
msgid "The user can get rid of a macro either by using the Ex commands @kbd{:unmap} and @kbd{:unmap!} or by issuing a call to @code{viper-unrecord-kbd-macro}.  The latter is more powerful, since it can delete macros even in @code{emacs-state}.  However, @code{viper-unrecord-kbd-macro} is usually needed only when the user needs to get rid of the macros that are already predefined in Viper.  The syntax is:"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2855
#, no-wrap
msgid "viper-unrecord-kbd-macro"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2858
#, no-wrap
msgid "(viper-unrecord-kbd-macro macro state)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2865
msgid "The second argument must be @code{vi-state}, @code{insert-state}, or @code{emacs-state}.  The first argument is a name of a macro.  To avoid mistakes in specifying names of existing macros, type @kbd{M-x viper-describe-kbd-macros} and use a name from the list displayed by this command."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2875
msgid "If an error occurs during macro definition, Emacs aborts the process, and it must be repeated.  This is analogous to Vi, except that in Vi the user doesn't know there is an error until the macro is actually run.  All that means that in order for a definition to be successful, the user must do some simple planning of the process in advance, to avoid errors.  For instance, if you want to map @kbd{gg} to @kbd{llll} in Vi state, you must make sure that there is enough room on the current line.  Since @kbd{l} moves the cursor forward, it may signal an error on reaching the end of line, which will abort the definition."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2880
msgid "These precautions are necessary only when defining macros; they will help avoid the need to redo the job.  When macros are actually run, an error during the execution will simply terminate the current execution (but the macro will remain mapped)."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2886
msgid "A macro name can be a string of characters or a vector of keys.  The latter makes it possible to define macros bound to, say, double-hits on a function key, such as @kbd{up} or @kbd{f13}.  This is very useful if you run out of function keys on your keyboard; it makes Viper macro facility a @emph{keyboard doubler}, so to speak."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2890
msgid "Elsewhere (@xref{Key Bindings}, for details), we review the standard Emacs mechanism for binding function keys to commands.  For instance,"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2893
#, no-wrap
msgid "(global-set-key [f13] 'repeat-complex-command)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2903
msgid "binds the key f13 to the Emacs function that repeats the last minibuffer command.  Under Viper, however, you may still use this key for additional purposes, if you bind, say, a double-hitting action for that key to some other function.  Emacs doesn't allow the user to do that, but Viper does this through its keyboard macro facility.  To do this, type @kbd{:map } first.  When you are asked to enter a macro name, hit f13 twice, followed by @key{RET} or @key{SPC}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2912
msgid "Emacs will now start the mapping process by actually executing Vi and Emacs commands, so that you could see what will happen each time the macro is executed.  Suppose now we wanted to bind the key sequence @kbd{f13 f13} to the command @code{eval-last-sexp}.  To accomplish this, we can type @kbd{M-x eval-last-sexp} followed by @kbd{C-x )}.  If you answer positively to Viper's offer to save this macro in your Viper customization file for future uses, the following will be inserted in that file:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2917
#, no-wrap
msgid ""
"(viper-record-kbd-macro [f16 f16] 'vi-state\n"
"         [(meta x) e v a l - l a s t - s e x p]\n"
"         'lisp-interaction-mode)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2925
msgid "To illustrate the above point, Viper provides two canned macros, which, by default, are bound to @kbd{[f12 \\1]} and @kbd{[f12 \\2]} (invoked by typing @kbd{f12} then @kbd{1} and @kbd{2}, respectively).  These macros are useful shortcuts to Viper's command ring history.  The first macro will execute the second-last destructive command (the last one is executed by @kbd{.}, as usual).  The second macro executes the third-last command."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2929
msgid "If you need to go deeper into the command history, you will have to use other commands, as described earlier in this section; or you can bind, say, @kbd{f12 \\3} like this:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:2934
#, no-wrap
msgid ""
"(viper-record-kbd-macro [f12 \\3] 'vi-state\n"
"                      [(meta x) r e p e a t - f r o m - h i s t o r y]\n"
"                      t)\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2940
msgid "Note that even though the macro uses the function key @kbd{f12}, the key is actually free and can still be bound to some Emacs function via @code{define-key} or @code{global-set-key}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2953
msgid "Viper allows the user to define macro names that are prefixes of other macros.  For instance, one can define @kbd{[[} and @kbd{[[[[} to be macros.  If you type the exact sequence of such keys and then pause, Viper will execute the right macro.  However, if you don't pause and, say, type @kbd{[[[[text} then the conflict is resolved as follows.  If only one of the key sequences, @kbd{[[} or @kbd{[[[[} has a definition applicable to the current buffer, then, in fact, there is no conflict and the right macro will be chosen.  If both have applicable definitions, then the first one found will be executed.  Usually this is the macro with a shorter name.  So, in our case, @kbd{[[[[text} will cause the macro @kbd{[[} to be executed twice and then the remaining keys, @kbd{t e x t}, will be processed."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2966
msgid "When defining macros using @kbd{:map} or @kbd{:map!}, the user enters the actually keys to be used to invoke the macro.  For instance, you should hit the actual key @kbd{f6} if it is to be part of a macro name; you do @emph{not} write @kbd{f 6}.  When entering keys, Viper displays them as strings or vectors (e.g., @code{\"abc\"} or @code{[f6 f7 a]}).  The same holds for unmapping.  Hitting @key{TAB} while typing a macro name in the @kbd{:unmap} or @kbd{:unmap!} command will cause name completion.  Completions are displayed as strings or vectors.  However, as before, you don't actually type @samp{\"}, @samp{[}, or @samp{]} that appear in the completions.  These are meta-symbols that indicate whether the corresponding macro name is a vector or a string."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2975
msgid "One last difference from Vi: Vi-style keyboard macros cannot be defined in terms of other Vi-style keyboard macros (but named Emacs macros are OK).  More precisely, while defining or executing a macro, the special meaning of key sequences (as Vi macros) is ignored.  This is because it is all too easy to create an infinite loop in this way.  Since Viper macros are much more powerful than Vi's it is impossible to detect such loops.  In practice, this is not really a limitation but, rather, a feature."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2978
msgid "We should also note that Vi macros are disabled in the minibuffer, which helps keep some potential troubles away."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2982
msgid "The rate at which the user must type keys in order for them to be recognized as a timeout macro is controlled by the variable @code{viper-fast-keyseq-timeout}, which defaults to 200 milliseconds."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2994
msgid "For the most part, Viper macros defined in the Viper customization file can be shared between X and TTY modes.  The problem with TTY may be that the function keys there generate sequences of events instead of a single event (as under a window system).  Emacs maps some of these sequences back to the logical keys (e.g., the sequences generated by the arrow keys are mapped to @kbd{up}, @kbd{left}, etc.).  However, not all function keys are mapped in this way.  Macros that are bound to key sequences that contain such unmapped function keys have to be redefined for TTY's (and possibly for every type of TTY you may be using).  To do this, start Emacs on an appropriate TTY device and define the macro using @kbd{:map}, as usual."
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:2995
#, no-wrap
msgid "viper-describe-kbd-macros"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:2999
msgid "Finally, Viper provides a function that conveniently displays all macros currently defined.  To see all macros along with their definitions, type @kbd{M-x viper-describe-kbd-macros}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3006
msgid "This section is a semi-automatically bowdlerized version of the Vi reference created by @* @samp{maart@@cs.vu.nl} and others.  It can be found on the Vi archives.  This reference has been adapted for Viper."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:3017
#: ../../../../../doc/misc/viper.texi:3019
#: ../../../../../doc/misc/viper.texi:3020
#, no-wrap
msgid "Groundwork"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3017
msgid "Textual Conventions and Viper basics"
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:3017
#: ../../../../../doc/misc/viper.texi:3230
#: ../../../../../doc/misc/viper.texi:3231
#, no-wrap
msgid "Text Handling"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3017
msgid "Moving, Editing, Undoing."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:3017
#: ../../../../../doc/misc/viper.texi:3909
#: ../../../../../doc/misc/viper.texi:3910
#, no-wrap
msgid "Display"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3017
msgid "Scrolling."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:3017
#: ../../../../../doc/misc/viper.texi:3968
#: ../../../../../doc/misc/viper.texi:3969
#, no-wrap
msgid "File and Buffer Handling"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3017
msgid "Editing, Writing and Quitting."
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:3017
#: ../../../../../doc/misc/viper.texi:4120
#: ../../../../../doc/misc/viper.texi:4121
#, no-wrap
msgid "Mapping"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3017
msgid "Mapping Keys, Keyboard Macros"
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:3017
#: ../../../../../doc/misc/viper.texi:4187
#: ../../../../../doc/misc/viper.texi:4188
#, no-wrap
msgid "Shell Commands"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3017
msgid "Accessing Shell Commands, Processing Text"
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:3017
#: ../../../../../doc/misc/viper.texi:4253
#: ../../../../../doc/misc/viper.texi:4254
#, no-wrap
msgid "Options"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3017
msgid "Ex options, the @kbd{:set} commands"
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:3017
#: ../../../../../doc/misc/viper.texi:4374
#: ../../../../../doc/misc/viper.texi:4375
#, no-wrap
msgid "Emacs Related Commands"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3017
msgid "Meta Keys, Windows"
msgstr ""

#. type: section
#: ../../../../../doc/misc/viper.texi:3017
#: ../../../../../doc/misc/viper.texi:4424
#: ../../../../../doc/misc/viper.texi:4425
#, no-wrap
msgid "Mouse-bound Commands"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3017
msgid "Search and insertion of text"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3027
msgid "The VI command set is based on the idea of combining motion commands with other commands.  The motion command is used as a text region specifier for other commands.  We classify motion commands into @dfn{point commands} and @dfn{line commands}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3051
msgid "Text Deletion Commands (@pxref{Deleting Text}), Change commands (@pxref{Changing Text}), even Shell Commands (@pxref{Shell Commands})  use these commands to describe a region of text to operate on."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3056
msgid "Viper adds two region descriptors, @kbd{r} and @kbd{R}.  These describe the Emacs regions (@pxref{Basics}), but they are not movement commands."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3062
msgid "The command description uses angle brackets @samp{<>} to indicate metasyntactic variables, since the normal conventions of using simple text can be confusing with Viper where the commands themselves are characters.  Watch out where @kbd{<} shift commands and @kbd{<count>} are mentioned together!!!"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3063
#: ../../../../../doc/misc/viper.texi:3066
#, no-wrap
msgid "<move>"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3064
#: ../../../../../doc/misc/viper.texi:3067
#, no-wrap
msgid "<a-z>"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3065
#: ../../../../../doc/misc/viper.texi:3068
#, no-wrap
msgid "<address>"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3069
#, no-wrap
msgid "movements"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3075
msgid "@samp{<move>} refers to the above movement commands, and @samp{<a-z>} refers to registers or textmarkers from @samp{a} to @samp{z}.  Note that the @samp{<move>} is described by full move commands, that is to say they will take counts, and otherwise behave like normal move commands."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3075
#, no-wrap
msgid "Ex addresses"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3077
msgid "@samp{<address>} refers to Ex line addresses, which include"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3079
#, no-wrap
msgid ".@: <No address>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3081
msgid "Current line"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3081
#, no-wrap
msgid ".+n .-n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3083
msgid "Add or subtract for current line"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3083
#, no-wrap
msgid "number"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3085
msgid "Actual line number, use @kbd{.=} to get the line number"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3085
#: ../../../../../doc/misc/viper.texi:3332
#: ../../../../../doc/misc/viper.texi:3398
#: ../../../../../doc/misc/viper.texi:3476
#: ../../../../../doc/misc/viper.texi:3492
#, no-wrap
msgid "'<a-z>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3087
msgid "Textmarker"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3087
#: ../../../../../doc/misc/viper.texi:3430
#, no-wrap
msgid "$"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3089
msgid "Last line"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3089
#, no-wrap
msgid "x,y"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3091
msgid "Where x and y are one of the above"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3091
#: ../../../../../doc/misc/viper.texi:3367
#: ../../../../../doc/misc/viper.texi:3386
#: ../../../../../doc/misc/viper.texi:3784
#: ../../../../../doc/misc/viper.texi:3829
#, no-wrap
msgid "%"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3092
#, no-wrap
msgid "% (Ex address)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3094
msgid "For the whole file, same as (1,$)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3094
#, no-wrap
msgid "/<pat>/"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:3095
#, no-wrap
msgid "?<pat>?"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3097
msgid "Next or previous line with pattern <pat>."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3101
msgid "Note that the pattern is allowed to contain newline character (inserted as @kbd{C-qC-j}).  Therefore, one can search for patterns that span several lines."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3103
#: ../../../../../doc/misc/viper.texi:4190
#, no-wrap
msgid "% (Current file)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3109
msgid "Note that @samp{%} is used in Ex commands @kbd{:e} and @kbd{:r <shell-cmd>} to mean current file.  If you want a @samp{%} in your command, it must be escaped as @samp{\\%}. Note that @kbd{:w} and the regular @kbd{:r <file>} command doesn't support the meta symbols @samp{%} and @samp{#}, because file history is a better mechanism."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3109
#, no-wrap
msgid "# (Previous file)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3113
msgid "Similarly, @samp{#} expands to the previous file.  The previous file is the first file in @kbd{:args} listing.  This defaults to previous window in the VI sense if you have one window only."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3114
#: ../../../../../doc/misc/viper.texi:3116
#, no-wrap
msgid "<args>"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3115
#: ../../../../../doc/misc/viper.texi:3117
#, no-wrap
msgid "<cmd>"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3121
msgid "Others like @samp{<args> -- arguments}, @samp{<cmd> -- command} etc.  should be fairly obvious."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3124
msgid "Common characters referred to include:"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3126
#: ../../../../../doc/misc/viper.texi:3141
#, no-wrap
msgid "<sp>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3128
msgid "Space"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3128
#: ../../../../../doc/misc/viper.texi:3140
#, no-wrap
msgid "<ht>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3130
msgid "Tab"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3130
#: ../../../../../doc/misc/viper.texi:3139
#, no-wrap
msgid "<lf>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3132
msgid "Linefeed"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3132
#: ../../../../../doc/misc/viper.texi:3138
#, no-wrap
msgid "<esc>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3134
msgid "Escape"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3134
#: ../../../../../doc/misc/viper.texi:3137
#, no-wrap
msgid "<cr>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3136
msgid "Return, Enter"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3143
#, no-wrap
msgid "words"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3144
#, no-wrap
msgid "WORDS"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3145
#, no-wrap
msgid "char"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3146
#, no-wrap
msgid "CHAR"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3154
msgid "We also use @samp{word} for alphanumeric/non-alphanumeric words, and @samp{WORD} for whitespace delimited words.  @samp{char} refers to any @acronym{ASCII} character, @samp{CHAR} to non-whitespace character.  Brackets @samp{[]} indicate optional parameters; @samp{<count>} also optional, usually defaulting to 1.  Brackets are elided for @samp{<count>} to eschew obfuscation."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3160
msgid "Viper's idea of Vi's words is slightly different from Vi.  First, Viper words understand Emacs symbol tables.  Therefore, all symbols declared to be alphanumeric in a symbol table can automatically be made part of the Viper word.  This is useful when, for instance, editing text containing European, Cyrillic, Japanese, etc., texts."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3165
msgid "Second, Viper lets you depart from Vi's idea of a word by changing the a syntax preference via the customization widget (the variable @code{viper-syntax-preference}) or by executing @code{viper-set-syntax-preference} interactively."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3176
msgid "By default, Viper syntax preference is @code{reformed-vi}, which means that Viper considers only those symbols to be part of a word that are specified as word-symbols by the current Emacs syntax table (which may be different for different major modes) plus the underscore symbol @kbd{_}, minus the symbols that are not considered words in Vi (e.g., @samp{,}, @samp{;}, etc.), but may be considered as word-symbols by various Emacs major modes.  Reformed-Vi works very close to Vi, and it also recognizes words in other alphabets.  Therefore, this is the most appropriate mode for editing text and is likely to fit all your needs."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3179
msgid "You can also set Viper syntax preference to @code{strict-vi}, which would cause Viper to view all non-English letters as non-word-symbols."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3183
msgid "You can also specify @code{emacs} as your preference, which would make Viper use exactly the same notion of a word as Emacs does.  In particular, the underscore may not be part of a word in some major modes."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3187
msgid "Finally, if @code{viper-syntax-preference} is set to @code{extended}, Viper words would consist of characters that are classified as alphanumeric @emph{or} as parts of symbols.  This is convenient for editing programs."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3195
msgid "@code{viper-syntax-preference} is a local variable, so it can have different values for different major modes.  For instance, in programming modes it can have the value @code{extended}.  In text modes where words contain special characters, such as European (non-English) letters, Cyrillic letters, etc., the value can be @code{reformed-vi} or @code{emacs}.  If you consider using different syntactic preferences for different major modes, you should execute, for example,"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:3198
#, no-wrap
msgid "(viper-set-syntax-preference nil \"extended\")\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3201
msgid "in the appropriate major mode hooks."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3215
msgid "The above discussion concerns only the movement commands.  In regular expressions, words remain the same as in Emacs.  That is, the expressions @code{\\w}, @code{\\>}, @code{\\<}, etc., use Emacs's idea of what is a word, and they don't look into the value of variable @code{viper-syntax-preference}.  This is because Viper avoids changing syntax tables in order to not thwart the various major modes that set these tables."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3221
msgid "The usual Emacs convention is used to indicate Control Characters, i.e., C-h for Control-h.  @emph{Do not confuse this with a sequence of separate characters C, -, h!!!} The @kbd{^} is itself, never used to indicate a Control character."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3228
msgid "Finally, we note that Viper's Ex-style commands can be made to work on the current Emacs region.  This is done by typing a digit argument before @kbd{:}.  For instance, typing @kbd{1:} will prompt you with something like @emph{:123,135}, assuming that the current region starts at line 123 and ends at line 135.  There is no need to type the line numbers, since Viper inserts them automatically in front of the Ex command."
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:3243
#: ../../../../../doc/misc/viper.texi:3245
#: ../../../../../doc/misc/viper.texi:3246
#, no-wrap
msgid "Move Commands"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3243
msgid "Moving, Searching"
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:3243
#: ../../../../../doc/misc/viper.texi:3442
#: ../../../../../doc/misc/viper.texi:3443
#, no-wrap
msgid "Marking"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3243
msgid "Textmarkers in Viper and the Emacs Mark."
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:3243
#: ../../../../../doc/misc/viper.texi:3494
#: ../../../../../doc/misc/viper.texi:3495
#, no-wrap
msgid "Appending Text"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3243
msgid "Text insertion, Shifting, Putting"
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:3243
#: ../../../../../doc/misc/viper.texi:3576
#: ../../../../../doc/misc/viper.texi:3577
#, no-wrap
msgid "Editing in Insert State"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3243
msgid "Autoindent, Quoting etc."
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:3243
#: ../../../../../doc/misc/viper.texi:3602
#: ../../../../../doc/misc/viper.texi:3603
#, no-wrap
msgid "Deleting Text"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3243
msgid "Deleting"
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:3243
#: ../../../../../doc/misc/viper.texi:3645
#: ../../../../../doc/misc/viper.texi:3646
#, no-wrap
msgid "Changing Text"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3243
msgid "Changing, Replacement, Joining"
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:3243
#: ../../../../../doc/misc/viper.texi:3753
#: ../../../../../doc/misc/viper.texi:3754
#, no-wrap
msgid "Search and Replace"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3243
msgid "Searches, Query Replace, Pattern Commands"
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:3243
#: ../../../../../doc/misc/viper.texi:3836
#: ../../../../../doc/misc/viper.texi:3837
#, no-wrap
msgid "Yanking"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3243
msgid "Yanking, Viewing Registers"
msgstr ""

#. type: subsection
#: ../../../../../doc/misc/viper.texi:3243
#: ../../../../../doc/misc/viper.texi:3883
#: ../../../../../doc/misc/viper.texi:3884
#, no-wrap
msgid "Undoing"
msgstr ""

#. type: menuentry
#: ../../../../../doc/misc/viper.texi:3243
msgid "Multiple Undo, Backups"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3249
#: ../../../../../doc/misc/viper.texi:4337
#, no-wrap
msgid "searching"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3252
#, no-wrap
msgid "column movement"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3257
#: ../../../../../doc/misc/viper.texi:4310
#, no-wrap
msgid "matching parens"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3258
#: ../../../../../doc/misc/viper.texi:4309
#, no-wrap
msgid "paren matching"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3261
#, no-wrap
msgid "<count>  h  C-h"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3263
msgid "<count> chars to the left."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3263
#, no-wrap
msgid "<count>  j  <lf> C-n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3265
msgid "<count> lines downward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3265
#, no-wrap
msgid "<count>  l  <sp>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3267
msgid "<count> chars to the right."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3267
#, no-wrap
msgid "<count>  k  C-p"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3269
msgid "<count> lines upward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3269
#, no-wrap
msgid "<count>  $"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3271
msgid "To the end of line <count> from the cursor."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3271
#, no-wrap
msgid "<count>  ^"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3273
msgid "To the first CHAR <count> @minus{} 1 lines lower."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3273
#, no-wrap
msgid "<count>  -"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3275
msgid "To the first CHAR <count> lines higher."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3275
#, no-wrap
msgid "<count>  +  <cr>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3277
msgid "To the first CHAR <count> lines lower."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3277
#: ../../../../../doc/misc/viper.texi:3425
#, no-wrap
msgid "0"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3279
msgid "To the first char of the line."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3279
#, no-wrap
msgid "<count> |"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3281
msgid "To column <count>"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3281
#, no-wrap
msgid "<count>  f<char>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3283
msgid "<count> <char>s to the right (find)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3283
#, no-wrap
msgid "<count>  t<char>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3285
msgid "Till before <count> <char>s to the right."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3285
#, no-wrap
msgid "<count>  F<char>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3287
msgid "<count> <char>s to the left."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3287
#, no-wrap
msgid "<count>  T<char>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3289
msgid "Till after <count> <char>s to the left."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3289
#, no-wrap
msgid "<count>  ;"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3291
msgid "Repeat latest @kbd{f t F T} <count> times."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3291
#, no-wrap
msgid "<count>  ,"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3294
msgid "Repeat latest @kbd{f t F T} <count> times in opposite direction."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3294
#, no-wrap
msgid "<count>  w"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3296
msgid "<count> words forward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3296
#, no-wrap
msgid "<count>  W"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3298
msgid "<count> WORDS forward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3298
#, no-wrap
msgid "<count>  b"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3300
msgid "<count> words backward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3300
#, no-wrap
msgid "<count>  B"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3302
msgid "<count> WORDS backward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3302
#, no-wrap
msgid "<count>  e"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3304
msgid "To the end of word <count> forward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3304
#, no-wrap
msgid "<count>  E"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3306
msgid "To the end of WORD <count> forward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3306
#, no-wrap
msgid "<count>  G"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3308
msgid "Go to line <count> (default end-of-file)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3308
#, no-wrap
msgid "<count>  H"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3310
msgid "To line <count> from top of the screen (home)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3310
#, no-wrap
msgid "<count>  L"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3312
msgid "To line <count> from bottom of the screen (last)."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3312
#: ../../../../../doc/misc/viper.texi:3408
#, no-wrap
msgid "M"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3314
msgid "To the middle line of the screen."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3314
#, no-wrap
msgid "<count>  )"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3316
msgid "<count> sentences forward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3316
#, no-wrap
msgid "<count>  ("
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3318
msgid "<count> sentences backward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3318
#, no-wrap
msgid "<count>  @}"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3320
msgid "<count> paragraphs forward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3320
#, no-wrap
msgid "<count>  @{"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3322
msgid "<count> paragraphs backward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3322
#, no-wrap
msgid "<count>  ]]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3324
msgid "To the <count>th heading."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3324
#, no-wrap
msgid "<count>  [["
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3326
msgid "To the <count>th previous heading."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3326
#, no-wrap
msgid "<count>  []"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3328
msgid "To the end of <count>th heading."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3328
#: ../../../../../doc/misc/viper.texi:3400
#: ../../../../../doc/misc/viper.texi:3453
#: ../../../../../doc/misc/viper.texi:3481
#: ../../../../../doc/misc/viper.texi:3854
#: ../../../../../doc/misc/viper.texi:3874
#, no-wrap
msgid "m<a-z>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3330
#: ../../../../../doc/misc/viper.texi:3856
msgid "Mark the cursor position with a letter."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3330
#: ../../../../../doc/misc/viper.texi:3399
#: ../../../../../doc/misc/viper.texi:3478
#: ../../../../../doc/misc/viper.texi:3491
#, no-wrap
msgid "`<a-z>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3332
msgid "To the mark."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3334
msgid "To the first CHAR of the line with the mark."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3336
#: ../../../../../doc/misc/viper.texi:3536
#: ../../../../../doc/misc/viper.texi:3858
#: ../../../../../doc/misc/viper.texi:4171
msgid "Show contents of textmarker."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3338
#: ../../../../../doc/misc/viper.texi:3538
#: ../../../../../doc/misc/viper.texi:3860
#: ../../../../../doc/misc/viper.texi:4173
msgid "Show contents of register."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3338
#: ../../../../../doc/misc/viper.texi:3395
#: ../../../../../doc/misc/viper.texi:3472
#: ../../../../../doc/misc/viper.texi:3490
#, no-wrap
msgid "``"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3341
msgid "To the cursor position before the latest absolute jump (of which are examples @kbd{/} and @kbd{G})."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3341
#: ../../../../../doc/misc/viper.texi:3394
#: ../../../../../doc/misc/viper.texi:3474
#: ../../../../../doc/misc/viper.texi:3489
#, no-wrap
msgid "''"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3344
msgid "To the first CHAR of the line on which the cursor was placed before the latest absolute jump."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3344
#: ../../../../../doc/misc/viper.texi:3764
#, no-wrap
msgid "<count>  /<string>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3346
#: ../../../../../doc/misc/viper.texi:3766
msgid "To the <count>th occurrence of <string>."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3346
#, no-wrap
msgid "<count>  /<cr>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3348
msgid "To the <count>th occurrence of <string> from previous @kbd{/ or ?}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3348
#: ../../../../../doc/misc/viper.texi:3776
#, no-wrap
msgid "<count>  ?<string>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3350
#: ../../../../../doc/misc/viper.texi:3778
msgid "To the <count>th previous occurrence of <string>."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3350
#, no-wrap
msgid "<count>  ?<cr>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3352
msgid "To the <count>th previous occurrence of <string> from previous @kbd{?@: or /}."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3352
#: ../../../../../doc/misc/viper.texi:3389
#: ../../../../../doc/misc/viper.texi:3780
#: ../../../../../doc/misc/viper.texi:3831
#, no-wrap
msgid "n"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3354
#: ../../../../../doc/misc/viper.texi:3782
msgid "Repeat latest @kbd{/} @kbd{?} (next)."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3354
#: ../../../../../doc/misc/viper.texi:3388
#: ../../../../../doc/misc/viper.texi:3782
#: ../../../../../doc/misc/viper.texi:3830
#, no-wrap
msgid "N"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3356
msgid "Repeat latest search in opposite direction."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3374
msgid "Find the next bracket/parenthesis/brace and go to its match.  By default, Viper ignores brackets/parentheses/braces that occur inside parentheses.  You can change this by setting @code{viper-parse-sexp-ignore-comments} to @code{nil} in your Viper customization file.  This option can also be toggled interactively if you quickly hit @kbd{%%%}."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3377
msgid "This latter feature is implemented as a vi-style keyboard macro.  If you don't want this macro, put"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:3380
#, no-wrap
msgid "(viper-set-parsing-style-toggling-macro 'undefine)\n"
msgstr ""

#. type: findex
#: ../../../../../doc/misc/viper.texi:3381
#, no-wrap
msgid "viper-set-parsing-style-toggling-macro"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3384
msgid "in your Viper customization file."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3390
#, no-wrap
msgid "?<cr>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3391
#, no-wrap
msgid "/<cr>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3392
#: ../../../../../doc/misc/viper.texi:3833
#, no-wrap
msgid "?<string>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3393
#: ../../../../../doc/misc/viper.texi:3834
#, no-wrap
msgid "/<string>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3402
#, no-wrap
msgid "[["
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3403
#, no-wrap
msgid "]]"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3404
#, no-wrap
msgid "@{"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3405
#, no-wrap
msgid "@}"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3406
#, no-wrap
msgid "("
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3407
#, no-wrap
msgid ")"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3409
#, no-wrap
msgid "L"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3410
#, no-wrap
msgid "H"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3411
#, no-wrap
msgid "G"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3412
#, no-wrap
msgid "E"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3413
#, no-wrap
msgid "e"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3414
#, no-wrap
msgid "B"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3415
#, no-wrap
msgid "b"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3416
#, no-wrap
msgid "W"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3417
#, no-wrap
msgid "w"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3418
#, no-wrap
msgid ","
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3419
#, no-wrap
msgid ";"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3420
#, no-wrap
msgid "T<char>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3421
#, no-wrap
msgid "F<char>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3422
#, no-wrap
msgid "t<char>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3423
#, no-wrap
msgid "f<char>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3424
#, no-wrap
msgid "|"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3426
#, no-wrap
msgid "CR"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3427
#, no-wrap
msgid "+"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3428
#, no-wrap
msgid "-"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3429
#, no-wrap
msgid "^"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3431
#, no-wrap
msgid "C-p"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3432
#, no-wrap
msgid "LF"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3433
#, no-wrap
msgid "SPC"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3434
#, no-wrap
msgid "C-n"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3436
#, no-wrap
msgid "h"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3437
#, no-wrap
msgid "j"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3438
#, no-wrap
msgid "k"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3439
#, no-wrap
msgid "l"
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:3440
#, no-wrap
msgid "viper-parse-sexp-ignore-comments"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3449
msgid "Emacs mark is referred to in the region specifiers @kbd{r} and @kbd{R}.  @xref{Emacs Preliminaries}, and @xref{Basics}, for explanation.  Also see @ref{Mark,,Mark,emacs,The GNU Emacs manual}, for an explanation of the Emacs mark ring."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3450
#, no-wrap
msgid "marking"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3455
msgid "Mark the current file and position with the specified letter."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3457
msgid "Set the Emacs mark (@pxref{Emacs Preliminaries}) at point."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3457
#, no-wrap
msgid "m ^"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3462
msgid "Set the Emacs mark (@pxref{Emacs Preliminaries}) back to where it was last set with the @kbd{m.} command. This is useful when you set the mark with @kbd{m.}, but then some other command (such as @kbd{L} or @kbd{G}) changes it in a way that you didn't like."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3462
#, no-wrap
msgid "m <"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3464
msgid "Set the Emacs mark at beginning of buffer."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3464
#, no-wrap
msgid "m >"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3466
msgid "Set the Emacs mark at end of buffer."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3466
#, no-wrap
msgid "m ,"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3468
msgid "Jump to the Emacs mark."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3468
#, no-wrap
msgid ":mark <char>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3470
msgid "Mark position with text marker named <char>.  This is an Ex command."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3470
#, no-wrap
msgid ":k <char>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3472
msgid "Same as @kbd{:mark}."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3474
msgid "Exchange point and mark."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3476
msgid "Exchange point and mark and go to the first CHAR on line."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3478
msgid "Go to specified Viper mark."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3480
msgid "Go to specified Viper mark and go to the first CHAR on line."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3482
#, no-wrap
msgid "m."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3486
#, no-wrap
msgid "m^"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3487
#, no-wrap
msgid "Ex mark"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3488
#, no-wrap
msgid "Ex k"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3501
msgid "@xref{Options}, to see how to change tab and shiftwidth size.  See the GNU Emacs manual, or try @kbd{C-ha tabs} (If you have turned Emacs help on).  Check out the variable @code{indent-tabs-mode} to put in just spaces.  Also see options for word-wrap."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3502
#, no-wrap
msgid "inserting"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3503
#, no-wrap
msgid "appending"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3504
#: ../../../../../doc/misc/viper.texi:3840
#, no-wrap
msgid "paste"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3505
#, no-wrap
msgid "put"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3508
#, no-wrap
msgid "<count>  a"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3510
msgid "<count> times after the cursor."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3510
#, no-wrap
msgid "<count>  A"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3512
msgid "<count> times at the end of line."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3512
#, no-wrap
msgid "<count>  i"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3514
msgid "<count> times before the cursor (insert)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3514
#, no-wrap
msgid "<count>  I"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3516
msgid "<count> times before the first CHAR of the line"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3516
#, no-wrap
msgid "<count>  o"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3519
msgid "On a new line below the current (open).  The count is only useful on a slow terminal."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3519
#, no-wrap
msgid "<count>  O"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3522
msgid "On a new line above the current.  The count is only useful on a slow terminal."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3522
#, no-wrap
msgid "<count>  ><move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3525
msgid "Shift the lines described by <count><move> one shiftwidth to the right (layout!)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3525
#, no-wrap
msgid "<count>  >>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3527
msgid "Shift <count> lines one shiftwidth to the right."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3527
#: ../../../../../doc/misc/viper.texi:3860
#, no-wrap
msgid "<count>  [\"<a-z1-9>]p"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3531
#: ../../../../../doc/misc/viper.texi:3864
msgid "Put the contents of the (default undo) buffer <count> times after the cursor.  The register will be automatically down-cased."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3531
#: ../../../../../doc/misc/viper.texi:3864
#, no-wrap
msgid "<count>  [\"<a-z1-9>]P"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3534
#: ../../../../../doc/misc/viper.texi:3867
msgid "Put the contents of the (default undo) buffer <count> times before the cursor.  The register will"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3538
#, no-wrap
msgid "<count>  ."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3541
msgid "Repeat previous command <count> times.  For destructive commands as well as undo."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3541
#, no-wrap
msgid "f1 1 and f1 2"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3545
msgid "While @kbd{.} repeats the last destructive command, these two macros repeat the second-last and the third-last destructive commands.  @xref{Vi Macros}, for more information on Vi macros."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3554
msgid "In Vi state, these commands help peruse the history of Vi's destructive commands.  Successive typing of @kbd{C-c M-p} causes Viper to search the history in the direction of older commands, while hitting @kbd{C-c M-n} does so in reverse order.  Each command in the history is displayed in the minibuffer.  The displayed command can then be executed by typing a period."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3558
msgid "Since typing the above sequences of keys may be tedious, the functions doing the perusing can be bound to unused keyboard keys in the Viper customization file.  @xref{Viper Specials}, for details."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3561
#: ../../../../../doc/misc/viper.texi:3892
#: ../../../../../doc/misc/viper.texi:3905
#, no-wrap
msgid "."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3564
#: ../../../../../doc/misc/viper.texi:3868
#, no-wrap
msgid "P"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3565
#: ../../../../../doc/misc/viper.texi:3869
#, no-wrap
msgid "p"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3566
#: ../../../../../doc/misc/viper.texi:3870
#, no-wrap
msgid "\"<a-z1-9>p"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3567
#: ../../../../../doc/misc/viper.texi:3871
#, no-wrap
msgid "\"<a-z1-9>P"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3568
#, no-wrap
msgid ">>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3569
#, no-wrap
msgid "><move>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3570
#, no-wrap
msgid "O"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3571
#, no-wrap
msgid "o"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3573
#, no-wrap
msgid "A"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3574
#, no-wrap
msgid "a"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3583
msgid "Minibuffer can be edited similarly to Insert state, and you can switch between Insert/Replace/Vi states at will.  Some users prefer plain Emacs feel in the minibuffer.  To this end, set @code{viper-vi-style-in-minibuffer} to @code{nil}."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3589
msgid "Deprive the next char of its special meaning (quoting)."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3591
msgid "One char back."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3593
msgid "One word back."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3596
msgid "Back to the begin of the change on the current line."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3618
#: ../../../../../doc/misc/viper.texi:4305
#, no-wrap
msgid "shifting text"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3621
#, no-wrap
msgid "<count>  x"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3623
msgid "Delete <count> chars under and after the cursor."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3623
#, no-wrap
msgid "<count>  X"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3625
msgid "Delete <count> chars before the cursor."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3625
#, no-wrap
msgid "<count>  d<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3627
msgid "Delete from point to endpoint of <count><move>."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3627
#, no-wrap
msgid "<count>  dd"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3629
msgid "Delete <count> lines."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3629
#: ../../../../../doc/misc/viper.texi:3639
#, no-wrap
msgid "D"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3631
msgid "The rest of the line."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3631
#, no-wrap
msgid "<count>  <<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3634
msgid "Shift the lines described by <count><move> one shiftwidth to the left (layout!)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3634
#, no-wrap
msgid "<count>  <<"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3636
msgid "Shift <count> lines one shiftwidth to the left."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3637
#, no-wrap
msgid "<<"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3638
#, no-wrap
msgid "<<move>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3640
#, no-wrap
msgid "dd"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3641
#, no-wrap
msgid "d<move>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3642
#, no-wrap
msgid "X"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3643
#, no-wrap
msgid "x"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3648
#, no-wrap
msgid "joining lines"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3650
#, no-wrap
msgid "quoting regions"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3651
#, no-wrap
msgid "substitution"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3654
#, no-wrap
msgid "<count>  r<char>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3656
msgid "Replace <count> chars by <char>; no <esc>."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3656
#, no-wrap
msgid "<count>  R"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3659
msgid "Overwrite the rest of the line, appending change @var{count} @minus{} 1 times."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3659
#, no-wrap
msgid "<count>  s"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3661
msgid "Substitute <count> chars."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3661
#, no-wrap
msgid "<count>  S"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3663
#: ../../../../../doc/misc/viper.texi:3667
msgid "Change <count> lines."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3663
#, no-wrap
msgid "<count>  c<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3665
msgid "Change from begin to endpoint of <count><move>."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3665
#, no-wrap
msgid "<count>  cc"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3667
#, no-wrap
msgid "<count>  C"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3669
msgid "The rest of the line and <count> @minus{} 1 next lines."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3669
#, no-wrap
msgid "<count>  =<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3671
msgid "Reindent the region described by move."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3671
#, no-wrap
msgid "<count>  ~"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3673
msgid "Switch lower and upper cases."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3673
#, no-wrap
msgid "<count>  J"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3675
msgid "Join <count> lines (default 2)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3675
#: ../../../../../doc/misc/viper.texi:3799
#, no-wrap
msgid ":[x,y]s/<pat>/<repl>/<f>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3684
msgid "Substitute (on lines x through y) the pattern <pat> (default the last pattern) with <repl>.  Useful flags <f> are @samp{g} for @samp{global} (i.e., change every non-overlapping occurrence of <pat>) and @samp{c} for @samp{confirm} (type @samp{y} to confirm a particular substitution, else @samp{n} ).  Instead of @kbd{/} any punctuation CHAR unequal to <space> <tab> and <lf> can be used as delimiter."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3688
msgid "In Emacs, @samp{\\&} stands for the last matched expression, so @kbd{s/[ab]+/\\&\\&/} will double the string matched by @kbd{[ab]}.  Viper doesn't treat @samp{&} specially, unlike Vi: use @samp{\\&} instead."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3692
#: ../../../../../doc/misc/viper.texi:3770
msgid "Viper does not parse search patterns and does not expand special symbols found there (e.g., @samp{~} is not expanded to the result of the previous substitution)."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3695
#: ../../../../../doc/misc/viper.texi:3811
msgid "Note: @emph{The newline character (inserted as @kbd{C-qC-j})  can be used in <repl>}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3695
#, no-wrap
msgid ":[x,y]copy [z]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3697
msgid "Copy text between @kbd{x} and @kbd{y} to the position after @kbd{z}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3697
#, no-wrap
msgid ":[x,y]t [z]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3699
msgid "Same as @kbd{:copy}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3699
#, no-wrap
msgid ":[x,y]move [z]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3701
msgid "Move text between @kbd{x} and @kbd{y} to the position after @kbd{z}."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3701
#: ../../../../../doc/misc/viper.texi:3735
#: ../../../../../doc/misc/viper.texi:3811
#: ../../../../../doc/misc/viper.texi:3820
#, no-wrap
msgid "&"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3704
#: ../../../../../doc/misc/viper.texi:3813
msgid "Repeat latest Ex substitute command, e.g., @kbd{:s/wrong/right}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3704
#, no-wrap
msgid ":x,yp"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:3705
#, no-wrap
msgid ":g/Pat/p"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:3706
#, no-wrap
msgid ":v/Pat/p"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3712
msgid "The above commands display certain buffer lines in a temporary buffer. The first form above displays the buffer lines between @kbd{x} and @kbd{y}. The second displays the lines of the buffer, which match a given pattern. The third form displays the lines that do @emph{not} match the given pattern."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3714
msgid "Change upper-case characters in the region to lower-case."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3716
msgid "Change lower-case characters in the region to upper-case."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3718
msgid "Insert specified string at the beginning of each line in the region"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3725
msgid "In Insert and Replace states, these keys are bound to commands that peruse the history of the text previously inserted in other insert or replace commands.  By repeatedly typing @kbd{C-c M-p} or @kbd{C-c M-n}, you will cause Viper to insert these previously used strings one by one.  When a new string is inserted, the previous one is deleted."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3729
msgid "In Vi state, these keys are bound to functions that peruse the history of destructive Vi commands.  @xref{Viper Specials}, for details."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3736
#, no-wrap
msgid "\\&"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3737
#: ../../../../../doc/misc/viper.texi:3821
#, no-wrap
msgid "Ex substitute/<pat>/<repl>/<f>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3738
#, no-wrap
msgid "Ex s/<pat>/<repl>/<f>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3739
#, no-wrap
msgid "Ex copy [z]"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3740
#, no-wrap
msgid "Ex t [z]"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3741
#, no-wrap
msgid "Ex move [z]"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3742
#, no-wrap
msgid "J"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3743
#, no-wrap
msgid "~"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3744
#, no-wrap
msgid "=<move>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3745
#, no-wrap
msgid "C"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3746
#, no-wrap
msgid "cc"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3747
#, no-wrap
msgid "c<move>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3748
#, no-wrap
msgid "S"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3749
#, no-wrap
msgid "s"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3750
#, no-wrap
msgid "R"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3751
#, no-wrap
msgid "r<char>"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3759
msgid "@xref{Groundwork}, for Ex address syntax.  @xref{Options}, to see how to get literal (non-regular-expression) search and how to stop search from wrapping around."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3764
msgid "Toggle case-sensitive search.  With prefix argument, toggle vanilla/regular expression search."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3775
msgid "After typing @kbd{/} or @kbd{?} all the usual Emacs minibuffer commands, such as @kbd{M-p} and @kbd{M-n} are available. In addition, typing @kbd{C-s} will insert the last search string used by the Emacs incremental search command (which is bound to @kbd{C-s} everywhere except in this case)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3778
#, no-wrap
msgid "<count>  g<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3780
msgid "Search for the text described by move.  (off by default)"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3784
msgid "Idem in opposite direction."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3786
msgid "Find the next bracket and go to its match"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3786
#, no-wrap
msgid ":[x,y]g/<string>/<cmd>"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3787
#, no-wrap
msgid "text processing"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3790
msgid "Search globally [from line x to y] for <string> and execute the Ex <cmd> on each occurrence."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3790
#, no-wrap
msgid ":[x,y]v/<string>/<cmd>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3792
msgid "Execute <cmd> on the lines that don't match."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3795
#: ../../../../../doc/misc/viper.texi:4169
msgid "Execute the last keyboard macro for each line in the region.  @xref{Macros and Registers}, for more info."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3797
msgid "Query Replace."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3797
#, no-wrap
msgid ":ta <name>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3799
msgid "Search in the tags file where <name> is defined (file, line), and go to it."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3808
msgid "Substitute (on lines x through y) the pattern <pat> (default the last pattern) with <repl>.  Useful flags <f> are @samp{g} for @samp{global} (i.e., change every non-overlapping occurrence of <pat>) and @samp{c} for @samp{confirm} (type @samp{y} to confirm a particular substitution, else @samp{n}).  Instead of @kbd{/} any punctuation character other than <space> <tab> and <lf> can be used as delimiter."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3813
#, no-wrap
msgid ":global /<pattern>/<ex-command>"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:3814
#, no-wrap
msgid ":g /<pattern>/<ex-command>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3816
msgid "Execute <ex-command> on all lines that match <pattern>."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3816
#, no-wrap
msgid ":vglobal /<pattern>/<ex-command>"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:3817
#, no-wrap
msgid ":v /<pattern>/<ex-command>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3819
msgid "Execute <ex-command> on all lines that do not match <pattern>."
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3824
#, no-wrap
msgid "Ex v"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3825
#, no-wrap
msgid "Ex g"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3826
#, no-wrap
msgid "Ex global"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3827
#, no-wrap
msgid "Ex vglobal"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3828
#, no-wrap
msgid "Ex tag <name>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3832
#, no-wrap
msgid "g<move>"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3839
#, no-wrap
msgid "cut and paste"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3843
#, no-wrap
msgid "<count>  y<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3845
msgid "Yank from begin to endpoint of <count><move>."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3845
#, no-wrap
msgid "<count>  \"<a-z>y<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3847
msgid "Yank from begin to endpoint of <count><move> to register."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3847
#, no-wrap
msgid "<count>  \"<A-Z>y<move>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3850
msgid "Yank from begin to endpoint of <count><move> and append to register."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3850
#, no-wrap
msgid "<count>  yy"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3852
msgid "<count> lines."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3852
#, no-wrap
msgid "<count>  Y"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3854
msgid "Idem (should be equivalent to @kbd{y$} though)."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3875
#, no-wrap
msgid "Y"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3876
#, no-wrap
msgid "yy"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3877
#, no-wrap
msgid "\"<A-Z>y<move>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3878
#, no-wrap
msgid "\"<a-z>y<move>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3879
#, no-wrap
msgid "y<move>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3880
#, no-wrap
msgid "yank"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3881
#, no-wrap
msgid "Ex yank"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3890
#, no-wrap
msgid "u U"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3892
msgid "Undo the latest change."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3894
msgid "Repeat undo."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3894
#: ../../../../../doc/misc/viper.texi:3985
#: ../../../../../doc/misc/viper.texi:4052
#, no-wrap
msgid ":q!"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3896
#: ../../../../../doc/misc/viper.texi:4054
msgid "Quit Vi without writing."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3896
#, no-wrap
msgid ":e!"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3898
msgid "Re-edit a messed-up file."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3898
#: ../../../../../doc/misc/viper.texi:4031
#, no-wrap
msgid ":rec"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3901
msgid "Recover file from autosave.  Viper also creates backup files that have a @samp{~} appended to them."
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3902
#: ../../../../../doc/misc/viper.texi:4095
#, no-wrap
msgid "Ex rec"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3903
#, no-wrap
msgid "Ex e!"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:3904
#: ../../../../../doc/misc/viper.texi:4090
#, no-wrap
msgid "Ex q!"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3906
#, no-wrap
msgid "U"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:3912
#, no-wrap
msgid "scrolling"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3920
msgid "At user level 1, give file name, status, current line number and relative position.@* At user levels 2 and higher, abort the current command."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3920
#, no-wrap
msgid "C-c g"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3923
msgid "Give file name, status, current line number and relative position---all user levels."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3923
#: ../../../../../doc/misc/viper.texi:3964
#, no-wrap
msgid "C-l"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3925
msgid "Refresh the screen."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3925
#, no-wrap
msgid "<count> C-e"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3927
msgid "Expose <count> more lines at bottom, cursor stays put (if possible)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3927
#, no-wrap
msgid "<count> C-y"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3929
msgid "Expose <count> more lines at top, cursor stays put (if possible)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3929
#, no-wrap
msgid "<count> C-d"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3932
msgid "Scroll <count> lines downward (default the number of the previous scroll; initialization: half a page)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3932
#, no-wrap
msgid "<count> C-u"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3935
msgid "Scroll <count> lines upward (default the number of the previous scroll; initialization: half a page)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3935
#, no-wrap
msgid "<count> C-f"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3937
msgid "<count> pages forward."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3937
#, no-wrap
msgid "<count> C-b"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3939
msgid "<count> pages backward (in older versions @kbd{C-b} only works without count)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3939
#, no-wrap
msgid "<count> z<cr>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3940
#: ../../../../../doc/misc/viper.texi:3953
#, no-wrap
msgid "zH"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3942
msgid "Put line <count> at the top of the window (default the current line)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3942
#, no-wrap
msgid "<count> z-"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3943
#: ../../../../../doc/misc/viper.texi:3952
#, no-wrap
msgid "zL"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3946
msgid "Put line <count> at the bottom of the window (default the current line)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3946
#, no-wrap
msgid "<count> z."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3947
#: ../../../../../doc/misc/viper.texi:3951
#, no-wrap
msgid "zM"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3950
msgid "Put line <count> in the center of the window (default the current line)."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3954
#: ../../../../../doc/misc/viper.texi:3957
#, no-wrap
msgid "z<cr>"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3955
#, no-wrap
msgid "z."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3956
#, no-wrap
msgid "z-"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3958
#, no-wrap
msgid "C-b"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3959
#, no-wrap
msgid "C-f"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3961
#, no-wrap
msgid "C-d"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3962
#: ../../../../../doc/misc/viper.texi:4404
#: ../../../../../doc/misc/viper.texi:4414
#, no-wrap
msgid "C-y"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:3963
#, no-wrap
msgid "C-e"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3976
msgid "In all file handling commands, space should be typed before entering the file name.  If you need to type a modifier, such as @kbd{>>} or @kbd{!}, don't put any space between the command and the modifier."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:3981
msgid "Note that many Ex commands, e.g., @kbd{:w}, accept command arguments. The effect is that the command would start acting on the current region. For instance, if the current region spans the lines 11 through 22, then if you type @kbd{1:w} you would see @samp{:11,22w} in the minibuffer."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3983
#, no-wrap
msgid ":q"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3985
msgid "Quit buffer except if modified."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3989
msgid "Quit buffer without checking.  In Viper, these two commands are identical.  Confirmation is required if exiting modified buffers that visit files."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3989
#, no-wrap
msgid ":suspend"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3990
#, no-wrap
msgid ":stop"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3992
msgid "Suspend Viper"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3992
#, no-wrap
msgid ":[x,y] w"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:3998
msgid "Write the file.  Viper makes sure that a final newline is always added to any file where this newline is missing.  This is done by setting Emacs variable @code{require-final-newline} to @code{t}.  If you don't like this feature, use @code{setq-default} to set @code{require-final-newline} to @code{nil}.  This must be done in the Viper customization file."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:3998
#, no-wrap
msgid ":[x,y] w <name>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4000
msgid "Write to the file <name>."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4000
#, no-wrap
msgid ":[x,y] w>> <name>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4003
msgid "Append the buffer to the file <name>.  There should be no space between @kbd{w} and @kbd{>>}.  Type space after the @kbd{>>} and see what happens."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4003
#, no-wrap
msgid ":w!@: <name>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4007
msgid "Overwrite the file <name>.  In Viper, @kbd{:w} and @kbd{:w!} are identical.  Confirmation is required for writing to an existing file (if this is not the file the buffer is visiting) or to a read-only file."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4007
#, no-wrap
msgid ":x,y w <name>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4009
msgid "Write lines x through y to the file <name>."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4009
#, no-wrap
msgid ":wq"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4011
msgid "Write the file and kill buffer."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4011
#, no-wrap
msgid ":r <file> [<file> ...]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4013
msgid "Read file into a buffer, inserting its contents after the current line."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4013
#, no-wrap
msgid ":xit"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4015
msgid "Same as @kbd{:wq}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4015
#, no-wrap
msgid ":Write"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4016
#, no-wrap
msgid ":W"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4018
msgid "Save all unsaved buffers, asking for confirmation."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4018
#, no-wrap
msgid ":WWrite"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4019
#, no-wrap
msgid ":WW"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4021
msgid "Like @kbd{W}, but without asking for confirmation."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4021
#: ../../../../../doc/misc/viper.texi:4099
#, no-wrap
msgid "ZZ"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4025
msgid "Save current buffer and kill it.  If user level is 1, then save all files and kill Emacs.  Killing Emacs is the wrong way to use it, so you should switch to higher user levels as soon as possible."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4025
#, no-wrap
msgid ":x [<file>]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4027
msgid "Save and kill buffer."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4027
#, no-wrap
msgid ":x!@: [<file>]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4029
msgid "@kbd{:w![<file>]} and @kbd{:q}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4029
#, no-wrap
msgid ":pre"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4031
msgid "Preserve the file---autosave buffers."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4033
msgid "Recover file from autosave."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4033
#, no-wrap
msgid ":f [<file>]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4037
msgid "without the argument, prints file name and character/line information afout the currently visited file. With an argument, sets the currently visited filename to @file{file}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4037
#, no-wrap
msgid ":cd [<dir>]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4039
msgid "Set the working directory to <dir> (default home directory)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4039
#, no-wrap
msgid ":pwd"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4041
msgid "Print present working directory."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4041
#, no-wrap
msgid ":e [+<cmd>] <files>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4047
msgid "Edit files.  If no filename is given, edit the file visited by the current buffer.  If buffer was modified or the file changed on disk, ask for confirmation.  Unlike Vi, Viper allows @kbd{:e} to take multiple arguments.  The first file is edited the same way as in Vi.  The rest are visited in the usual Emacs way."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4047
#, no-wrap
msgid ":e!@: [+<cmd>] <files>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4052
msgid "Re-edit file.  If no filename, re-edit current file.  In Viper, unlike Vi, @kbd{e!} is identical to @kbd{:e}.  In both cases, the user is asked to confirm if there is a danger of discarding changes to a buffer."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4054
#: ../../../../../doc/misc/viper.texi:4085
#, no-wrap
msgid "C-^"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4056
msgid "Edit the alternate (normally the previous) file."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4056
#, no-wrap
msgid ":rew"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4058
msgid "Obsolete"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4058
#, no-wrap
msgid ":args"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4060
msgid "List files not shown anywhere with counts for next"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4060
#, no-wrap
msgid ":n [count]  [+<cmd>] [<files>]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4062
msgid "Edit <count> file, or edit files.  The count comes from @kbd{:args}."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4062
#, no-wrap
msgid ":N [count] [+<cmd>] [<files>]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4065
msgid "Like @kbd{:n}, but the meaning of the variable @code{ex-cycle-other-window} is reversed."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4065
#, no-wrap
msgid ":b"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4072
msgid "Switch to another buffer.  If @code{ex-cycle-other-window} is @code{t}, switch in another window.  Buffer completion is supported.  The variable @code{viper-read-buffer-function} controls which function is actually used to read the buffer name. The default is @code{read-buffer}, but better alternatives are also available in Emacs (e.g., @code{ido-read-buffer})."
msgstr ""

#. type: vindex
#: ../../../../../doc/misc/viper.texi:4072
#, no-wrap
msgid "viper-read-buffer-function"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4073
#, no-wrap
msgid ":B"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4075
msgid "Like @kbd{:b}, but the meaning of @code{ex-cycle-other-window} is reversed."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4075
#: ../../../../../doc/misc/viper.texi:4235
#, no-wrap
msgid ":<address>r <name>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4077
msgid "Read the file <name> into the buffer after the line <address>."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4077
#, no-wrap
msgid "v, V, C-v"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4080
msgid "Edit a file in current or another window, or in another frame.  File name is typed in minibuffer.  File completion and history are supported."
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4084
#, no-wrap
msgid "Ex rew"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4086
#, no-wrap
msgid "Ex e!@: [<files>]"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4087
#, no-wrap
msgid "Ex e [<files>]"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4088
#, no-wrap
msgid "Ex edit [<files>]"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4089
#, no-wrap
msgid "Ex edit!@: [<files>]"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4091
#, no-wrap
msgid "Ex q"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4092
#, no-wrap
msgid "Ex quit"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4093
#, no-wrap
msgid "Ex quit!"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4094
#, no-wrap
msgid "Ex f"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4096
#, no-wrap
msgid "Ex r"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4097
#, no-wrap
msgid "Ex read"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4100
#, no-wrap
msgid "Ex wq"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4101
#, no-wrap
msgid "Ex w <file>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4102
#, no-wrap
msgid "Ex w!@: <file>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4103
#, no-wrap
msgid "Ex w >> <file>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4104
#, no-wrap
msgid "Ex write <file>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4105
#, no-wrap
msgid "Ex write!@: <file>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4106
#, no-wrap
msgid "Ex write >> <file>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4107
#, no-wrap
msgid "Ex W"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4108
#, no-wrap
msgid "Ex WW"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4109
#, no-wrap
msgid "Ex Write"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4110
#: ../../../../../doc/misc/viper.texi:4111
#, no-wrap
msgid "Ex WWrite"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4112
#, no-wrap
msgid "Ex x"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4113
#, no-wrap
msgid "Ex x!"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4114
#, no-wrap
msgid "Ex suspend"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4115
#, no-wrap
msgid "Ex stop"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4116
#, no-wrap
msgid "Ex n [<count> | <file>]"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4117
#, no-wrap
msgid "Ex cd [<dir>]"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4124
#, no-wrap
msgid "key mapping"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4127
#, no-wrap
msgid ":map <string>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4133
msgid "Start defining a Vi-style keyboard macro.  For instance, typing @kbd{:map www} followed by @kbd{:!wc %} and then typing @kbd{C-x )} will cause @kbd{www} to run wc on current file (Vi replaces @samp{%} with the current file name)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4133
#, no-wrap
msgid "C-x )"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4140
msgid "Finish defining a keyboard macro.  In Viper, this command completes the process of defining all keyboard macros, whether they are Emacs-style or Vi-style.  This is a departure from Vi, needed to allow WYSIWYG mapping of keyboard macros and to permit the use of function keys and arbitrary Emacs functions in the macros."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4140
#, no-wrap
msgid ":unmap <string>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4142
msgid "Deprive <string> of its mappings in Vi state."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4142
#, no-wrap
msgid ":map!@: <string>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4144
msgid "Map a macro for Insert state."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4144
#, no-wrap
msgid ":unmap!@: <string>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4146
msgid "Deprive <string> of its mapping in Insert state (see @kbd{:unmap})."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4149
msgid "In Vi state, execute the contents of register as a command."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4149
#: ../../../../../doc/misc/viper.texi:4180
#, no-wrap
msgid "@@@@"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4152
msgid "In Vi state, repeat last register command."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4158
msgid "In Vi state, begin keyboard macro.  End with @@<a-z>.  This will put the macro in the proper register.  Register will be automatically down-cased.  @xref{Macros and Registers}, for more info."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4158
#: ../../../../../doc/misc/viper.texi:4178
#, no-wrap
msgid "@@!<a-z>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4161
msgid "In Vi state, yank anonymous macro to register"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4164
msgid "In Vi state, execute anonymous macro (defined by C-x( and C-x ))."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4164
#, no-wrap
msgid "C-x e"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4166
msgid "Like @kbd{*}, but works in all Viper states."
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4182
#, no-wrap
msgid "Ex unmap <char>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4183
#, no-wrap
msgid "Ex map <char> <seq>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4184
#, no-wrap
msgid "Ex unmap!@: <char>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4185
#, no-wrap
msgid "Ex map!@: <char> <seq>"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:4194
msgid "The symbol @samp{%} is used in Ex shell commands to mean current file.  If you want a @samp{%} in your command, it must be escaped as @samp{\\%}."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4194
#, no-wrap
msgid "@samp{%} (Ex address)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:4197
msgid "However if @samp{%} is the first character, it stands as the address for the whole file."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4197
#, no-wrap
msgid "@samp{#} (Previous file)"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:4201
msgid "Similarly, @samp{#} expands to the previous file.  The previous file is the first file in @kbd{:args} listing.  This defaults to the previous file in the VI sense if you have one window."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:4206
msgid "Symbols @samp{%} and @samp{#} are also used in the Ex commands @kbd{:e} and @kbd{:r <shell-cmd>}.  The commands @kbd{:w} and the regular @kbd{:r <file>} command don't support these meta symbols, because file history is a better mechanism."
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4207
#, no-wrap
msgid "shell commands"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4210
#, no-wrap
msgid ":sh"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4212
msgid "Execute a subshell in another window"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4212
#, no-wrap
msgid ":[x,y]!<cmd>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4215
msgid "Execute a shell <cmd> [on lines x through y; % is replace by current file, \\% is changed to %"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4215
#, no-wrap
msgid ":[x,y]!!@: [<args>]"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4217
msgid "Repeat last shell command [and append <args>]."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4217
#, no-wrap
msgid ":!<cmd>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4219
msgid "Just execute command and display result in a buffer."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4219
#, no-wrap
msgid ":!!@: <args>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4221
msgid "Repeat last shell command and append <args>"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4221
#, no-wrap
msgid "<count> !<move><cmd>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4226
msgid "The shell executes <cmd>, with standard input the lines described by <count><move>, next the standard output replaces those lines (think of @samp{cb}, @samp{sort}, @samp{nroff}, etc.)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4226
#, no-wrap
msgid "<count> !!<cmd>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4230
msgid "Give <count> lines as standard input to the shell <cmd>, next let the standard output replace those lines."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4230
#, no-wrap
msgid ":[x,y] w !<cmd>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4233
msgid "Let lines x to y be standard input for <cmd> (notice the <sp> between @kbd{w} and @kbd{!})."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4233
#, no-wrap
msgid ":<address>r !<cmd>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4235
msgid "Put the output of <cmd> after the line <address> (default current)."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4238
msgid "Read the file <name> into the buffer after the line <address> (default current)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4238
#, no-wrap
msgid ":make"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4240
msgid "Run the make command in the current directory."
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4241
#, no-wrap
msgid "Ex <address>r <name>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4242
#, no-wrap
msgid "Ex <address>r !<cmd>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4243
#, no-wrap
msgid "!<cmd>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4244
#, no-wrap
msgid "!!<cmd>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4245
#, no-wrap
msgid "!<move><cmd>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4246
#, no-wrap
msgid "Ex w !<cmd>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4247
#, no-wrap
msgid "Ex x,y w !<cmd>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4248
#, no-wrap
msgid "Ex !!@: <args>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4249
#, no-wrap
msgid "Ex !<cmd>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4250
#, no-wrap
msgid "Ex sh"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4251
#, no-wrap
msgid "Ex make"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4256
#, no-wrap
msgid "Vi options"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4259
#: ../../../../../doc/misc/viper.texi:4261
#, no-wrap
msgid "autoindent"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4260
#, no-wrap
msgid "ai"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4266
msgid "autoindent: In append mode after a <cr> the cursor will move directly below the first character on the previous line.  This setting affects the current buffer only."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4266
#, no-wrap
msgid "autoindent-global"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4267
#, no-wrap
msgid "ai-global"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4269
msgid "Same as @code{autoindent}, but affects all buffers."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4269
#, no-wrap
msgid "noautoindent"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4270
#, no-wrap
msgid "noai"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4272
msgid "Cancel autoindent."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4272
#, no-wrap
msgid "noautoindent-global"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4273
#, no-wrap
msgid "noai-g"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4275
msgid "Cancel autoindent-global."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4275
#, no-wrap
msgid "ignorecase"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4276
#, no-wrap
msgid "ic"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4277
#, no-wrap
msgid "case and searching"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4279
msgid "ignorecase: No distinction between upper and lower cases when searching."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4279
#, no-wrap
msgid "noignorecase"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4280
#, no-wrap
msgid "noic"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4282
msgid "Cancel ignorecase."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4282
#, no-wrap
msgid "magic"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4283
#, no-wrap
msgid "ma"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4284
#, no-wrap
msgid "literal searching"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4286
msgid "Regular expressions used in searches; nomagic means no regexps."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4286
#, no-wrap
msgid "nomagic"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4287
#, no-wrap
msgid "noma"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4289
msgid "Cancel magic."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4289
#, no-wrap
msgid "readonly"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4290
#, no-wrap
msgid "ro"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4291
#, no-wrap
msgid "readonly files"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4294
msgid "readonly: The file is not to be changed.  If the user attempts to write to this file, confirmation will be requested."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4294
#, no-wrap
msgid "noreadonly"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4295
#, no-wrap
msgid "noro"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4297
msgid "Cancel readonly."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4297
#, no-wrap
msgid "shell=<string>"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4298
#, no-wrap
msgid "sh=<string>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4302
msgid "shell: The program to be used for shell escapes (default @samp{$SHELL} (default @file{/bin/sh}))."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4302
#, no-wrap
msgid "shiftwidth=<count>"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4303
#, no-wrap
msgid "sw=<count>"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4304
#, no-wrap
msgid "layout"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4307
msgid "shiftwidth: Gives the shiftwidth (default 8 positions)."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4307
#, no-wrap
msgid "showmatch"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4308
#, no-wrap
msgid "sm"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4314
msgid "showmatch: Whenever you append a @kbd{)}, Vi shows its match if it's on the same page; also with @kbd{@{} and @kbd{@}}.  If there's no match, Vi will beep."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4314
#, no-wrap
msgid "noshowmatch"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4315
#, no-wrap
msgid "nosm"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4317
msgid "Cancel showmatch."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4317
#, no-wrap
msgid "tabstop=<count>"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4318
#, no-wrap
msgid "ts=<count>"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4319
#, no-wrap
msgid "changing tab width"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4320
#, no-wrap
msgid "tabbing"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4325
msgid "tabstop: The length of a <ht>; warning: this is only IN the editor, outside of it <ht>s have their normal length (default 8 positions).  This setting affects the current buffer only."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4325
#, no-wrap
msgid "tabstop-global"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4326
#, no-wrap
msgid "ts-g"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4328
msgid "Same as @code{tabstop}, but affects all buffers."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4328
#, no-wrap
msgid "wrapmargin=<count>"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4329
#, no-wrap
msgid "wm=<count>"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4330
#, no-wrap
msgid "auto fill"
msgstr ""

#. type: cindex
#: ../../../../../doc/misc/viper.texi:4331
#, no-wrap
msgid "word wrap"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4335
msgid "wrapmargin: In append mode Vi automatically puts an <lf> whenever there is an <sp> or <ht> within <wm> columns from the right margin."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4335
#, no-wrap
msgid "wrapscan"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4336
#, no-wrap
msgid "ws"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4340
msgid "wrapscan: When searching, the end is considered @samp{stuck} to the begin of the file."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4340
#, no-wrap
msgid "nowrapscan"
msgstr ""

#. type: itemx
#: ../../../../../doc/misc/viper.texi:4341
#, no-wrap
msgid "nows"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4343
msgid "Cancel wrapscan."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4343
#, no-wrap
msgid ":set <option>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4345
msgid "Turn <option> on."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4345
#, no-wrap
msgid ":set no<option>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4347
msgid "Turn <option> off."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4347
#, no-wrap
msgid ":set <option>=<value>"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4349
msgid "Set <option> to <value>."
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4350
#, no-wrap
msgid "Ex set <option>=<value>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4351
#, no-wrap
msgid "Ex set no<option>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4352
#, no-wrap
msgid "Ex set <option>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4353
#, no-wrap
msgid "Ex set ws"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4354
#, no-wrap
msgid "Ex set wrapscan"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4355
#, no-wrap
msgid "Ex set wm=<count>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4356
#, no-wrap
msgid "Ex set wrapmargin=<count>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4357
#, no-wrap
msgid "Ex set ts=<count>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4358
#, no-wrap
msgid "Ex set tabstop=<count>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4359
#, no-wrap
msgid "Ex set tab-stop-local=<count>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4360
#, no-wrap
msgid "Ex set sm"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4361
#, no-wrap
msgid "Ex set showmatch"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4362
#, no-wrap
msgid "Ex set sw=<count>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4363
#, no-wrap
msgid "Ex set shiftwidth=<count>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4364
#, no-wrap
msgid "Ex set sh=<string>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4365
#, no-wrap
msgid "Ex set shell=<string>"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4366
#, no-wrap
msgid "Ex set ro"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4367
#, no-wrap
msgid "Ex set readonly"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4368
#, no-wrap
msgid "Ex set magic"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4369
#, no-wrap
msgid "Ex set ic"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4370
#, no-wrap
msgid "Ex set ignorecase"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4371
#, no-wrap
msgid "Ex set ai"
msgstr ""

#. type: kbd{#1}
#: ../../../../../doc/misc/viper.texi:4372
#, no-wrap
msgid "Ex set autoindent"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4380
msgid "Begin Meta command in Vi or Insert states.  Most often used as C-\\ x (M-x)."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4386
msgid "Note: Emacs binds @kbd{C-\\} to a function that offers to change the keyboard input method in the multilingual environment.  Viper overrides this binding.  However, it is still possible to switch the input method by typing @kbd{\\ C-\\} in the Vi command state and @kbd{C-z \\ C-\\} in the Insert state.  Or you can use the MULE menu on the menubar."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4389
msgid "In Insert and Replace states, prepare Viper to accept the next command and execute it as if Viper was in Vi state.  Then return to Insert state."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4391
msgid "In Vi state, switch to Emacs state; in Emacs state, switch to Vi state."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4391
#, no-wrap
msgid "C-c \\"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4394
msgid "Switches to Vi state for the duration of a single command.  Then goes back to the original Viper state.  Works from Vi, Insert, Replace, and Emacs states."
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4394
#, no-wrap
msgid "C-x0"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4396
msgid "Close Window"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4396
#, no-wrap
msgid "C-x1"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4398
msgid "Close Other Windows"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4398
#, no-wrap
msgid "C-x2"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4400
msgid "Split Window"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4400
#, no-wrap
msgid "C-xo"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4402
msgid "Move among windows"
msgstr ""

#. type: item
#: ../../../../../doc/misc/viper.texi:4402
#, no-wrap
msgid "C-xC-f"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4404
msgid "Emacs find-file, useful in Insert state"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4408
msgid "Put back the last killed text.  Similar to Vi's @kbd{p}, but also works in Insert and Replace state.  This command doesn't work in Vi command state, since this binding is taken for something else."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4408
#: ../../../../../doc/misc/viper.texi:4413
#, no-wrap
msgid "M-y"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4412
msgid "Undoes the last @kbd{C-y} and puts another kill from the kill ring.  Using this command, you can try may different kills until you find the one you need."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4415
#, no-wrap
msgid "C-x C-f"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4416
#, no-wrap
msgid "C-x o"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4417
#, no-wrap
msgid "C-x 2"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4418
#, no-wrap
msgid "C-x 1"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4419
#, no-wrap
msgid "C-x 0"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4422
#, no-wrap
msgid "C-c\\"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:4429
msgid "The following two mouse actions are normally bound to special search and insert commands in of Viper:"
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4439
msgid "Holding Shift and clicking mouse button 1 will initiate search for a region under the mouse pointer.  This command can take a prefix argument.  Note: Viper sets this binding only if this mouse action is not already bound to something else.  @xref{Viper Specials}, for more information."
msgstr ""

#. type: table
#: ../../../../../doc/misc/viper.texi:4447
msgid "Holding Shift and clicking button 2 of the mouse will insert a region surrounding the mouse pointer.  This command can also take a prefix argument.  Note: Viper sets this binding only if this mouse action is not already bound to something else.  @xref{Viper Specials}, for more details."
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4450
#, no-wrap
msgid "META button1up"
msgstr ""

#. type: kindex
#: ../../../../../doc/misc/viper.texi:4451
#, no-wrap
msgid "META button2up"
msgstr ""

#. type: include
#: ../../../../../doc/misc/viper.texi:4455
#, no-wrap
msgid "doclicense.texi"
msgstr ""

#. type: unnumbered
#: ../../../../../doc/misc/viper.texi:4457
#: ../../../../../doc/misc/viper.texi:4458
#, no-wrap
msgid "Acknowledgments"
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:4464
msgid "Viper, formerly known as VIP-19, was written by Michael Kifer.  Viper is based on the original VIP package by Masahiko Sato and on its enhancement, VIP 4.4, by Aamod Sane.  This manual is an adaptation of the manual for VIP 4.4, which, in turn, was based on Sato's manual for VIP 3.5."
msgstr ""

#. type: Plain text
#: ../../../../../doc/misc/viper.texi:4469
msgid "Many contributors on the Net pointed out bugs and suggested a number of useful features. Scott Bronson and Samuel Padgett contributed patches that were incorporated in this code.  Here is a hopefully complete list of contributors:"
msgstr ""

#. type: example
#: ../../../../../doc/misc/viper.texi:4529
#, no-wrap
msgid ""
"aaronl@@vitelus.com (Aaron Lehmann),\n"
"ahg@@panix.com (Al Gelders),\n"
"amade@@diagram.fr (Paul-Bernard Amade),\n"
"ascott@@fws214.intel.com (Andy Scott),\n"
"bronson@@trestle.com (Scott Bronson),\n"
"cook@@biostat.wisc.edu (Tom Cook),\n"
"csdayton@@midway.uchicago.edu (Soren Dayton),\n"
"dave@@hellgate.utah.edu,\n"
"dm@@scs.cs.nyu.edu (David Mazieres),\n"
"dominik@@strw.LeidenUniv.nl (Carsten Dominik),\n"
"dwallach@@cs.princeton.edu (Dan Wallach),\n"
"dwight@@toolucky.llnl.gov (Dwight Shih),\n"
"dxc@@xprt.net (David X Callaway),\n"
"edmonds@@edmonds.home.cs.ubc.ca (Brian Edmonds),\n"
"gin@@mo.msk.ru (Golubev I.N.),\n"
"gviswana@@cs.wisc.edu (Guhan Viswanathan),\n"
"gvr@@halcyon.com (George V. Reilly),\n"
"hatazaki@@bach.convex.com (Takao Hatazaki),\n"
"hpz@@ibmhpz.aug.ipp-garching.mpg.de (Hans-Peter Zehrfeld),\n"
"irie@@t.email.ne.jp (Irie Tetsuya),\n"
"jackr@@dblues.engr.sgi.com (Jack Repenning),\n"
"jamesm@@bga.com (D.J. Miller II),\n"
"jjm@@hplb.hpl.hp.com (Jean-Jacques Moreau),\n"
"jl@@cse.ogi.edu (John Launchbury),\n"
"jobrien@@hchp.org (John O'Brien),\n"
"johnw@@borland.com (John Wiegley),\n"
"kanze@@gabi-soft.fr (James Kanze),\n"
"kin@@isi.com (Kin Cho),\n"
"kwzh@@gnu.org (Karl Heuer),\n"
"lindstro@@biostat.wisc.edu (Mary Lindstrom),\n"
"lektu@@terra.es (Juanma Barranquero),\n"
"lennart.borgman.073@@student.lu.se (Lennart Borgman),\n"
"minakaji@@osaka.email.ne.jp (Mikio Nakajima),\n"
"Mark.Bordas@@East.Sun.COM (Mark Bordas),\n"
"meyering@@comco.com (Jim Meyering),\n"
"martin@@xemacs.org (Martin Buchholz),\n"
"mbutler@@redfernnetworks.com (Malcolm Butler),\n"
"mveiga@@dit.upm.es (Marcelino Veiga Tuimil),\n"
"paulk@@summit.esg.apertus.com (Paul Keusemann),\n"
"pfister@@cs.stonybrook.edu (Hanspeter Pfister),\n"
"phil_brooks@@MENTORG.COM (Phil Brooks),\n"
"pogrell@@informatik.hu-berlin.de (Lutz Pogrell),\n"
"pradyut@@cs.uchicago.edu (Pradyut Shah),\n"
"roderick@@argon.org (Roderick Schertler),\n"
"rxga@@ulysses.att.com,\n"
"sawdey@@lcse.umn.edu (Aaron Sawdey),\n"
"simonb@@prl.philips.co.uk (Simon Blanchard),\n"
"spadgett1@@nc.rr.com (Samuel Padgett),\n"
"stephen@@farrell.org (Stephen Farrell),\n"
"storm@@cua.dk (Kim F. Storm),\n"
"sudish@@MindSpring.COM (Sudish Joseph),\n"
"schwab@@issan.informatik.uni-dortmund.de (Andreas Schwab)\n"
"terra@@diku.dk (Morten Welinder),\n"
"thanh@@informatics.muni.cz (Han The Thanh),\n"
"toma@@convex.convex.com,\n"
"vrenjak@@sun1.racal.com (Milan Vrenjak),\n"
"whicken@@dragon.parasoft.com (Wendell Hicken),\n"
"zapman@@cc.gatech.edu (Jason Zapman II),\n"
msgstr ""
