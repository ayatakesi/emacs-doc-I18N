# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-06 03:02+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: chapter
#: ../../../../../doc/emacs/indent.texi:5 ../../../../../doc/emacs/indent.texi:6
#, no-wrap
msgid "Indentation"
msgstr ""

#. type: cindex
#: ../../../../../doc/emacs/indent.texi:7
#, no-wrap
msgid "indentation"
msgstr ""

#. type: cindex
#: ../../../../../doc/emacs/indent.texi:8
#, no-wrap
msgid "tabs"
msgstr ""

#. type: cindex
#: ../../../../../doc/emacs/indent.texi:9
#, no-wrap
msgid "columns (indentation)"
msgstr ""

#. type: cindex
#: ../../../../../doc/emacs/indent.texi:11
#, no-wrap
msgid "whitespace character"
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:18
msgid ""
"@dfn{Indentation} refers to inserting or adjusting @dfn{whitespace "
"characters} (space and/or tab characters) at the beginning of a line of "
"text.  This chapter documents indentation commands and options which are "
"common to Text mode and related modes, as well as programming language "
"modes.  @xref{Program Indent}, for additional documentation about indenting "
"in programming modes."
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:19
#, no-wrap
msgid "indent-for-tab-command"
msgstr ""

#. type: kindex
#: ../../../../../doc/emacs/indent.texi:20
#, no-wrap
msgid "TAB @r{(indentation)}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:26
msgid ""
"The simplest way to perform indentation is the @key{TAB} key.  In most major "
"modes, this runs the command @code{indent-for-tab-command}.  (In C and "
"related modes, @key{TAB} runs the command @code{c-indent-line-or-region}, "
"which behaves similarly, @pxref{C Indent})."
msgstr ""

#. type: item
#: ../../../../../doc/emacs/indent.texi:28
#, no-wrap
msgid "TAB"
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:32
msgid ""
"Insert whitespace, or indent the current line, in a mode-appropriate way "
"(@code{indent-for-tab-command}).  If the region is active, indent all the "
"lines within it."
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:43
msgid ""
"The exact behavior of @key{TAB} depends on the major mode.  In Text mode and "
"related major modes, @key{TAB} normally inserts some combination of space "
"and tab characters to advance point to the next tab stop (@pxref{Tab "
"Stops}).  For this purpose, the position of the first non-whitespace "
"character on the preceding line is treated as an additional tab stop, so you "
"can use @key{TAB} to align point with the preceding line.  If the region is "
"active (@pxref{Using Region}), @key{TAB} acts specially: it indents each "
"line in the region so that its first non-whitespace character is aligned "
"with the preceding line."
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:49
msgid ""
"In programming modes, @key{TAB} indents the current line of code in a way "
"that makes sense given the code in the preceding lines.  If the region is "
"active, all the lines in the region are indented this way.  If point was "
"initially within the current line's indentation, it is repositioned to the "
"first non-whitespace character on the line."
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:52
msgid ""
"If you just want to insert a tab character in the buffer, type @kbd{C-q "
"@key{TAB}} (@pxref{Inserting Text})."
msgstr ""

#. type: section
#: ../../../../../doc/emacs/indent.texi:58 ../../../../../doc/emacs/indent.texi:60 ../../../../../doc/emacs/indent.texi:61
#, no-wrap
msgid "Indentation Commands"
msgstr ""

#. type: menuentry
#: ../../../../../doc/emacs/indent.texi:58
msgid "More commands for performing indentation."
msgstr ""

#. type: section
#: ../../../../../doc/emacs/indent.texi:58 ../../../../../doc/emacs/indent.texi:153 ../../../../../doc/emacs/indent.texi:154
#, no-wrap
msgid "Tab Stops"
msgstr ""

#. type: menuentry
#: ../../../../../doc/emacs/indent.texi:58
msgid "Stop points for indentation in Text modes."
msgstr ""

#. type: node
#: ../../../../../doc/emacs/indent.texi:58 ../../../../../doc/emacs/indent.texi:206
#, no-wrap
msgid "Just Spaces"
msgstr ""

#. type: menuentry
#: ../../../../../doc/emacs/indent.texi:58
msgid "Using only space characters for indentation."
msgstr ""

#. type: node
#: ../../../../../doc/emacs/indent.texi:58 ../../../../../doc/emacs/indent.texi:239
#, no-wrap
msgid "Indent Convenience"
msgstr ""

#. type: menuentry
#: ../../../../../doc/emacs/indent.texi:58
msgid "Optional indentation features."
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:66
msgid ""
"Apart from the @kbd{@key{TAB}} (@code{indent-for-tab-command})  command, "
"Emacs provides a variety of commands to perform indentation in other ways."
msgstr ""

#. type: kindex
#: ../../../../../doc/emacs/indent.texi:68 ../../../../../doc/emacs/indent.texi:69
#, no-wrap
msgid "C-M-o"
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:70
#, no-wrap
msgid "split-line"
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:76
msgid ""
"Split the current line at point (@code{split-line}).  The text on the line "
"after point becomes a new line, indented to the same column where point is "
"located.  This command first moves point forward over any spaces and tabs.  "
"Afterward, point is positioned before the inserted newline."
msgstr ""

#. type: item
#: ../../../../../doc/emacs/indent.texi:77 ../../../../../doc/emacs/indent.texi:79
#, no-wrap
msgid "M-m"
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:78
#, no-wrap
msgid "back-to-indentation"
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:83
msgid ""
"Move (forward or back) to the first non-whitespace character on the current "
"line (@code{back-to-indentation}).  If there are no non-whitespace "
"characters on the line, move to the end of the line."
msgstr ""

#. type: kindex
#: ../../../../../doc/emacs/indent.texi:84 ../../../../../doc/emacs/indent.texi:85
#, no-wrap
msgid "M-i"
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:86
#, no-wrap
msgid "tab-to-tab-stop"
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:89
msgid ""
"Indent whitespace at point, up to the next tab stop "
"(@code{tab-to-tab-stop}).  @xref{Tab Stops}."
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:90
#, no-wrap
msgid "indent-relative"
msgstr ""

#. type: item
#: ../../../../../doc/emacs/indent.texi:91
#, no-wrap
msgid "M-x indent-relative"
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:97
msgid ""
"Insert whitespace at point, until point is aligned with the first "
"non-whitespace character on the previous line (actually, the last non-blank "
"line).  If point is already farther right than that, run "
"@code{tab-to-tab-stop} instead---unless called with a numeric argument, in "
"which case do nothing."
msgstr ""

#. type: kindex
#: ../../../../../doc/emacs/indent.texi:98 ../../../../../doc/emacs/indent.texi:99
#, no-wrap
msgid "M-^"
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:100
#, no-wrap
msgid "delete-indentation"
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:105
msgid ""
"Merge the previous and the current line (@code{delete-indentation}).  This "
"joins the two lines cleanly, by replacing any indentation at the front of "
"the current line, together with the line boundary, with a single space."
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:109
msgid ""
"As a special case (useful for Lisp code), the single space is omitted if the "
"characters to be joined are consecutive opening and closing parentheses, or "
"if the junction follows another newline."
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:112
msgid ""
"If there is a fill prefix, @kbd{M-^} deletes the fill prefix if it appears "
"after the newline that is deleted.  @xref{Fill Prefix}."
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:116
msgid ""
"With a prefix argument, join the current line to the following line.  If the "
"region is active, and no prefix argument is given, join all lines in the "
"region instead."
msgstr ""

#. type: kindex
#: ../../../../../doc/emacs/indent.texi:117 ../../../../../doc/emacs/indent.texi:118
#, no-wrap
msgid "C-M-\\"
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:119
#, no-wrap
msgid "indent-region"
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:122
msgid ""
"Indent all the lines in the region, as though you had typed @kbd{@key{TAB}} "
"at the beginning of each line (@code{indent-region})."
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:125
msgid ""
"If a numeric argument is supplied, indent every line in the region to that "
"column number."
msgstr ""

#. type: item
#: ../../../../../doc/emacs/indent.texi:126
#, no-wrap
msgid "C-x @key{TAB}"
msgstr ""

#. type: kindex
#: ../../../../../doc/emacs/indent.texi:127
#, no-wrap
msgid "C-x TAB"
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:128
#, no-wrap
msgid "indent-rigidly"
msgstr ""

#. type: cindex
#: ../../../../../doc/emacs/indent.texi:129
#, no-wrap
msgid "remove indentation"
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:132
msgid ""
"This command is used to change the indentation of all lines that begin in "
"the region, moving the affected lines as a rigid unit."
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:141
msgid ""
"If called with no argument, the command activates a transient mode for "
"adjusting the indentation of the affected lines interactively.  While this "
"transient mode is active, typing @kbd{@key{LEFT}} or @kbd{@key{RIGHT}} "
"indents leftward and rightward, respectively, by one space.  You can also "
"type @kbd{S-@key{LEFT}} or @kbd{S-@key{RIGHT}} to indent leftward or "
"rightward to the next tab stop (@pxref{Tab Stops}).  Typing any other key "
"disables the transient mode, and this key is then acted upon as normally."
msgstr ""

#. type: table
#: ../../../../../doc/emacs/indent.texi:147
msgid ""
"If called with a prefix argument @var{n}, this command indents the lines "
"forward by @var{n} spaces (without enabling the transient mode).  Negative "
"values of @var{n} indent backward, so you can remove all indentation from "
"the lines in the region using a large negative argument, like this:"
msgstr ""

#. type: smallexample
#: ../../../../../doc/emacs/indent.texi:150
#, no-wrap
msgid "C-u -999 C-x @key{TAB}\n"
msgstr ""

#. type: cindex
#: ../../../../../doc/emacs/indent.texi:155
#, no-wrap
msgid "tab stops"
msgstr ""

#. type: vindex
#: ../../../../../doc/emacs/indent.texi:157
#, no-wrap
msgid "tab-stop-list"
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:167
msgid ""
"Emacs defines certain column numbers to be @dfn{tab stops}.  These are used "
"as stopping points by @key{TAB} when inserting whitespace in Text mode and "
"related modes (@pxref{Indentation}), and by commands like @kbd{M-i} "
"(@pxref{Indentation Commands}).  The variable @code{tab-stop-list} controls "
"these positions.  The default value is @code{nil}, which means a tab stop "
"every 8 columns.  The value can also be a list of zero-based column numbers "
"(in increasing order) at which to place tab stops.  Emacs extends the list "
"forever by repeating the difference between the last and next-to-last "
"elements."
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:168
#, no-wrap
msgid "edit-tab-stops"
msgstr ""

#. type: kindex
#: ../../../../../doc/emacs/indent.texi:169
#, no-wrap
msgid "C-c C-c @r{(Edit Tab Stops)}"
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:174
msgid ""
"Instead of customizing the variable @code{tab-stop-list} directly, a "
"convenient way to view and set tab stops is via the command @kbd{M-x "
"edit-tab-stops}.  This switches to a buffer containing a description of the "
"tab stop settings, which looks like this:"
msgstr ""

#. type: example
#: ../../../../../doc/emacs/indent.texi:180
#, no-wrap
msgid ""
"        :       :       :       :       :       :\n"
"0         1         2         3         4\n"
"0123456789012345678901234567890123456789012345678\n"
"To install changes, type C-c C-c\n"
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:187
msgid ""
"The first line contains a colon at each tab stop.  The numbers on the next "
"two lines are present just to indicate where the colons are.  If the value "
"of @code{tab-stop-list} is @code{nil}, as it is by default, no colons are "
"displayed initially."
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:200
msgid ""
"You can edit this buffer to specify different tab stops by placing colons on "
"the desired columns.  The buffer uses Overwrite mode (@pxref{Minor Modes}).  "
"Remember that Emacs will extend the list of tab stops forever by repeating "
"the difference between the last two explicit stops that you place.  When you "
"are done, type @kbd{C-c C-c} to make the new tab stops take effect.  "
"Normally, the new tab stop settings apply to all buffers.  However, if you "
"have made the @code{tab-stop-list} variable local to the buffer where you "
"called @kbd{M-x edit-tab-stops} (@pxref{Locals}), then the new tab stop "
"settings apply only to that buffer.  To save the tab stop settings for "
"future Emacs sessions, use the Customize interface to save the value of "
"@code{tab-stop-list} (@pxref{Easy Customization})."
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:205
msgid ""
"Note that the tab stops discussed in this section have nothing to do with "
"how tab characters are displayed in the buffer.  Tab characters are always "
"displayed as empty spaces extending to the next @dfn{display tab stop}.  "
"@xref{Text Display}."
msgstr ""

#. type: section
#: ../../../../../doc/emacs/indent.texi:207
#, no-wrap
msgid "Tabs vs.@: Spaces"
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:215
msgid ""
"Normally, indentation commands insert (or remove) the shortest possible "
"series of tab and space characters so as to align to the desired column.  "
"Tab characters are displayed as a stretch of empty space extending to the "
"next @dfn{display tab stop}.  By default, there is one display tab stop "
"every @code{tab-width} columns (the default is 8).  @xref{Text Display}."
msgstr ""

#. type: vindex
#: ../../../../../doc/emacs/indent.texi:216
#, no-wrap
msgid "indent-tabs-mode"
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:222
msgid ""
"If you prefer, all indentation can be made from spaces only.  To request "
"this, set the buffer-local variable @code{indent-tabs-mode} to @code{nil}.  "
"@xref{Locals}, for information about setting buffer-local variables.  Note, "
"however, that @kbd{C-q @key{TAB}} always inserts a tab character, regardless "
"of the value of @code{indent-tabs-mode}."
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:230
msgid ""
"One reason to set @code{indent-tabs-mode} to @code{nil} is that not all "
"editors display tab characters in the same way.  Emacs users, too, may have "
"different customized values of @code{tab-width}.  By using spaces only, you "
"can make sure that your file always looks the same.  If you only care about "
"how it looks within Emacs, another way to tackle this problem is to set the "
"@code{tab-width} variable in a file-local variable (@pxref{File Variables})."
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:231
#, no-wrap
msgid "tabify"
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:232
#, no-wrap
msgid "untabify"
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:238
msgid ""
"There are also commands to convert tabs to spaces or vice versa, always "
"preserving the columns of all non-whitespace text.  @kbd{M-x tabify} scans "
"the region for sequences of spaces, and converts sequences of at least two "
"spaces to tabs if that can be done without changing indentation.  @kbd{M-x "
"untabify} changes all tabs in the region to appropriate numbers of spaces."
msgstr ""

#. type: section
#: ../../../../../doc/emacs/indent.texi:240
#, no-wrap
msgid "Convenience Features for Indentation"
msgstr ""

#. type: vindex
#: ../../../../../doc/emacs/indent.texi:242
#, no-wrap
msgid "tab-always-indent"
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:252
msgid ""
"The variable @code{tab-always-indent} tweaks the behavior of the @key{TAB} "
"(@code{indent-for-tab-command}) command.  The default value, @code{t}, gives "
"the behavior described in @ref{Indentation}.  If you change the value to the "
"symbol @code{complete}, then @key{TAB} first tries to indent the current "
"line, and if the line was already indented, it tries to complete the text at "
"point (@pxref{Symbol Completion}).  If the value is @code{nil}, then "
"@key{TAB} indents the current line only if point is at the left margin or in "
"the line's indentation; otherwise, it inserts a tab character."
msgstr ""

#. type: cindex
#: ../../../../../doc/emacs/indent.texi:253
#, no-wrap
msgid "Electric Indent mode"
msgstr ""

#. type: cindex
#: ../../../../../doc/emacs/indent.texi:254
#, no-wrap
msgid "mode, Electric Indent"
msgstr ""

#. type: findex
#: ../../../../../doc/emacs/indent.texi:255
#, no-wrap
msgid "electric-indent-mode"
msgstr ""

#. type: Plain text
#: ../../../../../doc/emacs/indent.texi:260
msgid ""
"Electric Indent mode is a global minor mode that automatically indents the "
"line after every @key{RET} you type.  This mode is enabled by default.  To "
"toggle this minor mode, type @kbd{M-x electric-indent-mode}.  To toggle the "
"mode in a single buffer, use @kbd{M-x electric-indent-local-mode}."
msgstr ""
