# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-09-22 12:32+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: settitle
#: ../../pgg.texi:6
#, no-wrap
msgid "PGG @value{VERSION}"
msgstr ""

#. type: include
#: ../../pgg.texi:7
#, no-wrap
msgid "docstyle.texi"
msgstr ""

#. type: copying
#: ../../pgg.texi:12
msgid ""
"This file describes PGG @value{VERSION}, an Emacs interface to various PGP "
"implementations."
msgstr ""

#. type: copying
#: ../../pgg.texi:14
msgid "Copyright @copyright{} 2001, 2003--2021 Free Software Foundation, Inc."
msgstr ""

#. type: quotation
#: ../../pgg.texi:22
msgid ""
"Permission is granted to copy, distribute and/or modify this document under "
"the terms of the GNU Free Documentation License, Version 1.3 or any later "
"version published by the Free Software Foundation; with no Invariant "
"Sections, with the Front-Cover Texts being ``A GNU Manual,'' and with the "
"Back-Cover Texts as in (a) below.  A copy of the license is included in the "
"section entitled ``GNU Free Documentation License.''"
msgstr ""

#. type: quotation
#: ../../pgg.texi:25
msgid ""
"(a) The FSF's Back-Cover Text is: ``You have the freedom to copy and modify "
"this GNU manual.''"
msgstr ""

#. type: dircategory
#: ../../pgg.texi:28
#, no-wrap
msgid "Emacs network features"
msgstr ""

#. type: menuentry
#: ../../pgg.texi:31
msgid "PGG: (pgg)"
msgstr ""

#. type: menuentry
#: ../../pgg.texi:31
msgid "Emacs interface to various PGP implementations."
msgstr ""

#. type: title
#: ../../pgg.texi:35
#, no-wrap
msgid "PGG (DEVELOPMENT VERSION)"
msgstr ""

#. type: top
#: ../../pgg.texi:38 ../../pgg.texi:51
#, no-wrap
msgid "PGG"
msgstr ""

#. type: author
#: ../../pgg.texi:41
#, no-wrap
msgid "by Daiki Ueno"
msgstr ""

#. type: node
#: ../../pgg.texi:50
#, no-wrap
msgid "Top"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:58
msgid ""
"PGG is an interface library between Emacs and various tools for secure "
"communication.  PGG also provides a simple user interface to encrypt, "
"decrypt, sign, and verify MIME messages.  This package is obsolete; for new "
"code we recommend EasyPG instead.  @xref{Top,, EasyPG, epa, EasyPG Assistant "
"User's Manual}."
msgstr ""

#. type: chapter
#: ../../pgg.texi:72 ../../pgg.texi:74 ../../pgg.texi:75
#, no-wrap
msgid "Overview"
msgstr ""

#. type: menuentry
#: ../../pgg.texi:72
msgid "What PGG is."
msgstr ""

#. type: chapter
#: ../../pgg.texi:72 ../../pgg.texi:88 ../../pgg.texi:89
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: menuentry
#: ../../pgg.texi:72
msgid "Complicated stuff you may have to do."
msgstr ""

#. type: chapter
#: ../../pgg.texi:72 ../../pgg.texi:109 ../../pgg.texi:110
#, no-wrap
msgid "How to use"
msgstr ""

#. type: menuentry
#: ../../pgg.texi:72
msgid "Getting started quickly."
msgstr ""

#. type: menuentry
#: ../../pgg.texi:72
msgid "Architecture::"
msgstr ""

#. type: menuentry
#: ../../pgg.texi:72
msgid "Parsing OpenPGP packets::"
msgstr ""

#. type: appendix
#: ../../pgg.texi:72 ../../pgg.texi:495 ../../pgg.texi:496
#, no-wrap
msgid "GNU Free Documentation License"
msgstr ""

#. type: menuentry
#: ../../pgg.texi:72
msgid "The license for this documentation."
msgstr ""

#. type: menuentry
#: ../../pgg.texi:72
msgid "Function Index::"
msgstr ""

#. type: unnumbered
#: ../../pgg.texi:72 ../../pgg.texi:503 ../../pgg.texi:504
#, no-wrap
msgid "Variable Index"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:81
msgid ""
"PGG is an interface library between Emacs and various tools for secure "
"communication.  Even though Mailcrypt has similar feature, it does not deal "
"with detached PGP messages, normally used in PGP/MIME infrastructure.  This "
"was the main reason why I wrote the new library."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:84
msgid ""
"Note that the PGG library is now obsolete, replaced by EasyPG@.  @xref{Top,, "
"EasyPG, epa, EasyPG Assistant User's Manual}."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:87
msgid ""
"PGP/MIME is an application of MIME Object Security Services (RFC1848).  The "
"standard is documented in RFC2015."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:94
msgid ""
"PGG requires at least one implementation of privacy guard system.  This "
"document assumes that you have already obtained and installed them and that "
"you are familiar with its basic functions."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:98
msgid ""
"By default, PGG uses GnuPG@.  If you are new to such a system, I recommend "
"that you should look over the GNU Privacy Handbook (GPH)  which is available "
"at @uref{http://www.gnupg.org/documentation/}."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:106
msgid ""
"When using GnuPG, we recommend the use of the @code{gpg-agent} program, "
"which is distributed with versions 2.0 and later of GnuPG@.  This is a "
"daemon to manage private keys independently from any protocol, and provides "
"the most secure way to input and cache your passphrases (@pxref{Caching "
"passphrase}).  By default, PGG will attempt to use @code{gpg-agent} if it is "
"running.  @xref{Invoking GPG-AGENT,,,gnupg,Using the GNU Privacy Guard}."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:108
msgid "PGG also supports Pretty Good Privacy version 2 or version 5."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:114
msgid ""
"The toplevel interface of this library is quite simple, and only intended to "
"use with public-key cryptographic operation."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:117
msgid ""
"To use PGG, evaluate following expression at the beginning of your "
"application program."
msgstr ""

#. type: lisp
#: ../../pgg.texi:120
#, no-wrap
msgid "(require 'pgg)\n"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:124
msgid ""
"If you want to check existence of pgg.el at runtime, instead you can list "
"autoload setting for desired functions as follows."
msgstr ""

#. type: lisp
#: ../../pgg.texi:140
#, no-wrap
msgid ""
"(autoload 'pgg-encrypt-region \"pgg\"\n"
"  \"Encrypt the current region.\" t)\n"
"(autoload 'pgg-encrypt-symmetric-region \"pgg\"\n"
"  \"Encrypt the current region with symmetric algorithm.\" t)\n"
"(autoload 'pgg-decrypt-region \"pgg\"\n"
"  \"Decrypt the current region.\" t)\n"
"(autoload 'pgg-sign-region \"pgg\"\n"
"  \"Sign the current region.\" t)\n"
"(autoload 'pgg-verify-region \"pgg\"\n"
"  \"Verify the current region.\" t)\n"
"(autoload 'pgg-insert-key \"pgg\"\n"
"  \"Insert the ASCII armored public key.\" t)\n"
"(autoload 'pgg-snarf-keys-region \"pgg\"\n"
"  \"Import public keys in the current region.\" t)\n"
msgstr ""

#. type: menuentry
#: ../../pgg.texi:147
msgid "User Commands::"
msgstr ""

#. type: menuentry
#: ../../pgg.texi:147
msgid "Selecting an implementation::"
msgstr ""

#. type: menuentry
#: ../../pgg.texi:147
msgid "Caching passphrase::"
msgstr ""

#. type: section
#: ../../pgg.texi:147 ../../pgg.texi:325 ../../pgg.texi:326
#, no-wrap
msgid "Default user identity"
msgstr ""

#. type: section
#: ../../pgg.texi:149 ../../pgg.texi:150
#, no-wrap
msgid "User Commands"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:158
msgid ""
"At this time you can use some cryptographic commands.  The behavior of these "
"commands relies on a fashion of invocation because they are also intended to "
"be used as library functions.  In case you don't have the signer's public "
"key, for example, the function @code{pgg-verify-region} fails immediately, "
"but if the function had been called interactively, it would ask you to "
"retrieve the signer's public key from the server."
msgstr ""

#. type: deffn
#: ../../pgg.texi:159
#, no-wrap
msgid "Command pgg-encrypt-region start end recipients &optional sign passphrase"
msgstr ""

#. type: deffn
#: ../../pgg.texi:163
msgid ""
"Encrypt the current region between @var{start} and @var{end} for "
"@var{recipients}.  When the function were called interactively, you would be "
"asked about the recipients."
msgstr ""

#. type: deffn
#: ../../pgg.texi:166
msgid ""
"If encryption is successful, it replaces the current region contents (in the "
"accessible portion) with the resulting data."
msgstr ""

#. type: deffn
#: ../../pgg.texi:170
msgid ""
"If optional argument @var{sign} is non-@code{nil}, the function is request "
"to do a combined sign and encrypt.  This currently is confirmed to work with "
"GnuPG, but might not work with PGP or PGP5."
msgstr ""

#. type: deffn
#: ../../pgg.texi:173 ../../pgg.texi:181 ../../pgg.texi:192 ../../pgg.texi:203
msgid ""
"If optional @var{passphrase} is @code{nil}, the passphrase will be obtained "
"from the passphrase cache or user."
msgstr ""

#. type: deffn
#: ../../pgg.texi:175
#, no-wrap
msgid "Command pgg-encrypt-symmetric-region &optional start end passphrase"
msgstr ""

#. type: deffn
#: ../../pgg.texi:178
msgid ""
"Encrypt the current region between @var{start} and @var{end} using a "
"symmetric cipher.  After invocation you are asked for a passphrase."
msgstr ""

#. type: deffn
#: ../../pgg.texi:183
msgid "symmetric-cipher encryption is currently only implemented for GnuPG."
msgstr ""

#. type: deffn
#: ../../pgg.texi:185
#, no-wrap
msgid "Command pgg-decrypt-region start end &optional passphrase"
msgstr ""

#. type: deffn
#: ../../pgg.texi:189
msgid ""
"Decrypt the current region between @var{start} and @var{end}.  If decryption "
"is successful, it replaces the current region contents (in the accessible "
"portion) with the resulting data."
msgstr ""

#. type: deffn
#: ../../pgg.texi:194
#, no-wrap
msgid "Command pgg-sign-region start end &optional cleartext passphrase"
msgstr ""

#. type: deffn
#: ../../pgg.texi:200
msgid ""
"Make the signature from text between @var{start} and @var{end}.  If the "
"optional third argument @var{cleartext} is non-@code{nil}, or the function "
"is called interactively, it does not create a detached signature.  In such a "
"case, it replaces the current region contents (in the accessible portion) "
"with the resulting data."
msgstr ""

#. type: deffn
#: ../../pgg.texi:205
#, no-wrap
msgid "Command pgg-verify-region start end &optional signature fetch"
msgstr ""

#. type: deffn
#: ../../pgg.texi:209
msgid ""
"Verify the current region between @var{start} and @var{end}.  If the "
"optional third argument @var{signature} is non-@code{nil}, it is treated as "
"the detached signature file of the current region."
msgstr ""

#. type: deffn
#: ../../pgg.texi:213
msgid ""
"If the optional 4th argument @var{fetch} is non-@code{nil}, or the function "
"is called interactively, we attempt to fetch the signer's public key from "
"the key server."
msgstr ""

#. type: deffn
#: ../../pgg.texi:215
#, no-wrap
msgid "Command pgg-insert-key"
msgstr ""

#. type: deffn
#: ../../pgg.texi:217
msgid "Retrieve the user's public key and insert it as ASCII-armored format."
msgstr ""

#. type: deffn
#: ../../pgg.texi:219
#, no-wrap
msgid "Command pgg-snarf-keys-region start end"
msgstr ""

#. type: deffn
#: ../../pgg.texi:222
msgid ""
"Collect public keys in the current region between @var{start} and @var{end}, "
"and add them into the user's keyring."
msgstr ""

#. type: section
#: ../../pgg.texi:224 ../../pgg.texi:225
#, no-wrap
msgid "Selecting an implementation"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:232
msgid ""
"Since PGP has a long history and there are a number of PGP implementations "
"available today, the function which each one has differs considerably.  For "
"example, if you are using GnuPG, you know you can select cipher algorithm "
"from 3DES, CAST5, BLOWFISH, and so on, but on the other hand the version 2 "
"of PGP only supports IDEA."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:236
msgid ""
"Which implementation is used is controlled by the @code{pgg-scheme} "
"variable.  If it is @code{nil} (the default), the value of the "
"@code{pgg-default-scheme} variable will be used instead."
msgstr ""

#. type: defvar
#: ../../pgg.texi:237
#, no-wrap
msgid "pgg-scheme"
msgstr ""

#. type: defvar
#: ../../pgg.texi:240
msgid ""
"Force specify the scheme of PGP implementation.  The value can be set to "
"@code{gpg}, @code{pgp}, and @code{pgp5}.  The default is @code{nil}."
msgstr ""

#. type: defvar
#: ../../pgg.texi:242
#, no-wrap
msgid "pgg-default-scheme"
msgstr ""

#. type: defvar
#: ../../pgg.texi:245
msgid ""
"The default scheme of PGP implementation.  The value should be one of "
"@code{gpg}, @code{pgp}, and @code{pgp5}.  The default is @code{gpg}."
msgstr ""

#. type: section
#: ../../pgg.texi:247 ../../pgg.texi:248
#, no-wrap
msgid "Caching passphrase"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:255
msgid ""
"When using GnuPG (gpg) as the PGP scheme, we recommend using a program "
"called @code{gpg-agent} for entering and caching "
"passphrases@footnote{Actually, @code{gpg-agent} does not cache passphrases "
"but private keys.  On the other hand, from a user's point of view, this "
"technical difference isn't visible.}."
msgstr ""

#. type: defvar
#: ../../pgg.texi:256
#, no-wrap
msgid "pgg-gpg-use-agent"
msgstr ""

#. type: defvar
#: ../../pgg.texi:261
msgid ""
"If non-@code{nil}, attempt to use @code{gpg-agent} whenever possible.  The "
"default is @code{t}.  If @code{gpg-agent} is not running, or GnuPG is not "
"the current PGP scheme, PGG's own passphrase-caching mechanism is used (see "
"below)."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:267
msgid ""
"To use @code{gpg-agent} with PGG, you must first ensure that "
"@code{gpg-agent} is running.  For example, if you are running in the X "
"Window System, you can do this by putting the following line in your "
"@file{.xsession} file:"
msgstr ""

#. type: smallexample
#: ../../pgg.texi:270
#, no-wrap
msgid "eval \"$(gpg-agent --daemon)\"\n"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:274
msgid ""
"For more details on invoking @code{gpg-agent}, @xref{Invoking "
"GPG-AGENT,,,gnupg,Using the GNU Privacy Guard}."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:282
msgid ""
"Whenever you perform a PGG operation that requires a GnuPG passphrase, GnuPG "
"will contact @code{gpg-agent}, which prompts you for the passphrase.  "
"Furthermore, @code{gpg-agent} ``caches'' the result, so that subsequent uses "
"will not require you to enter the passphrase again.  (This cache usually "
"expires after a certain time has passed; you can change this using the "
"@code{--default-cache-ttl} option when invoking @code{gpg-agent}.)"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:290
msgid ""
"If you are running in a X Window System environment, @code{gpg-agent} "
"prompts for a passphrase by opening a graphical window.  However, if you are "
"running Emacs on a text terminal, @code{gpg-agent} has trouble receiving "
"input from the terminal, since it is being sent to Emacs.  One workaround "
"for this problem is to run @code{gpg-agent} on a different terminal from "
"Emacs, with the @code{--keep-tty} option; this tells @code{gpg-agent} use "
"its own terminal to prompt for passphrases."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:295
msgid ""
"When @code{gpg-agent} is not being used, PGG prompts for a passphrase "
"through Emacs.  It also has its own passphrase caching mechanism, which is "
"controlled by the variable @code{pgg-cache-passphrase} (see below)."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:305
msgid ""
"There is a security risk in handling passphrases through PGG rather than "
"@code{gpg-agent}.  When you enter your passphrase into an Emacs prompt, it "
"is temporarily stored as a cleartext string in the memory of the Emacs "
"executable.  If the executable memory is swapped to disk, the root user can, "
"in theory, extract the passphrase from the swapfile.  Furthermore, the "
"swapfile containing the cleartext passphrase might remain on the disk after "
"the system is discarded or stolen.  @code{gpg-agent} avoids this problem by "
"using certain tricks, such as memory locking, which have not been "
"implemented in Emacs."
msgstr ""

#. type: defvar
#: ../../pgg.texi:306
#, no-wrap
msgid "pgg-cache-passphrase"
msgstr ""

#. type: defvar
#: ../../pgg.texi:311
msgid ""
"If non-@code{nil}, store passphrases.  The default value of this variable is "
"@code{t}.  If you are worried about security issues, however, you could stop "
"the caching of passphrases by setting this variable to @code{nil}."
msgstr ""

#. type: defvar
#: ../../pgg.texi:313
#, no-wrap
msgid "pgg-passphrase-cache-expiry"
msgstr ""

#. type: defvar
#: ../../pgg.texi:315
msgid "Elapsed time for expiration in seconds."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:320
msgid ""
"If your passphrase contains non-ASCII characters, you might need to specify "
"the coding system to be used to encode your passphrases, since GnuPG treats "
"them as a byte sequence, not as a character sequence."
msgstr ""

#. type: defvar
#: ../../pgg.texi:321
#, no-wrap
msgid "pgg-passphrase-coding-system"
msgstr ""

#. type: defvar
#: ../../pgg.texi:323
msgid "Coding system used to encode passphrase."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:331
msgid ""
"The PGP implementation is usually able to select the proper key to use for "
"signing and decryption, but if you have more than one key, you may need to "
"specify the key id to use."
msgstr ""

#. type: defvar
#: ../../pgg.texi:332
#, no-wrap
msgid "pgg-default-user-id"
msgstr ""

#. type: defvar
#: ../../pgg.texi:335
msgid ""
"User ID of your default identity.  It defaults to the value returned by "
"@samp{(user-login-name)}.  You can customize this variable."
msgstr ""

#. type: defvar
#: ../../pgg.texi:337
#, no-wrap
msgid "pgg-gpg-user-id"
msgstr ""

#. type: defvar
#: ../../pgg.texi:341
msgid ""
"User ID of the GnuPG default identity.  It defaults to @samp{nil}.  This "
"overrides @samp{pgg-default-user-id}.  You can customize this variable."
msgstr ""

#. type: defvar
#: ../../pgg.texi:343
#, no-wrap
msgid "pgg-pgp-user-id"
msgstr ""

#. type: defvar
#: ../../pgg.texi:347
msgid ""
"User ID of the PGP 2.x/6.x default identity.  It defaults to @samp{nil}.  "
"This overrides @samp{pgg-default-user-id}.  You can customize this variable."
msgstr ""

#. type: defvar
#: ../../pgg.texi:349
#, no-wrap
msgid "pgg-pgp5-user-id"
msgstr ""

#. type: defvar
#: ../../pgg.texi:353
msgid ""
"User ID of the PGP 5.x default identity.  It defaults to @samp{nil}.  This "
"overrides @samp{pgg-default-user-id}.  You can customize this variable."
msgstr ""

#. type: chapter
#: ../../pgg.texi:355 ../../pgg.texi:356
#, no-wrap
msgid "Architecture"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:361
msgid ""
"PGG introduces the notion of a \"scheme of PGP implementation\" (used "
"interchangeably with \"scheme\" in this document).  This term refers to a "
"singleton object wrapped with the luna object system."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:366
msgid ""
"Since PGG was designed for accessing and developing PGP functionality, the "
"architecture had to be designed not just for interoperability but also for "
"extensibility.  In this chapter we explore the architecture while finding "
"out how to write the PGG back end."
msgstr ""

#. type: menuentry
#: ../../pgg.texi:371
msgid "Initializing::"
msgstr ""

#. type: menuentry
#: ../../pgg.texi:371
msgid "Back end methods::"
msgstr ""

#. type: section
#: ../../pgg.texi:371 ../../pgg.texi:452 ../../pgg.texi:453
#, no-wrap
msgid "Getting output"
msgstr ""

#. type: section
#: ../../pgg.texi:373 ../../pgg.texi:374
#, no-wrap
msgid "Initializing"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:378
msgid ""
"A scheme must be initialized before it is used.  It had better guarantee to "
"keep only one instance of a scheme."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:382
msgid ""
"The following code is snipped out of @file{pgg-gpg.el}.  Once an instance of "
"@code{pgg-gpg} scheme is initialized, it's stored to the variable "
"@code{pgg-scheme-gpg-instance} and will be reused from now on."
msgstr ""

#. type: lisp
#: ../../pgg.texi:385
#, no-wrap
msgid ""
"(defvar pgg-scheme-gpg-instance nil)\n"
"\n"
msgstr ""

#. type: lisp
#: ../../pgg.texi:390
#, no-wrap
msgid ""
"(defun pgg-make-scheme-gpg ()\n"
"  (or pgg-scheme-gpg-instance\n"
"      (setq pgg-scheme-gpg-instance\n"
"            (luna-make-entity 'pgg-scheme-gpg))))\n"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:394
msgid ""
"The name of the function must follow the "
"regulation---@code{pgg-make-scheme-} follows the back end name."
msgstr ""

#. type: section
#: ../../pgg.texi:395 ../../pgg.texi:396
#, no-wrap
msgid "Back end methods"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:401
msgid ""
"In each back end, these methods must be present.  The output of these "
"methods is stored in special buffers (@ref{Getting output}), so that these "
"methods must tell the status of the execution."
msgstr ""

#. type: deffn
#: ../../pgg.texi:402
#, no-wrap
msgid "Method pgg-scheme-lookup-key scheme string &optional type"
msgstr ""

#. type: deffn
#: ../../pgg.texi:406
msgid ""
"Return keys associated with @var{string}.  If the optional third argument "
"@var{type} is non-@code{nil}, it searches from the secret keyrings."
msgstr ""

#. type: deffn
#: ../../pgg.texi:408
#, no-wrap
msgid ""
"Method pgg-scheme-encrypt-region scheme start end recipients &optional sign "
"passphrase"
msgstr ""

#. type: deffn
#: ../../pgg.texi:413
msgid ""
"Encrypt the current region between @var{start} and @var{end} for "
"@var{recipients}.  If @var{sign} is non-@code{nil}, do a combined sign and "
"encrypt.  If encryption is successful, it returns @code{t}, otherwise "
"@code{nil}."
msgstr ""

#. type: deffn
#: ../../pgg.texi:415
#, no-wrap
msgid ""
"Method pgg-scheme-encrypt-symmetric-region scheme start end &optional "
"passphrase"
msgstr ""

#. type: deffn
#: ../../pgg.texi:420
msgid ""
"Encrypt the current region between @var{start} and @var{end} using a "
"symmetric cipher and a passphrases.  If encryption is successful, it returns "
"@code{t}, otherwise @code{nil}.  This function is currently only implemented "
"for GnuPG."
msgstr ""

#. type: deffn
#: ../../pgg.texi:422
#, no-wrap
msgid "Method pgg-scheme-decrypt-region scheme start end &optional passphrase"
msgstr ""

#. type: deffn
#: ../../pgg.texi:425
msgid ""
"Decrypt the current region between @var{start} and @var{end}.  If decryption "
"is successful, it returns @code{t}, otherwise @code{nil}."
msgstr ""

#. type: deffn
#: ../../pgg.texi:427
#, no-wrap
msgid ""
"Method pgg-scheme-sign-region scheme start end &optional cleartext "
"passphrase"
msgstr ""

#. type: deffn
#: ../../pgg.texi:432
msgid ""
"Make the signature from text between @var{start} and @var{end}.  If the "
"optional third argument @var{cleartext} is non-@code{nil}, it does not "
"create a detached signature.  If signing is successful, it returns @code{t}, "
"otherwise @code{nil}."
msgstr ""

#. type: deffn
#: ../../pgg.texi:434
#, no-wrap
msgid "Method pgg-scheme-verify-region scheme start end &optional signature"
msgstr ""

#. type: deffn
#: ../../pgg.texi:439
msgid ""
"Verify the current region between @var{start} and @var{end}.  If the "
"optional third argument @var{signature} is non-@code{nil}, it is treated as "
"the detached signature of the current region.  If the signature is "
"successfully verified, it returns @code{t}, otherwise @code{nil}."
msgstr ""

#. type: deffn
#: ../../pgg.texi:441
#, no-wrap
msgid "Method pgg-scheme-insert-key scheme"
msgstr ""

#. type: deffn
#: ../../pgg.texi:444
msgid ""
"Retrieve the user's public key and insert it as ASCII-armored format.  On "
"success, it returns @code{t}, otherwise @code{nil}."
msgstr ""

#. type: deffn
#: ../../pgg.texi:446
#, no-wrap
msgid "Method pgg-scheme-snarf-keys-region scheme start end"
msgstr ""

#. type: deffn
#: ../../pgg.texi:450
msgid ""
"Collect public keys in the current region between @var{start} and @var{end}, "
"and add them into the user's keyring.  On success, it returns @code{t}, "
"otherwise @code{nil}."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:458
msgid ""
"The output of the back end methods (@ref{Back end methods}) is stored in "
"special buffers, so that these methods must tell the status of the "
"execution."
msgstr ""

#. type: defvar
#: ../../pgg.texi:459
#, no-wrap
msgid "pgg-errors-buffer"
msgstr ""

#. type: defvar
#: ../../pgg.texi:462
msgid ""
"The standard error output of the execution of the PGP command is stored "
"here."
msgstr ""

#. type: defvar
#: ../../pgg.texi:464
#, no-wrap
msgid "pgg-output-buffer"
msgstr ""

#. type: defvar
#: ../../pgg.texi:466
msgid "The standard output of the execution of the PGP command is stored here."
msgstr ""

#. type: defvar
#: ../../pgg.texi:468
#, no-wrap
msgid "pgg-status-buffer"
msgstr ""

#. type: defvar
#: ../../pgg.texi:471
msgid ""
"The rest of status information of the execution of the PGP command is stored "
"here."
msgstr ""

#. type: chapter
#: ../../pgg.texi:473 ../../pgg.texi:474
#, no-wrap
msgid "Parsing OpenPGP packets"
msgstr ""

#. type: Plain text
#: ../../pgg.texi:479
msgid ""
"The format of OpenPGP messages is maintained in order to publish all "
"necessary information needed to develop interoperable applications.  The "
"standard is documented in RFC 2440."
msgstr ""

#. type: Plain text
#: ../../pgg.texi:481
msgid "PGG has its own parser for the OpenPGP packets."
msgstr ""

#. type: defun
#: ../../pgg.texi:482
#, no-wrap
msgid "pgg-parse-armor string"
msgstr ""

#. type: defun
#: ../../pgg.texi:484
msgid "List the sequence of packets in @var{string}."
msgstr ""

#. type: defun
#: ../../pgg.texi:486
#, no-wrap
msgid "pgg-parse-armor-region start end"
msgstr ""

#. type: defun
#: ../../pgg.texi:489
msgid ""
"List the sequence of packets in the current region between @var{start} and "
"@var{end}."
msgstr ""

#. type: defvar
#: ../../pgg.texi:491
#, no-wrap
msgid "pgg-ignore-packet-checksum"
msgstr ""

#. type: defvar
#: ../../pgg.texi:493
msgid "If non-@code{nil}, don't check the checksum of the packets."
msgstr ""

#. type: include
#: ../../pgg.texi:497
#, no-wrap
msgid "doclicense.texi"
msgstr ""

#. type: unnumbered
#: ../../pgg.texi:499 ../../pgg.texi:500
#, no-wrap
msgid "Function Index"
msgstr ""
