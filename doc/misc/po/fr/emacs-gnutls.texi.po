# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-09-22 12:29+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: settitle
#: ../../emacs-gnutls.texi:6
#, no-wrap
msgid "Emacs GnuTLS Integration @value{VERSION}"
msgstr ""

#. type: include
#: ../../emacs-gnutls.texi:7
#, no-wrap
msgid "docstyle.texi"
msgstr ""

#. type: copying
#: ../../emacs-gnutls.texi:11
msgid "This file describes the Emacs GnuTLS integration."
msgstr ""

#. type: copying
#: ../../emacs-gnutls.texi:13
msgid "Copyright @copyright{} 2012--2021 Free Software Foundation, Inc."
msgstr ""

#. type: quotation
#: ../../emacs-gnutls.texi:21
msgid ""
"Permission is granted to copy, distribute and/or modify this document under "
"the terms of the GNU Free Documentation License, Version 1.3 or any later "
"version published by the Free Software Foundation; with no Invariant "
"Sections, with the Front-Cover Texts being ``A GNU Manual,'' and with the "
"Back-Cover Texts as in (a) below.  A copy of the license is included in the "
"section entitled ``GNU Free Documentation License''."
msgstr ""

#. type: quotation
#: ../../emacs-gnutls.texi:24
msgid ""
"(a) The FSF's Back-Cover Text is: ``You have the freedom to copy and modify "
"this GNU manual.''"
msgstr ""

#. type: dircategory
#: ../../emacs-gnutls.texi:27
#, no-wrap
msgid "Emacs network features"
msgstr ""

#. type: menuentry
#: ../../emacs-gnutls.texi:30
msgid "Emacs GnuTLS: (emacs-gnutls)"
msgstr ""

#. type: menuentry
#: ../../emacs-gnutls.texi:30
msgid "The Emacs GnuTLS integration."
msgstr ""

#. type: title
#: ../../emacs-gnutls.texi:33
#, no-wrap
msgid "Emacs GnuTLS Integration"
msgstr ""

#. type: author
#: ../../emacs-gnutls.texi:34
#, no-wrap
msgid "by Ted Zlatanov"
msgstr ""

#. type: node
#: ../../emacs-gnutls.texi:43
#, no-wrap
msgid "Top"
msgstr ""

#. type: top
#: ../../emacs-gnutls.texi:44
#, no-wrap
msgid "Emacs GnuTLS"
msgstr ""

#. type: ifnottex
#: ../../emacs-gnutls.texi:46
msgid "This manual describes the Emacs GnuTLS integration."
msgstr ""

#. type: ifnottex
#: ../../emacs-gnutls.texi:51
msgid ""
"GnuTLS is a library that establishes encrypted @acronym{SSL} or "
"@acronym{TLS} connections.  Emacs supports it through the @file{gnutls.c} "
"and @file{gnutls.h} C files and the @file{gnutls.el} Emacs Lisp library."
msgstr ""

#. type: chapter
#: ../../emacs-gnutls.texi:61 ../../emacs-gnutls.texi:64 ../../emacs-gnutls.texi:65
#, no-wrap
msgid "Overview"
msgstr ""

#. type: menuentry
#: ../../emacs-gnutls.texi:61
msgid "Overview of the GnuTLS integration."
msgstr ""

#. type: menuentry
#: ../../emacs-gnutls.texi:61
msgid "Help For Users::"
msgstr ""

#. type: menuentry
#: ../../emacs-gnutls.texi:61
msgid "Help For Developers::"
msgstr ""

#. type: appendix
#: ../../emacs-gnutls.texi:61 ../../emacs-gnutls.texi:236 ../../emacs-gnutls.texi:237
#, no-wrap
msgid "GNU Free Documentation License"
msgstr ""

#. type: menuentry
#: ../../emacs-gnutls.texi:61
msgid "The license for this documentation."
msgstr ""

#. type: menuentry
#: ../../emacs-gnutls.texi:61
msgid "Function Index::"
msgstr ""

#. type: unnumbered
#: ../../emacs-gnutls.texi:61 ../../emacs-gnutls.texi:244 ../../emacs-gnutls.texi:245
#, no-wrap
msgid "Variable Index"
msgstr ""

#. type: Plain text
#: ../../emacs-gnutls.texi:73
msgid ""
"The GnuTLS library is an optional add-on for Emacs.  Through it, any Emacs "
"Lisp program can establish encrypted network connections that use "
"@dfn{Secure Socket Layer} (@acronym{SSL}) and @dfn{Transport Layer Security} "
"(@acronym{TLS}) protocols.  The process of using @acronym{SSL} and "
"@acronym{TLS} in establishing connections is as automated and transparent as "
"possible."
msgstr ""

#. type: Plain text
#: ../../emacs-gnutls.texi:79
msgid ""
"The user has only a few customization options currently: the log level, "
"priority string, trustfile list, and the minimum number of bits to be used "
"in Diffie-Hellman key exchange.  Rumors that every Emacs library requires at "
"least 83 customizable variables are thus proven false."
msgstr ""

#. type: chapter
#: ../../emacs-gnutls.texi:80 ../../emacs-gnutls.texi:81
#, no-wrap
msgid "Help For Users"
msgstr ""

#. type: Plain text
#: ../../emacs-gnutls.texi:89
msgid ""
"From the user's perspective, there's nothing to the GnuTLS integration.  It "
"Just Works for any Emacs Lisp code that uses @code{open-protocol-stream} or "
"@code{open-network-stream} (@pxref{Network,, Network Connections, elisp, The "
"Emacs Lisp Reference Manual}).  The two functions are equivalent, the first "
"one being an alias of the second."
msgstr ""

#. type: Plain text
#: ../../emacs-gnutls.texi:95
msgid ""
"There's one way to find out if GnuTLS is available, by calling "
"@code{gnutls-available-p}.  This is a little bit trickier on the W32 "
"(Windows) platform, but if you have the GnuTLS DLLs (available from "
"@url{https://sourceforge.net/projects/ezwinports/files/} thanks to Eli "
"Zaretskii) in the same directory as Emacs, you should be OK."
msgstr ""

#. type: defun
#: ../../emacs-gnutls.texi:96
#, no-wrap
msgid "gnutls-available-p"
msgstr ""

#. type: defun
#: ../../emacs-gnutls.texi:102
msgid ""
"This function returns non-@code{nil} if GnuTLS is available in this instance "
"of Emacs, @code{nil} otherwise.  If GnuTLS is available, the value is a list "
"of GnuTLS capabilities supported by the installed GnuTLS library, which "
"depends on the library version.  The meaning of the capabilities is "
"documented in the doc string of this function."
msgstr ""

#. type: Plain text
#: ../../emacs-gnutls.texi:107
msgid ""
"Oh, but sometimes things go wrong.  Budgets aren't balanced, television ads "
"lie, and even TLS and SSL connections can fail to work properly.  Well, "
"there's something to be done in the last case."
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:108
#, no-wrap
msgid "gnutls-log-level"
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:113
msgid ""
"The @code{gnutls-log-level} variable sets the log level.  1 is verbose.  2 "
"is very verbose.  5 is crazy.  Crazy! Set it to 1 or 2 and look in the "
"@file{*Messages*} buffer for the debugging information."
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:115
#, no-wrap
msgid "gnutls-algorithm-priority"
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:124
msgid ""
"The @code{gnutls-algorithm-priority} variable sets the GnuTLS priority "
"string.  This is global, not per host name (although @code{gnutls-negotiate} "
"supports a priority string per connection so it could be done if needed).  "
"For details see the "
"@uref{https://www.gnu.org/software/gnutls/documentation.html, GnuTLS "
"documentation} and the "
"@uref{https://gnutls.org/manual/html_node/Priority-Strings.html, GnuTLS "
"priority string syntax and description}."
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:126
#, no-wrap
msgid "gnutls-trustfiles"
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:141
msgid ""
"The @code{gnutls-trustfiles} variable is a list of trustfiles (certificates "
"for the issuing authorities).  This is global, not per host name (although "
"@code{gnutls-negotiate} supports a trustfile per connection so it could be "
"done if needed).  The trustfiles can be in PEM or DER format and examples "
"can be found in most Unix distributions.  By default the following locations "
"are tried in this order: @file{/etc/ssl/certs/ca-certificates.crt} for "
"Debian, Ubuntu, Gentoo and Arch Linux; "
"@file{/etc/pki/tls/certs/ca-bundle.crt} for Fedora and RHEL; "
"@file{/etc/ssl/ca-bundle.pem} for Suse; @file{/usr/ssl/certs/ca-bundle.crt} "
"for Cygwin; @file{/usr/local/share/certs/ca-root-nss.crt} for FreeBSD@.  You "
"can easily customize @code{gnutls-trustfiles} to be something else, but let "
"us know if you do, so we can make the change to benefit the other users of "
"that platform."
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:143
#, no-wrap
msgid "gnutls-verify-error"
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:148
msgid ""
"The @code{gnutls-verify-error} variable allows you to verify SSL/TLS server "
"certificates for all connections or by host name.  It defaults to @code{nil} "
"for now but will likely be changed to @code{t} later, meaning that all "
"certificates will be verified."
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:155
msgid ""
"There are two checks available currently, that the certificate has been "
"issued by a trusted authority as defined by @code{gnutls-trustfiles}, and "
"that the hostname matches the certificate.  @code{t} enables both checks, "
"but you can enable them individually as well with @code{:trustfiles} and "
"@code{:hostname} instead."
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:159
msgid ""
"Because of the low-level interactions with the GnuTLS library, there is no "
"way currently to ask if a certificate can be accepted.  You have to look in "
"the @file{*Messages*} buffer."
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:161
#, no-wrap
msgid "gnutls-min-prime-bits"
msgstr ""

#. type: defvar
#: ../../emacs-gnutls.texi:166
msgid ""
"The @code{gnutls-min-prime-bits} variable is a pretty exotic customization "
"for cases where you want to refuse handshakes with keys under a specific "
"size.  If you don't know for sure that you need it, you don't.  Leave it "
"@code{nil}."
msgstr ""

#. type: chapter
#: ../../emacs-gnutls.texi:168 ../../emacs-gnutls.texi:169
#, no-wrap
msgid "Help For Developers"
msgstr ""

#. type: Plain text
#: ../../emacs-gnutls.texi:176
msgid ""
"The GnuTLS library is detected automatically at compile time.  You should "
"see that it's enabled in the @code{configure} output.  If not, follow the "
"standard procedure for finding out why a system library is not picked up by "
"the Emacs compilation.  On the W32 (Windows)  platform, installing the DLLs "
"with a recent build should be enough."
msgstr ""

#. type: Plain text
#: ../../emacs-gnutls.texi:181
msgid ""
"Just use @code{open-protocol-stream} or @code{open-network-stream} (the two "
"are equivalent, the first one being an alias to the second).  You should not "
"have to use the @file{gnutls.el} functions directly.  But you can test them "
"with @code{open-gnutls-stream}."
msgstr ""

#. type: defun
#: ../../emacs-gnutls.texi:182
#, no-wrap
msgid "open-gnutls-stream name buffer host service &optional parameters"
msgstr ""

#. type: defun
#: ../../emacs-gnutls.texi:190
msgid ""
"This function creates a buffer connected to a specific @var{host} and "
"@var{service} (port number or service name).  The mandatory arguments and "
"their syntax are the same as those given to @code{open-network-stream} "
"(@pxref{Network,, Network Connections, elisp, The Emacs Lisp Reference "
"Manual}).  The connection process is called @var{name} (made unique if "
"necessary).  This function returns the connection process."
msgstr ""

#. type: defun
#: ../../emacs-gnutls.texi:194
msgid ""
"The optional @var{parameters} argument is a list of keywords and values.  "
"The only keywords which currently have any effect are "
"@code{:client-certificate} and @code{:nowait}."
msgstr ""

#. type: defun
#: ../../emacs-gnutls.texi:201
msgid ""
"Passing @w{@code{:client certificate t}} triggers looking up of client "
"certificates matching @var{host} and @var{service} using the "
"@file{auth-source} library.  Any resulting client certificates are passed "
"down to the lower TLS layers.  The format used by @file{.authinfo} to "
"specify the per-server keys is described in @ref{Help for "
"users,,auth-source, auth, Emacs auth-source Library}."
msgstr ""

#. type: defun
#: ../../emacs-gnutls.texi:205
msgid ""
"Passing @w{@code{:nowait t}} means that the socket should be asynchronous, "
"and the connection process will be returned to the caller before TLS "
"negotiation has happened."
msgstr ""

#. type: defun
#: ../../emacs-gnutls.texi:209
msgid ""
"For historical reasons @var{parameters} can also be a symbol, which is "
"interpreted the same as passing a list containing @code{:nowait} and the "
"value of that symbol."
msgstr ""

#. type: defun
#: ../../emacs-gnutls.texi:211
msgid "Example calls:"
msgstr ""

#. type: lisp
#: ../../emacs-gnutls.texi:215
#, no-wrap
msgid ""
";; open a HTTPS connection\n"
"(open-gnutls-stream \"tls\" \"tls-buffer\" \"yourserver.com\" \"https\")\n"
"\n"
msgstr ""

#. type: lisp
#: ../../emacs-gnutls.texi:218
#, no-wrap
msgid ""
";; open a IMAPS connection\n"
"(open-gnutls-stream \"tls\" \"tls-buffer\" \"imap.gmail.com\" \"imaps\")\n"
msgstr ""

#. type: findex
#: ../../emacs-gnutls.texi:222
#, no-wrap
msgid "gnutls-asynchronous-parameters"
msgstr ""

#. type: Plain text
#: ../../emacs-gnutls.texi:227
msgid ""
"If called with @var{nowait}, the process is returned immediately (before "
"connecting to the server).  In that case, the process object is told what "
"parameters to use when negotiating the connection by using the "
"@code{gnutls-asynchronous-parameters} function."
msgstr ""

#. type: Plain text
#: ../../emacs-gnutls.texi:230
msgid ""
"The function @code{gnutls-negotiate} is not generally useful and it may "
"change as needed, so please see @file{gnutls.el} for the details."
msgstr ""

#. type: defun
#: ../../emacs-gnutls.texi:231
#, no-wrap
msgid "gnutls-negotiate spec"
msgstr ""

#. type: defun
#: ../../emacs-gnutls.texi:234
msgid ""
"Please see @file{gnutls.el} for the @var{spec} details and for usage, but do "
"not rely on this function's interface if possible."
msgstr ""

#. type: include
#: ../../emacs-gnutls.texi:238
#, no-wrap
msgid "doclicense.texi"
msgstr ""

#. type: unnumbered
#: ../../emacs-gnutls.texi:240 ../../emacs-gnutls.texi:241
#, no-wrap
msgid "Function Index"
msgstr ""
